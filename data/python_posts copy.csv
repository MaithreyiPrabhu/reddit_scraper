selftext,title,id,sorted_by,num_comments,score,ups,downs
,Automate the boring stuff with python - tinder,7kpme8,top,348,6619,6619,0
,"MS is considering official Python integration with Excel, and is asking for input",7jti46,top,413,4572,4572,0
,Python Cheet Sheet for begineers,7mwgtw,top,124,4137,4137,0
,"We started late, but we managed to leave Python footprint on r/place!",63dkmq,top,77,3275,3275,0
,"Python Section at Foyle's, London",6no8fm,top,80,2896,2896,0
,Microsoft Considers Adding Python As an Official Scripting Language in Excel,7kcjeq,top,167,2670,2670,0
,xkcd: Python Environment,8fztrr,top,402,2411,2411,0
,Every article about python decorators be like...,714kww,top,123,2240,2240,0
,And so it begins... I’ve decided to start a new hobby and hopefully I can make some use out of it. Wish me luck!,8m9ei8,top,208,2094,2094,0
,Really??,7oaay5,top,340,1984,1984,0
,Instagram in Terminal,87ey18,top,108,1981,1981,0
,He's a Parsertongue.,5z1bsn,top,65,1755,1755,0
"Do not install or use the [ssh\-decorator](https://pypi.org/project/ssh-decorate/#files) package from Pip. It has a backdoor inserted to steal all your SSH credentials. I've already contacted the developer to take it out. He hasn't responded so for now, use at your own risk! [https://ibb.co/kdDk67](https://www.linkedin.com/redir/redirect?url=https%3A%2F%2Fibb%2Eco%2FkdDk67&urlhash=SFzn&_t=tracking_anet)

**UPDATE:** The compromised package has been taken down now.

https://i.redd.it/zu0guck3cmw01.png",Backdoor in ssh-decorator package,8hvzja,top,191,1638,1638,0
,I made a command-line tool that instantly fetches Stack Overflow results when you get a compiler error,8cwq72,top,80,1554,1554,0
,The Microsoft Excel team has responded to this suggestion to integrate Python with Excel. Can we show it some Reddit love?,3rukns,top,181,1544,1544,0
,Python surpasses C# in popularity among developers,845epf,top,175,1535,1535,0
,A path finder i recently made in Python PyGame,86ufrf,top,116,1525,1525,0
,Just finished my graduation cap for tomorrow,8h512c,top,123,1511,1511,0
,Found it funny ;),92tbgy,top,158,1480,1480,0
"Hello /r/python,

Python for Scientists and Engineers was the first book I wrote, and the one I still get queries about.  It had been out of print for more than a year, but I could never get myself to update it, because it looked like too much work.

Recently, I asked for help in updating it, and a few people volunteered. Thanks to these volunteers, the book is now free to read online (and will remain so). 

The book assumes you already know Python, or any other language. I feel there are too many resources for beginners, and not enough for intermediate/advanced programmers.

Anyway, check it out here:

[http://pythonforengineers.com/python-for-scientists-and-engineers/](http://pythonforengineers.com/python-for-scientists-and-engineers/)

Cheers,
Shantnu 




",Python for Scientists and Engineers is Now Free to Read Online,6bat6d,top,60,1476,1476,0
"[A letter in my own handwriting](http://imgur.com/a/W4ZIk).

I learned Python in 1998, and I used it pretty much daily through my working life. Its connectivity with everything has allowed me to do all kinds of interesting and fun things. When I discovered that the [AxiDraw](http://www.axidraw.com/) pen plotter has a [Python binding](https://github.com/inconvergent/axidraw-xy), I decided to try writing in my own handwriting with my own pen. Something I've been unable to do for years.

It has taken a lot, mostly because I can't type, so I've been limited to voice recognition and copy and paste, but the letter linked above is where I got to this evening.

I thought I would share my mini triumph.

I've learned and programmed in a lot of different languages over the years. I have written several languages myself. And even though Python wasn't my first language, it is the first language I consider for any new project. I'd have to have a compelling reason to use something else. So thank you, Python, for making this possible.

</ shameless preaching to the choir> ;)

---

Edit: In the comments a couple of people asked for a video. I will make a proper video with the AxiDraw as soon as I can. [We just did a quick test](https://youtu.be/W5YGwNlO53A) on my wife's Cricut craft cutter. It works there too, though you can't tilt the pen or change the pressure. So apologies it's not the proper plotter, but you can see how the paths are traced on this video.",Python Helped me Write Again,62q2sm,top,88,1452,1452,0
,Universities finally realize that Java is a bad introductory programming language,6xy6ld,top,302,1448,1448,0
"I decided it would be fun to give my latest book away for free for 48 hours. So starting today, you can get **Python 201: Intermediate Python** free through [Gumroad](https://gumroad.com/l/py201#) or [Leanpub](http://leanpub.com/python201/c/201free). 

If you go with Gumroad, then you will need to use the following offer code: **201free**. Note that if you want to receive updates to the book, you will want to create an account and add the book to your library. 

I currently support the following digital formats: **PDF**, **epub** and **mobi** 

You might also want to check out my blog which has lots of fun Python tutorials and links to my other books: http://www.blog.pythonlibrary.org/

**Update 2016-10-17**: For those of you who like numbers, I thought I'd share a bit of statistics with you. The number of people who used the Leanpub link to download the book hit **18,037** while approx. **6670** people used the Gumroad coupon. I don't have a simple way of checking who used both sites, so assuming that no one did, the total number of new readers is **24,707**!

That's so awesome! Thanks so much for your interest. I hope you all enjoy the book!",Python 201 Book is Free for 48 hours,57xaud,top,304,1326,1326,0
,"Python patch, first try.",8t5ouh,top,47,1325,1325,0
,Python Fractal Landscape,7cffpd,top,24,1316,1316,0
,TIL that seaborn refuses to use the jet color scheme in a most wonderful fashion,8psk37,top,99,1318,1318,0
,"Python overtakes R, becomes the leader in Data Science, Machine Learning platforms",6xtb87,top,99,1300,1300,0
,I create Linux related pics and upload them to GitHub in hi-res and this post is an x-post from r/linuxmasterrace/. It's the Python print in playing cards style for GNU/Linux users. The link to GitHub is in the comments.,6k7gh9,top,120,1300,1300,0
,A month ago /u/AlSweigart asked for help reviewing his book. I delivered and so did he.,8ixbcm,top,47,1290,1290,0
"Like basic looping, performance improvement, etc.","Senior Python Programmers, what tricks do you want to impart to us young guns?",7cs8dq,top,666,1284,1284,0
,I made this free tool for practicing Python (it's like Duolingo for learning to code),8juoum,top,80,1278,1278,0
,I made a FTP/SFTP client using python and tkinter,8niot2,top,98,1270,1270,0
,Ask microsoft to include Python in Windows by default,3l0o5p,top,332,1248,1248,0
,Python 3.7.0 released,8ue8kg,top,319,1246,1246,0
,Thought you guys might appreciate this.,5adirl,top,24,1209,1209,0
,Face tracking anime girl with proximity detection,8pa8ff,top,141,1183,1183,0
,Me doing my CS projects.,91ol3u,top,232,1180,1180,0
,Vim Python IDE,7e6pes,top,169,1173,1173,0
"Hello all

I asked you people if you are interested in learning Python by writing a Reddit bot some time back on r/learnprogramming. I received immense number of responses, so I'm posting it on r/python. It covers the process, practices and tools involved in writing a Reddit bot in Python.

Please post your feedback and questions in comments, and I'll be happy to answer them.

#**Requirements**:

1. You are somewhat familiar with programming in general, and have an idea about Python or other languages (like what are variables etc)
2. You  are on a Unix-like system with access to command line tools
3. Familiarity with [git](https://git-scm.com/) and [Github](https://github.com/) (Not really required...it is better if you are familiar)
4. A Reddit account

Even if you don't meet these requirements...no need to worry!

#**Introduction**

Writing a bot for Reddit is easier than you think, because Reddit provides a structured method to access its data via the [Reddit API](https://www.reddit.com/dev/api). There are amazing tools like [PRAW](https://praw.readthedocs.io/en/latest/) which can help simplify the process. PRAW is a Python wrapper for Reddit, and it takes the pain out of the process of writing a bot.


And as I said earlier, Python is an great language, which is easy to grasp for beginners. What even more amazing is it's community, which has made incredible open-source tools and libraries for almost anything. We will be using some of those, and you will realise how useful they are!

#**Important information - Please read**

1. While this post will cover a variety of programming topics, I highly encourage you to explore more. Go ahead and read the documentation of libraries used and think about how can you improve something in your project. I will possibly add more topics to this post.

2. Please **DO NOT CREATE SPAM** by letting your bot run on all of Reddit before you have thoroughly tested it. **r/test** exists for you to do all sorts of testing with your bot...please use it. Refer to [botiquette](https://www.reddit.com/wiki/bottiquette) and keeping in mind the type of bot you create, comply with the guidelines.

#**The code and resources**

I jus wrote a bot for Reddit, which posts a textual explanation of the popular webcomic [xkcd](https://www.xkcd.com) whenever it encounters an xkcd link. It is named **explainxkcdbot**. As of now, I have set my bot to run on r/test only to let you people test it all you want.


You can find the complete source code on my Github page - 
**https://github.com/aydwi/explainxkcdbot**

Here is the code for the bot -
**https://github.com/aydwi/explainxkcdbot/blob/master/explainxkcdbot.py**


#**How to run the bot**

The process is given here - https://github.com/aydwi/explainxkcdbot/blob/master/README.md

If you have any problems in running the bot, please let me know in the comments.


#**Let us begin**

We will move forward step-by-step in the code, and see what is going on.

##Section 1 - Importing libraries


https://gist.github.com/aydwi/e5e4f294b66adf1cb025a70a0392f847


This is the beginning of the program. Any line which begins with a `#` sign is a comment in Python, so it is not interpreted as code. Then we import the essential libraries required for out program. These libraries contain the methods (or functions) which we will use throughout our program. The syntax is pretty straightforward. Next we see 3 variables with some values assigned to them. More on them later.


##Section 2 - Authenticating


https://gist.github.com/aydwi/b941d04d8128e415d6630e961cc97988


This is where important things begin. Before proceeding, you should have a basic idea of what are **[classes](https://docs.python.org/3/tutorial/classes.html)** and **[methods](https://stackoverflow.com/questions/3786881/what-is-a-method-in-python)** in Python. One more important thing is an **object** - it is an instance of class, which holds the data variables declared in class and the **member functions work on these objects**. Please make a comment if you do not understand, I will try to explain.


`def authenticate():` defines a function which will try to authenticate the bot to Reddit. This is where PRAW comes into play as it provides us methods to do this. Remember we created a *praw.ini* file earlier. It is a configuration file that stores authentication credentials, so that you just call it whenever needed.


Next, we pass authentication parameters to `praw.Reddit()`. Here `explainbot` refers to the credentials in the configuration file, and `user_agent` is a descriptive string about your script/bot. This returns a [Reddit instance](https://praw.readthedocs.io/en/latest/code_overview/reddit_instance.html), which we assign to the variable `reddit`, and use this variable whenever we wish to authenticate.


Next up, we make a print statement to see who is getting authenticated i.e. the name. The `user` class in PRAW provides methods for the currently authenticated user. We call the method `me()` on `user` and then call it on the variable holding the Reddit instance for authentication, which in our case is `reddit`. So the statement becomes `reddit.user.me()`. We just use some [formatting in python](https://pyformat.info/) to print it.


Finally we `return` the variable `reddit`. Now i can use this `authenticate()` function in my program by calling it when I need it, and it will give me the variable `reddit`, which stores the Reddit instance.

------------------------------

**Important note 1:** Why did I create a function? It is because creating functions makes us easy to manage out code. We write separate functions for separate features of the program, and call them wherever needed. This breaks the code into manageable chunks, which makes it easy to read, modify and debug.

------------------------------

##Section 3 - Scraping


https://gist.github.com/aydwi/699123424e7b38da19d62e69339e859c


Next up is the function `def fetchdata(url)`. Notice how this function takes a parameter `url`. We pass this parameter whenever we call this function. The purpose of this function is to scrape/gather the data from the web, in order to post an explanation.


**Now scraping is not a very reliable process**, but sometimes we just have to do it. We go to a website, go through it's HTML source, and extract the text, links etc. that we want. Here we use **[Requests](http://docs.python-requests.org/en/master/user/quickstart/#make-a-request)** library to make a web request, and **[Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/)** to extract the data.


`r = requests.get(url)` gives a Response object called `r`. We can get all the information we need from this object. Then we call the method `content` on `r`, and pass it to `soup = BeautifulSoup(r.content, 'html.parser')`, which gives us a `soup` object with which we can retrieve elements of a web page. Read more [here](https://www.crummy.com/software/BeautifulSoup/bs4/doc/).


Now what happens depends on what are you scraping. Every website has different type of content, and you should go through the HTML to see how can you retrieve what you want. In my case http://explainxkcd.com has it's explanation inside the first few `<p>` tags, so I look for the first `<p>` tag by `tag = soup.find('p')`. Also, immediately after the explanation ends, `<h2>` tag follows, so I know where to stop. Now take a look here-

    while True:
        if isinstance(tag, bs4.element.Tag):
            if tag.name == 'h2':
                break
            if tag.name == 'h3':
                tag = tag.nextSibling
            else:
                data = data + '\n' + tag.text
                tag = tag.nextSibling
        else:
            tag = tag.nextSibling

I continue to look through the tags, and store textual data in a `string` named `data` and move to the next tag. I `break` the process if I encounter `<h2>` because I know that is where explanation ends. The code depends on the structure of website you are scraping. Finally, I return `data`, so that now when I call the function like `fetchdata('http://explainxkcd.com/1024')` for example, it returns me the explanation of comic 1024 as a `string` named `data`.

----------------

**Important note 2:** Scraping is unreliable. If the website changes it's structure, you have to change your code. In this case, it can still include some tags which we don't want. The line `if (tag.name == 'h3')` in the above function is for handling one such unexpected situation I encountered on http://explainxkcd.com. This is why we like to have APIs. 

--------------------------


##Section 4 - Using regular expressions, parsing URLs, handling exceptions and preventing duplicate submissions


https://gist.github.com/aydwi/700db3e46770d13fe89356d0fa4f570d


This function which takes a parameter which is a Reddit instance (remember that Reddit instance from Section 1). Again we use PRAW to get one or more subreddits, and go through their comments. See [here](https://praw.readthedocs.io/en/latest/code_overview/reddit/subreddits.html) and [here](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html).

You can pass multiple subreddits like `for comment in reddit.subreddit('test+learnprogramming+pics')`.

**Regular Expressions**: Now I want to extract xkcd links from the comments, so I need to look for a pattern for the URL. xkcd links are of the form `https://www.xkcd.com/[some number]`. So we make use of regular expressions from the `re` library to match the pattern. [More about regular expressions](https://regexone.com/references/python).

    match = re.findall(""https://www.xkcd.com/[0-9]+"", comment.body)
        if match:
            print(""Link found in comment with comment ID: "" + comment.id)
            xkcd_url = match[0]

Here I look for all strings that are like `https://www.xkcd.com/[some number]` using the method `findall` from [user comments](http://praw.readthedocs.io/en/latest/code_overview/models/comment.html), and if it matches, it returns a list with the matching URL, and we store our URL in the variable `xkcd_url`.

----------------

**Important note 3:** Try to find out regular expressions (regex) to improve this program. What happens if a user posts 'https://xkcd.com/1024' or http version as 'http://www.xkcd.com/1024'. These are still valid xkcd URLs. There can be some other cases where the URL might be placed between a bunch of symbols in a comment. Try to modify the regex statement so that it can detect these cases as well.

--------------------------


**URL parsing**: Now I have an xkcd URL. I have 2 immediate objectives now- 

Objective 1. To extract the comic number at the end of the URL. We use [urllib.parse](https://docs.python.org/3/library/urllib.parse.html) for this purpose.

    url_obj = urlparse(xkcd_url)
            xkcd_id = int((url_obj.path.strip(""/"")))

Objective 2. Form a complete **explainxkcd.com** URL, which I will pass as a parameter to the function `fetchdata(url)` (See Section 2)

    myurl = 'http://www.explainxkcd.com/wiki/index.php/' + str(xkcd_id)

Both objectives are thus complete.

**Preventing duplicate submissions and Exception handling**: The bot needs to make sure it replies to every comment only once. There are many methods you can try which include using a separate key-value database like [Memcached](https://memcached.org/), but we will use a simpler approach.


Just create a text file (remember commented.txt), store the comment ID of a comment in it when you  visit a relevant comment, and verify if a comment ID already exists in that file before making new comments. Remember to put the location of the text file in the `path` variable (from Section 1), so that you can pass it to the method `open()`.


Now, what happens when a user makes a comment like 'https://www.xkcd.com/689243348723'. This xkcd does not exist, but the program will extract '689243348723', then form a link like http://www.explainxkcd.com/wiki/index.php/689243348723, and pass it to the function `fetchdata(url)`. Now **the function will return an exception and your program will stop/crash**. You need to take care of these situations.

This is achieved using `try`, `except` and `else` blocks. [See here](https://docs.python.org/3/tutorial/errors.html) Here is the code for these 2 steps-

    file_obj_r = open(path,'r')
                        
            try:
                explanation = fetchdata(myurl)
            except:
                print('Exception!!! Possibly incorrect xkcd URL...\n')
                # Typical cause for this will be a URL for an xkcd that does not exist (Example: https://www.xkcd.com/772524318/)
            else:
                if comment.id not in file_obj_r.read().splitlines():
                    print('Link is unique...posting explanation\n')
                    comment.reply(header + explanation + footer)
                    
                    file_obj_r.close()

                    file_obj_w = open(path,'a+')
                    file_obj_w.write(comment.id + '\n')
                    file_obj_w.close()
                else:
                    print('Already visited link...No reply needed\n')


Notice how I make a reply to a relevant comment by using the variables from Section 1 to print header and footer description alongside the explanation - `comment.reply(header + explanation + footer)`


Next we make some `sleep` statements to stop the bot from querying Reddit too fast. If the Reddit API returns an error due to too many requests, adjust `val` in the instances of `time.sleep(val)` in your program.


##Section 5: The main function


https://gist.github.com/aydwi/99323ebd710428f4590077a844236f83


We are almost done here. We wrap our functions into a `main` function by calling `authenticate()` (remember Section 1) and passing it to the function which runs the bot, namely `run_explainbot(reddit)`. Since we are calling it inside `while` loop with the expression 'True', it will run indefinitely.


#My bot in action


Test post to show the bot in action: https://redd.it/6tey71 (Since I'm not running it continuously as of now, it won't reply to every comment containing an xkcd link there)

My Terminal emulator while running the bot: http://imgur.com/4TzEyor


**Finally, if you want to take this project further, you are welcome to contribute code to [my Github repository](https://github.com/aydwi/explainxkcdbot). You can fork it (please note that there are still some checks to be added in order to make the bot more Reddit friendly) or open a pull request.** I'll try to add more details about file handling and scraping aspects of the program once I get some time. 
","I wrote a Reddit bot in Python a few weeks back, and asked people if they were interested in learning the process, tools and practices. I'm posting it on r/Python, and hope you find it helpful.",78uvdw,top,55,1172,1172,0
,My nephew got his first Raspberry Pi today :),8tkgr5,top,90,1122,1122,0
,"NumPy receives first ever funding, thanks to Moore Foundation",6h2g42,top,67,1102,1102,0
"From the latest [Vault 7 leaks](https://wikileaks.org/ciav7p1/cms/index.html) from Wikileaks, we can see that CIA uses a lot of Python in its secret hacking tools.

Most notably in the Assassin, Caterpillar, MagicViking and Hornet projects.

Unfortunatelly, no files from these projects have been released yet. But if you look at the dump that was released, there are plenty of .py files, and even PIL is included.

There are even Coding Conventions: https://wikileaks.org/ciav7p1/cms/page_26607631.html

You can see more Python-related stuff here: https://search.wikileaks.org/?query=python&exact_phrase=&any_of=&exclude_words=&document_date_start=&document_date_end=&released_date_start=&released_date_end=&publication_type%5B%5D=51&new_search=False&order_by=most_relevant#results",CIA uses Python (a lot),5y2boe,top,228,1099,1099,0
,"I got a funny error trying to open a file, and decided to illustrate it.",1fymy0,top,48,1085,1085,0
,10 awesome features of Python that you can't use because you refuse to upgrade to Python 3,69ws4c,top,301,1085,1085,0
,What a surprise: had some Python swag in the mail today!,7pid7p,top,33,1076,1076,0
,"For anyone learning Python for data science, this an amazing resource--excellent book as free Jupyter notebooks",5qflfv,top,36,1035,1035,0
,A REAL Python cheat sheet for beginners,8w5ra9,top,62,1033,1033,0
,Transfer of Power (Guido stepping down as BDFL),8yapie,top,497,1022,1022,0
,NumPy announces timeline for dropping Python 2 support,7d128x,top,149,1019,1019,0
,You can hire Guido as a tutor,3p12ww,top,134,1021,1021,0
,SMS Spoofing with Python for Good and Evil,6dtp3d,top,60,1005,1005,0
,The apocalypse,92zezn,top,149,994,994,0
,"Just started Python, felt pretty good to write a script that did my homework for me👌",9dpiuu,top,215,998,998,0
,I wrote a script to display an image in terminal using ANSI codes,964qci,top,71,991,991,0
,Got some free time this weekend and want to build your Python and machine learning skills? Here's how to train your own object detector using Google's Python-based TensorFlow framework.,7zpn7y,top,33,986,986,0
,I accidentally deleted some Python source code but it was still resident in a running process - here's how I got it back,5yqgc3,top,101,972,972,0
,boo.py,7a0qe0,top,21,945,945,0
,Python is becoming the world’s most popular coding language,928hd9,top,190,946,946,0
,The Google reCaptcha solver bot that I made in action.,8o9k0s,top,110,940,940,0
"Hi guys.
I came across this in r/technews and thought it would be useful here; particularly if you are looking at using python for data analysis/machine learning etc.

>This computer science course provides an overview of AI, and explains how it can be used to build smart apps that help organizations be more efficient and enrich people’s lives. It uses a mix of engaging lectures and hands-on activities to help you take your first steps in the exciting field of AI.

[Link to Microsoft Blog](https://blogs.microsoft.com/ai/microsoft-professional-program-ai/?utm_source=reddit&utm_campaign=75010&utm_term=technews)

[Link to Microsoft course](https://academy.microsoft.com/en-us/professional-program/tracks/artificial-intelligence/)","Aiming to fill skill gaps in AI, Microsoft makes training courses available to the public",89b73q,top,52,935,935,0
,Instagram Makes a Smooth Move to Python 3 - The New Stack,6hgsqr,top,127,928,928,0
"Hey everyone, I'm a C/C++ programmer who recently discovered Python.  My friend told me about PyGame, and I decided to try to write an entire game in it.  I want to tell you the order I did things in, as I think you might find it interesting, and maybe try it yourself some time!

**Background:**

Epikos is an RPG I'd been wanting to make for years, but never really had the time to make.  Python, however, writes really expressive code and can really accelerate dev time.  I feel like I can write code 50X faster in Python than in C++.

Since I have a day job, this had to be a project which I could do after work.  Entire thing took about two years, including making all the assets for the game and all the tools.  Workload was about 2 hours after work each day, and a lot more time on the weekends.

**Step 1:  Making the tools for the game**

For reference, game screenshots can be seen here:

http://www.epikosrpg.com/screenshots/

**The Console:**

First, I made what I call a ""console.""  It's a bit like a DOS or Linux shell.  I wanted this so I could type commands into my game and the toolset used to create the game.  It doesn't look like much, but here is an example of what the console looks like:

http://imgur.com/mMutYwL

**The Paint Program:**

Next, the game needed a program to create sprite art in.  I could have used photoshop, aesprite, or any number of paint programs, but I wanted to make my own custom sprite animation tool, and I wanted it in Python.  I had barely done any python coding at this point, but even then the paint tool took only a couple of days to write.  It's called tilemake, and it looks like this:

http://imgur.com/Qw4BMMc

As you can see, this paint tool uses the console, which I had built first.  In the above example, I have loaded the ""knight"" sprite, which is used for one of the main characters in the game.  The tool shows you multiple zoomed in versions of the sprite (""mips"") and you can paint on any one of them, using the CGA color palette.  You can also animate the sprites in this very tool.

I got a lot of milage out of this tool, as the game has 826 sprite frames in it, all made with this very paint program.

**The Map Editor:**

Now, my game needed 2D maps.  Since I had some art made with the paint program, it was time to arrange this art in the form of a map.  The map editor looks like this:

http://imgur.com/qLA9vYk

There are several components to this editor, but keep in mind I'm sticking 100% to Python.  In the main view, you can zoom and scroll about with the mouse, and paint using several different sized brushes.

You can see a column to the right which says ""natural"".  This shows all the sprites which are used in a natural environment.  There are other categories, such as indoors, dungeon, etc.  Categories were important, since I have many, many different sprites.

Finally, on the bottom you can see our old friend, the console.

**Step 2:  The Game Itself:**

Once you have the map editor, making a game isn't really that different, it just has gameplay logic.  Most of it is really simple, this includes combat logic, movement, etc.  I'm not going to go into the details of these since writing them in Python should be fairly trivial, but ask me if you want something explained in greater detail.  I will, however, go over some highlights and gotchas:

**AStar (A*):**

A* is a common AI algorithm used for pathing.  Implementing it in Python is pretty easy.  Python reads a lot like pseudocode, and A* can be found on wikipedia:

https://en.wikipedia.org/wiki/A*_search_algorithm

That code isn't really very different from Python is it?  As an excercise, you can try pasting that into Python and see what you need to change.  Hint:  not much.  Shouldn't take you more than half an hour to get some good AI pathing going.

**Save/Load with Pickle:**

I *love* pickle, and used it for save/loading.  It's a standard Python module, so if you haven't used it yet you should check it out.  One gotcha was that saveing and loading maps was too expensive in pickle, so I compressed the maps first with basic dictionary encoding, and then used pickle on them.

When writing save/load, make sure to include version filtering or some mechanism so that if you change file formats later on, older files are automatically updated.  You don't want your players to lose progress just because you patched and changed savegame format!

**Font?:**

There are several legal issues surrounding the use of fonts on a cross-platform title, and I really didn't want to bother with that.  I couldn't find a good free font which matched my art style, so I created my own font for my game.  If you can do this, I recommend it, because then you own it and can use it forever.

**Music:**

One thing I didn't write from scratch was the music authoring software.  Audio isn't really my expertise, but I wanted NES sounding music.  I ended up using this:

http://famitracker.com/

Famitracker is a fun way to write NES-sounding music, and indeed it actually writes to the nes file format.  Of course, PyGame can't play this, so I converted it to .ogg format.  Why .ogg?  I found that other supported formats tended to crash pygame, so I recommend that one.

**Sound FX:**

Similarly, I wanted an old-school feeling for my sound FX.  Authoring these in famitracker didn't seem that efficient, but someone showed me a tool called bfxr:

http://www.bfxr.net/

This let me create all kinds of sounds for my game.  For more complicated sounds, I needed to fallback to famitracker, but 90% of the sounds were in bfxr.

**Shipping the Game:**

I couldn't ship raw .py files, so I used pyinstaller to turn my game into a single .exe file.  I had tried python2exe, but couldn't get it to work very well with pygame.  Maybe you can have better luck with python2exe, but I'd recommend pyinstaller.  PyInstaller uses another library called setupTools.  For some reason, my .exe wouldn't work with the latest version of setupTools (gave an error and immediately quit), so I had to do this:

pip install setuptools==19.2

That gives you the older version, which should work.

The last part of shipping is making the .exe and game assets into an installer.  For this I used something called NSIS.  Sadly, I can't recommend you use this at this point, since it was on Sourceforge and if you go there now you'll probably get viruses and malware (RIP Sourceforge).  If you happen to have an older version of NSIS, I recommend backing it up on your google drive, since re-downloading it is not an option.

**Conclusion:**

While there were some gotchas, I didn't have too much trouble making a small-scale game 100% in Python, and it was a suitable project to do after work, even while working a full-time job.  

Happy coding!

**Edit:**

Thank you for the Reddit gold.  This has inspired me to share some other misc info with you now:

*  One huge advantage of Python is that porting from Windows to Linux only took an afternoon.  I did it all on virtualbox running Mint.  In fact, setting up virtualbox to run Mint was harder than porting the game.  There were two gotchas.  First, if you're using time.clock() on windows, make sure to change it to time.time() on Linux.  Second, some of the backslashes in filenames needed to be changed to forward slashes.  That's it!!!

*  If you are on Windows, I recommend trying the Python plug-in for Visual Studio.  I didn't actually use it while developing my game, but I think it would have helped from time to time.  It gives breakpoints, variable watch, and callstack info.



",How I built an entire game and toolchain 100% in Python using PyGame,4hazs4,top,142,920,920,0
,Python 3.6.0 has now been officially released!,5jwf41,top,101,922,922,0
,I've created a debugger which lets you conveniently view the value of every expression,7v0q88,top,111,901,901,0
,Hacking WiFi to inject cryptocurrency miner to HTML requests with Python,7o23lb,top,75,903,903,0
,Top 10 Python libraries of 2016,5jf64k,top,64,903,903,0
"Hi there, my name is Harrison and I frequently do Python programming tutorials on [PythonProgramming.net](https://pythonprogramming.net) and [YouTube.com/sentdex](https://www.youtube.com/user/sentdex).  All tutorials are free in both text and video forms.

The latest series that I have put out is [Python for Finance](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/). The aim of this series is to show what can be done with Python in the field of finance and algorithmic trading using data science (spoiler alert: a lot!). 

Even though you probably aren’t going to get rich, you might save yourself a lot of money (when you back test your silly trading idea and realize it’s bad), and you’ll learn about statistics and data science with Python along the way. 

I start the series off with a simplistic introduction to using Python+[Pandas](https://pythonprogramming.net/data-analysis-python-pandas-tutorial-introduction/)+[Matplotlib](https://pythonprogramming.net/matplotlib-intro-tutorial/)  to get stock data, visualize stock data, and to manipulate this data. 

From here, we get into Quantopian, which is a Python-based platform built on top of the Zipline library for back-testing, but has since expanded out to enable quite a bit more than that.

We use Quantopian both for simplistic back testing, but also for doing research into future trading strategies, since Quantopian also provides a bunch of free data like minute pricing data, fundamentals along with tools like [Alphalens](https://github.com/quantopian/alphalens) for analyzing various factors that you believe to be beneficial to a trading strategy.

If you would like to check it out, the series starts here: 
[Python for Finance introduction](https://pythonprogramming.net/getting-stock-prices-python-programming-for-finance/)

If you are already familiar with Pandas and want to jump straight into the strategies and using Quantopian for back-testing and research:
[Algorithmic trading and research with Quantopian](https://pythonprogramming.net/quantopian-trading-strategies-introduction-python-programming-for-finance/)

If you have any questions, requests, or suggestions, feel free to ask here or on the respective tutorials.",Python for Algorithmic Trading and Investing tutorial series,5sel2v,top,54,885,885,0
,[off?] My wife made me a python banner,7oz812,top,56,883,883,0
,"Ubuntu 16.04 LTS released with Python 3.5 as standard, rather than Pyhon 2.7!",4fuywi,top,143,869,869,0
,The Ultimate List of Python YouTube Channels,8s07vc,top,42,867,867,0
"I feel like there are a lot of packages out there that are incredibly useful, but often get overlooked for one reason or another. It seems like people spend a lot of time re-implementing something that's already been done pretty well, and that's too bad. Because, using a nice package with a slick api is like taking a breath of crisp morning mountain air.

So here's some packages I love that I think folks should know about and take a look for themselves:

[Inflection](http://inflection.readthedocs.io/en/latest/): Inflection is ridiculously useful. It has all kinds of tools for altering strings into different formats. Think, conversion from CamelCase to snake\_case. Or, even ordinalizing numbers (1 -> 'first'). Pluralization is in there too. It's really handy with lots of features. I've used it for a few years now without any problems and a whole lot of fresh air in my life.

[Pendulum](https://pendulum.eustace.io/): Python's datetime library is....well, painful to use. It has most everything you need, but doing what you want might be a whole afternoon of consternation. I used a few date/time libraries before I stumbled onto Pendulum. This library is really great. Not only does it offer a great parser that you rarely have to provide anything more than a string representation of a datetime, but it has lots of really useful utilities for working with dates and times (and both). Finally, the best part is that it's a \_drop-in\_ replacement! In fact, Pendulum DateTime objects inherit from python's native DateTime, so you can almost always use them anywhere you would use normal DateTime. This one has been a favorite for a long time.

[pprintpp](https://github.com/wolever/pprintpp): Python's native pretty-printer often renders stuff that's...well, not pretty at all. I often deal with a lot of deeply nested native data-structures (basically JSON rendered into python), and when I'm debugging python's pretty-printer feels pretty stuffy. Enter pprintpp. It's a drop-in replacement that can monkey-patch the built-in pprint function. At any rate, my deeply-nested dicts are formatted with a whole lot more readability in my logs with this package

[Snakeviz](https://jiffyclub.github.io/snakeviz/): Profiling performance becomes a pretty necessary task in most python projects with any degree of longevity. However, exploring profile dumps can be a super stuffy experience a lot of times. I've suffered through enough non-intuitive files and interfaces trying to dig down to the cause of slowness in my lifetime. Then, I found Snakeviz. It provides a really intuitive, interactive, in-browser way to explore profiling information. This tool has actually made profiling fun and exciting, and I can't recommend it enough.

[Livereload](https://github.com/lepture/python-livereload): Suppose you're doing something like, say, working on your project's documentation. It's really not fun to, after each tweak of your config or doc files, have to manually run the sphinx-build commands and then open the produced html in a browser. Instead, you might try Livereload. You provide a list of files to watch, run it, and open a browser. Then, any time you change the file, your page will automatically reload. It's a core element of one of my personal projects (sphinx-view...and this doesn't count as my plug), and without it things would be a lot more painful. It can also be used for any number of other situations where html is produced from source files. It's pretty easy to use, too, and soo crisp and cool when you see it in action.

Finally...my plug:

[py-buzz](https://github.com/dusktreader/py-buzz): ""That's not flying, it's falling with style."" Honestly...I have way too much fun with the name. The whole point of this package is that I found myself re-writing the same pattern over and over with custom exceptions. Typically, when I'm writing a new library, I end up with a custom exception base-class that I use (along with derived exceptions) throughout the project. Then, I end up doing the same thing over and over. Well, I took that irritation and turned it into a tool. The handiest parts of this package is the \`Buzz.require\_condition\` function that acts like an assert that isn't disabled in production and \`Buzz.handle\_errors\` which gives you a context manager to handle exceptions within a block. I dog-food the hell out of this package, so it should be in great working order. There's other neat features, but I'll let you read up yourself, if you're interested.

If not, please enjoy learning about the other 5 packages above.

And, please remember, if you find yourself dealing with something annoying: Stop. Google the problem. Find a package that already does it. Install that. Breathe the fresh mountain air.","5 rarely mentioned but super useful packages you should know about. Also, one of mine",8wc2vi,top,53,864,864,0
,Flask 1.0 released,8f61xl,top,69,858,858,0
,I did a meme,7x7izl,top,116,854,854,0
,"O'Reilly offers ""Functional Programming in Python"" by David Mertz as free eBook.",553s3g,top,69,847,847,0
,"""Learn Python"" Overtakes ""Learn Java"" on Google Trends",3zv0p1,top,119,850,850,0
,Python is the 2nd most popular language on GitHub,75slcp,top,90,841,841,0
,"100 Python books, categorized and ranked",6n9kbj,top,46,834,834,0
,"In case of fire, light a fire.",5fqln4,top,118,825,825,0
,Python has clearly overtaken Java in popularity on StackOverflow and trails only JavaScript,6wmsbq,top,112,825,825,0
,Ubuntu plans to switch to Python3 by default for the 16.04 release.,35abd2,top,285,821,821,0
,Turtle module drawing a randomised landscape,7mo2l8,top,42,810,810,0
,"The 2017 Top Programming Languages: Python jumps to No. 1, and Swift enters the Top Ten",6ozf9d,top,121,802,802,0
,Python made animation.,70nxze,top,52,802,802,0
,Machine Learning in a Year (in Python) - From noob to professional,527yxc,top,59,799,799,0
,Congratulations r/Python! You are the SUBREDDIT OF THE DAY!,1tilfi,top,27,788,788,0
"i work as an oss tech for a bank, i have a semi mathy hs/college background.

about a year ago my boss asked if there's any way we could monitor some machines we have up on racks in our DR site, i raised my hand and said i could write a python script that pings them and generates reports... he said 'awesome' do it... trouble was i had only a fleeting idea of what python is and no clue how to actually implement this...

i got home and started researching, took a couple of days to even start scripting anything but about a week later i had something that works... running this script is now one of my daily tasks

i then started tinkering with it sneakily during downtime even though i was technically never given permission to do it and eventually came up with a way to scrape user data from the network 24/7, i made it a point that this would be my own doing so research was limited to how to implement specific tasks and not downloading a ready made script off of github...

i've been logging this data for a while so i figured i should do something with it and started working on a support facing tkinter front end to streamline the way we handle support calls and tickets...

i showed it to my boss and he had me do a demo for the whole team today doing our team meeting... told everyone 'i encourage you to try it so we can get the bugs out, i'm later going to *tell* you to use it'... he said i'd also get dev time to improve it... everyone liked it and i've been getting good feedback about it... the feeling is amazing and i thought i'd share it with this community and maybe get some of your stories

EDIT: holy crap gold, and not for saying something silly, thank you kind stranger

EDIT 2: this kind of grew, i really want to thank everyone for the kind words of encouragement, i really only posted because i felt really excited pacing around the house after that meeting and felt i had to vent it all somehow, but this subreddit's response has been phoenomenal and has done a lot to further embolden me so i'm even more determined to progress now... thank all of you","Just launched my first production app, and the feeling is amazing",6smmr2,top,96,791,791,0
,A Python class,99mmh3,top,58,773,773,0
,The best of Python: a collection of my favorite articles from 2017 and 2018 (so far),8d591m,top,16,768,768,0
,A REAL Python cheat sheet for beginners,7n1c9u,top,22,763,763,0
,"Nice lil’ easter egg, I suppose",6wrd8t,top,79,756,756,0
,Prototype for a garage door monitor/controller using MicroPython and an ESP8266,8e3fix,top,47,758,758,0
,Red Hat Confirms RHEL 8 Will Drop Python 2,8bb6oq,top,100,762,762,0
,"40 Python Data Visualizations (plots, graphs, charts) with code",76dfoc,top,24,755,755,0
"I have been working this last week on a little side projects that runs top comments from the top subreddits through the  [NLTK Sentiment Analyzer] (http://www.nltk.org/api/nltk.sentiment.html) [Vader Module] (http://www.nltk.org/api/nltk.sentiment.html#module-nltk.sentiment.vader) to determine how positive/negative a subreddits comments are.  /r/python/ is currently ranked #6 out of 445 subreddits!

View results here:
[opfeels.com](http://opfeels.com)
[opfeels.com/r/python/](http://opfeels.com/r/python/)

EDIT: Parsing new comments has dropped us down to #10.  Still worthy of congratulations!",Congrats /r/python/ for having one of the most positive commenter communities on Reddit!,5hkp59,top,72,737,737,0
,Python+OpenCV examples+GTAV = Fun!,31mom3,top,40,740,740,0
,Comprehensive Python Cheatsheet,8715iw,top,54,744,744,0
,User controlled Turtle cubes,7nfgw6,top,15,740,740,0
,Has pseudocode gone too far?,6o25q8,top,85,738,738,0
,"Hey, I made a Google reCaptcha solver bot too...",8oqp7v,top,94,729,729,0
,PSA - Malicious software libraries in the official Python package repository (xpost /r/netsec),709vch,top,89,732,732,0
"I've put out a so far 13-part series on creating a self driving vehicle with Grand Theft Auto 5. 

**[A brief taste of what we're doing](https://twitter.com/Sentdex/status/854394799104962561)**

..or check out the latest video in the series: **[a more interesting self-driving AI](https://www.youtube.com/watch?v=nWJZ4w0HKz8)**, especially near the end. 

This is by no means a serious look into self-driving vehicles, it's just for fun, and so far the latest project has been to make a motorcycle that speeds through traffic, attempting to stay on the road and evading all the other slow drivers. 

We do all of this with basic(ish...) tools and concepts. We're reading the screen by taking screenshots with pywin32, seeing about 20 FPS with the neural network, sending keys with direct input, and then doing some analysis with OpenCV, otherwise also training with a convolutional neural network in TensorFlow. 

The goal of the series is more to show you how you can take just about whatever game you want, mapping the screen to inputs, training a neural network, and then letting the network play the game. 

It's an ongoing project, and is also **[open-source](https://github.com/sentdex/pygta5/)**

Here's a link to the **[self-driving tutorials](https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/)**, which starts at the beginning. We start to use the neural network in **[part 9](https://pythonprogramming.net/self-driving-car-neural-network-training-data-python-plays-gta-v/)**

That's all for now, more AI in GTA to come.","Self-driving vehicles with Python, TensorFlow, OpenCV, and Grand Theft Auto 5",665jqt,top,26,729,729,0
"Recently my girlfriend told me that I don't pay enough attention on her Instagram account, I don't like wasting my time checking feed every time so I wrote a python script and created a cron job which starts every 2 minutes and checking if there are new posts and like them if needed. What did you recently automated?

Source code of my script on [GitHub](https://github.com/dzaytsev91/mygf-instagram)",What routine tasks do you automate with programs?,70udwq,top,326,732,732,0
,Stranger Things Basic Code rewritten in Python.,79rvk3,top,94,719,719,0
,Google has started a new video series teaching machine learning and I can actually understand it. [X-Post /r/programming],4f0x74,top,78,720,720,0
,Wut,5zpe9e,top,80,717,717,0
,"WOW! guy, I made an awesome gif animation of Wilson's algorithm!",5dxhp9,top,76,708,708,0
,11 Python Libraries You Might Not Know,2t2wfj,top,67,711,711,0
"Code: http://www.technologyversus.com/pizza/

It basically iterates through a dictionary of phone numbers and checks for an active order. If there is an active order, the program sends an email to a specified email account.

Feedback is always welcomed. The code is a bit rough, I have not been programming in Python for very long. Like 3 months.

Thanks and enjoy!",I wrote a program that emails me when one of my friends orders Domino's.,5wec78,top,230,704,704,0
,My first program(!) - new to coding. Time tracker for account managers on their clients.,9cfcmp,top,137,701,701,0
,How To Create Video Game AI - DinoAI,8n6glo,top,26,701,701,0
,Python has brought computer programming to a vast new audience,90acd6,top,134,694,694,0
,A San Francisco Startup Called Kite Took Over and Made Invasive Changes to autocomplete-python and at Least One Other Atom Plugin,6p5qjt,top,113,701,701,0
,"The PyPy project gets $200,000 from Mozilla",4wbky1,top,103,696,696,0
,I wrote a script which goes through my LastPass vault and checks all passwords against haveibeenpwned.com and I hope somebody else finds it useful,824z5w,top,132,688,688,0
,Practice algorithms and data structures (and prep for coding interviews) with interactive coding challenges in Python,64j4oj,top,12,682,682,0
,A startup made me make this toy django-channels chat app and then told me they didn't have money to hire me! Now it's yours internet!,7yi51a,top,97,681,681,0
,Django 2.0 (now on master) will not support Python 2,5otufg,top,82,676,676,0
"I'm not super experienced in Python \-\- my main programming language is Java, but I learned Python from a CS course I took last semester.  I love programming, but I also really love hip hop music.  I typically find this music by looking at a website called Hot New Hip Hop, which keeps a list of the top 100 new songs at any given time.  There are a select number of artists who I like, and a lot of the time the tracks are too new to be on Spotify.

To save myself time, I automated my process of searching for and discovering new music.  I used Windows Task Scheduler to schedule a script to run every morning, scrape the top 100 songs page, and add songs to a playlist if they're made by artists I like and are on Spotify.  I also used a SQLite database to store my Spotify client and access tokens, as well as prevent adding duplicate songs.  This script will probably save me about 45 minutes to an hour each week, which is pretty sweet.  You can check it out on Github here: [https://github.com/mileshenrichs/spotify\-playlist\-generator](https://github.com/mileshenrichs/spotify-playlist-generator)",I wrote a script that builds Spotify playlists for me!,8mqo4l,top,61,672,672,0
"Since 3.6 [dicts preserve order because of the new “compact” representation](https://docs.python.org/3.6/whatsnew/3.6.html#whatsnew36-compactdict) but it was just an implementation detail and we were told not to rely on it. 

But in 3.7 dicts **officially** became ordered:

> Performing `list(d)` on a dictionary returns a list of all the keys used in the dictionary, **in insertion order**

(from https://docs.python.org/3.7/tutorial/datastructures.html#dictionaries)

TBH, I'm not sure that this is a good idea. I can see a number of problems with this change in future:

1. Now people will start relying on the order of elements in a dict and if Python developers want to change the implementation in future they will **have to** preserve the order as well.
2. It forces developers of other Python interpreters to implement this feature as well even if it will cost them some additional work or decrease performance.
3. It makes `collections.OrderedDict` redundant which could lead to confusion.

What do you think about this decision? Why do you think they made it?",TIL that starting from 3.7 dicts are officially ordered,8cf4rf,top,183,673,673,0
,I saw this on StackOverflow and I felt like I had to share this.,2ir5t6,top,153,666,666,0
"Hey guys! My name is Avi and I recently launched a brand new Python Programming Course - The Complete Python Programming Bootcamp. This course covers all the basics and most of the advanced concepts of Python Programming with high-quality videos, quizzes and exercises.

For the next week this course will be free for all of Reddit :) Let me know if you have any questions! If you do enjoy the course, please do rate it!

[https://www.udemy.com/pythonbootcamp/?couponCode=THANKSREDDIT2](https://www.udemy.com/pythonbootcamp/?couponCode=THANKSREDDIT2)

**EDIT:**

For anyone reading this post and missed out on the free coupon (The limit was 6,000), here's a discount code to get the course for just $9: [https://www.udemy.com/pythonbootcamp/?couponCode=REDDIT9](https://www.udemy.com/pythonbootcamp/?couponCode=REDDIT9)",Brand New Python Programming Course - The Complete Python Programming Bootcamp - Free for Reddit!,8wjdr4,top,105,669,669,0
,TrumpScript: Make Python Great Again.,41h4ho,top,131,667,667,0
,How I ruined /r/circlejerk 's circlejerk - A python story,34iyfw,top,61,660,660,0
,CPython internals: A ten-hour codewalk through the Python interpreter source code - YouTube,8xxbo2,top,31,665,665,0
,Doctor Strange Python Recursion Code,8l52km,top,139,661,661,0
,Django 2.0 Released,7h3bbh,top,168,658,658,0
,Please do my homework,2vhvuk,top,180,653,653,0
"Today I am releasing my first book, **Python 101**, for free for 48 hours. Python 101 was written as an introduction to the Python programming language. While it is intended for beginners, some have claimed that they needed more hand-holding than this book provided for them. So I currently recommend it as an introductory and intermediate book for developers that are looking to learn Python.

When I originally wrote the book, I noticed that there were few or no books available that described how to create executables of your code or distribute your code via Python’s Package Index (PyPI). Python 101 covers these topics as well as introducing the reader to Python’s standard library, how to install 3rd party packages and an introduction to some of the most popular 3rd party packages for Python, such as SQLAlchemy, requests and virtualenv.

Python 101 has **5 sections, 44 chapters and 295 pages**.

You can get Python 101 for free on Leanpub using the following link: http://leanpub.com/python_101/c/48hours

If you happen to have a [Gumroad](https://gum.co/bppWr) account, then you’ll be able to get the book free there as well by using the following offer code: **48hours**

You will get the **PDF**, **epub** and **mobi** versions of the book. You can see a full table of contents on the Leanpub site

If you like my first book, you can get its sequel, **Python 201: Intermediate Python** for **50%** off here: http://leanpub.com/python201/c/50percent

I also write a fun [Python blog](http://www.blog.pythonlibrary.org/) that has many other tutorials on it.",Python 101 if now FREE for 48 Hours!,5bmanr,top,136,647,647,0
,Web.py founder Aaron Swartz commits suicide,16flol,top,61,648,648,0
,"Plotly has just released Dash 2.0, a Shiny-like tool for creating interactive Python dashboards",6imhxa,top,78,647,647,0
,Turn (almost) any command line program into a GUI application with one line of Python,2eg49z,top,69,637,637,0
,"Too big for Excel is not ""Big Data""",4laogs,top,162,637,637,0
,Learn How To Create A Neural Network That Classifies Diabetes Risk In 15 Lines of Python,7rppky,top,33,633,633,0
,Machine learning in Python with scikit-learn. 10 Videos ~ 4hours + 1 PyCon Talk,5niw1b,top,39,634,634,0
,Python 3.5.0 has been released!,3ksb03,top,66,633,633,0
,My first calculator with python and Tkinter...,8ecfkv,top,75,625,625,0
,We are programming a game in Tkinter (70%done) and we still don't have a name for our game. Give our game a name !,8mhzzq,top,312,627,627,0
"    from datetime import date
    py2 = date(2000, 10, 16)
    py3 = date(2008, 12, 3)
    today = date.today()
    today - py3
    -> 2970
    py3 - py2
    -> 2970

I thought this was interesting. To be fair, Python 2.0 wasn't nearly as big a change as Python 3 and Python 3.0 had some initial issues which made it less usable than later releases, so this fact isn't all that meaningful - but still, I think it's interesting.",Today Python 2 is exactly twice as old as Python 3,5p5dte,top,132,623,623,0
,A large list of interesting open source projects in Python. Only active and interesting projects!,6vilsp,top,36,618,618,0
,Doing Python homework today and saw a little shout-out to r/python !,789jjp,top,52,615,615,0
,Reverse Engineering A Mysterious UDP Stream in My Hotel,4kjgvp,top,48,620,620,0
,YouTube channel for PyCon 2018 is now up (with today's tutorials),8iamxy,top,33,607,607,0
,"Google's official python tutorial violates PEP8, recommends python 2.4-2.6, and my university just assigned it to us.",7nr322,top,247,604,604,0
,Can someone explain this black magic?,7ep6ci,top,85,609,609,0
,Quick Tip - The easiest way to grab data out of a web page in Python,6f1q3z,top,46,608,608,0
"I wrote a short Python script to randomly visit strange websites and click a few links at random intervals to give whoever buys my network traffic a little bit of garbage to sift through.

I'm sharing it so you can [rebel with me.](https://imgflip.com/s/meme/Baby-Insanity-Wolf.jpg) You'll need selenium and the gecko web driver, also you'll need to fill in the site list yourself.
    
    import time
    from random import randint, uniform
    from selenium import webdriver
    from itertools import repeat
    
    # Add odd shit here
    site_list = []
    
    def site_select():
    	i = randint(0, len(site_list) - 1)
    	return (site_list[i])
    
    firefox_profile = webdriver.FirefoxProfile()
    firefox_profile.set_preference(""browser.privatebrowsing.autostart"", True)
    driver = webdriver.Firefox(firefox_profile=firefox_profile)
    
    # Visits a site, clicks a random number links, sleeps for random spans between
    def visit_site():
    	new_site = site_select()
    	driver.get(new_site)
    	print(""Visiting: "" + new_site)
    	time.sleep(uniform(1, 15))
    	
    	for i in repeat(None, randint(1, 3)) :
    		try:
    			links = driver.find_elements_by_css_selector('a')
    			l = links[randint(0, len(links)-1)]
    			time.sleep(1)
    			print(""clicking link"")
    			l.click()
    			time.sleep(uniform(0, 120))
    		except Exception as e:
    			print(""Something went wrong with the link click."")
    			print(type(e))
    
    while(True):
    	visit_site()
    	time.sleep(uniform(4, 80))",Not Excited About ISPs Buying Your Internet History? Dirty Your Data,629jbe,top,178,598,598,0
,Reddit Bot Introduction - Programming Reddit Bot with PRAW in Python,8heweg,top,18,601,601,0
,Python plots used in gravitational waves discovery paper,45c5qf,top,96,603,603,0
,"Awesome Python: A curated list of awesome Python frameworks, libraries, software and resources",5i2ush,top,32,593,593,0
,Humble Book Bundle: Python,63nbw9,top,66,591,591,0
,Top 10 Python idioms I wish I'd learned earlier,2nh3jt,top,124,593,593,0
,How to break a CAPTCHA system in 15 minutes with Machine Learning,7jj78v,top,54,589,589,0
,/r/thanosdidnothingwrong -- banning people with python,8xi8tf,top,103,592,592,0
,"3 months into Python, I've completed my 2nd project: a script that sends you an SMS when the football team you support scores.",8s9ued,top,100,581,581,0
,JupyterLab is ready for users...,7yvxkb,top,111,581,581,0
,A Julia set fractal with python,6r4rb4,top,25,583,583,0
"After seeing how it was possible to [make python networking great again](https://www.reddit.com/r/programming/comments/4hqd1b/uvloop_make_python_networking_great_again/), I was inspired to make a Flask-like microframework + web server that could take advantage of async IO and the work that the wonderful people are [magicstack](https://magic.io/blog/)  have been doing.

It's called Sanic, and it goes fast.  

### Sanic is:

* Async - handle requests asynchronously, just throw async before def
* Shiny - Runs on python 3.5
* Simple - Flask-like routing
* Lightweight - No special tools, just run it with python

## Benchmarks

| Server  | Implementation      | Requests/sec | Avg Latency |
| ------- | ------------------- | ------------:| -----------:|
| Sanic   | Python 3.5 + uvloop |       30,601 |      3.23ms |
| Wheezy  | gunicorn + meinheld |       20,244 |      4.94ms |
| Falcon  | gunicorn + meinheld |       18,972 |      5.27ms |
| Bottle  | gunicorn + meinheld |       13,596 |      7.36ms |
| Flask   | gunicorn + meinheld |        4,988 |     20.08ms |
| Kyoukai | Python 3.5 + uvloop |        3,889 |     27.44ms |
| Aiohttp | Python 3.5 + uvloop |        2,979 |     33.42ms |


## Syntax

    from sanic import Sanic
    from sanic.response import json
    
    app = Sanic(__name__)
    
    @app.route(""/"")
    async def test(request):
         return json({ ""hello"": ""world"" })
    
    app.run(host=""0.0.0.0"", port=8000)

## Links
* [Sanic](https://github.com/channelcat/sanic)
* [httptools](https://github.com/MagicStack/httptools) (used to parse requests quickly)
* [uvloop](https://github.com/MagicStack/uvloop) (drop-in replacement for python's event loop)

## Sup Reddit

This is my first open-source project and I'm looking for feedback and contribution if anyone is interested :)

Sanic was created because I love the freedom of Flask, but dislike deploying it and its lack of native async support.  I'm wondering if anyone else has the same feels, and/or is interested in using Sanic for their project. Your feedback is welcome!","What if Flask was async and 6x faster out of the box? Introducing Sanic, for when you gotta go fast!",57i301,top,130,579,579,0
,The Case for Python 3,5eljwc,top,377,572,572,0
,Jupyter Notebook wins ACM award,8gpvaw,top,27,573,573,0
,Learn Python for Data Science from Scratch for Beginners,6m1haa,top,14,574,574,0
,"i uploaded to github hex calendars for python developers for the year 0x7E2. two colors and two options (for us and other world). feel free to grab the images from github and print calendars for the next year for home and office. links are in the comments, no contribution is required.",76yxk8,top,33,574,574,0
,So apparently type is of type 'type'.,3c344g,top,99,566,566,0
,office clash,62gnqi,top,79,564,564,0
,Finally... Bash is coming to Windows 10,4cluk9,top,219,563,563,0
,From my Python textbook,1pp0ye,top,128,566,566,0
,"Python 3, created via PEP 3000, is exactly 3,000 days old today.",5v0tt6,top,72,565,565,0
,The Meaning of Underscores in Python,6cvx0s,top,67,557,557,0
,"PSA: Check this site , it has tons of usefull Python cheat sheets",5c0myl,top,30,564,564,0
,Python overtakes French as the most popular language taught in primary schools,3m767d,top,98,553,553,0
,"This iPython notebook by Peter Norvig on the Traveling Salesman problem is one of the best and most accessible lessons I've ever read about algorithms, software design, and problem solving",34qcnk,top,16,559,559,0
,"A Python GUI interface to basic GPG functionality and GPG-encrypted, P2P messaging over Tor. Made with tkinter.",8ytk98,top,62,551,551,0
,Harry Speaks Python (x-post /r/funny),2huw9u,top,29,560,560,0
,"So I wrote a script that swaps people's faces in Python, using dlib, OpenCV and numpy. Here's how I did it. (Source code included.) [xpost r/programming]",3f59b6,top,27,555,555,0
,Microsoft Considers Adding Python as an Official Scripting Language to Excel,7mebxa,top,37,549,549,0
,Finally SciPy 1.0 is released!,78mwp1,top,43,549,549,0
,Wow! I finally managed to make my modest script produce nice images!!,5xw0f7,top,31,553,553,0
,Python moves to Github,3z1u9y,top,100,549,549,0
,I made a simple cryptocurrency to learn how Bitcoin works,7rj6bu,top,50,543,543,0
,Exercises for those learning Python,76qpzr,top,41,544,544,0
,Flappy Bird in 87 Lines of Python,3trann,top,135,541,541,0
,"Introducing Python Fire, a library for automatically generating command line interfaces",5x8wdv,top,76,542,542,0
"This year, the university I attended for my CS degree is switching from teaching C++ to Python for its entry level classes.  

I don't know how I feel about it as having C++ as my base language helped me understand the underlying structure of how programming works. Then, learning Python was like picking up the bass after already knowing guitar. 

My younger brother just started the program at the university, and I feel like he is being shortchanged a bit. I see the argument as Python has less of a barrier to entry. 

If you know both C++ and Python, which one did you learn first? In hindsight would you have switched the order you learned them? Does only learning Python make you miss out the things learning a lower level language can teach you?

I'm not looking for an argument on which language is better; I simply would like to hear your experience in learning Python as I try to understand of pedagogy of programming. ",University switching from teaching c++ to python,7vllc2,top,300,540,540,0
,I wrote a program that uses OpenCV-Python to detect and identify playing cards in a video feed. Check it out! (Github link in the comments),75ia74,top,62,542,542,0
,It is ridiculously easy to generate any audio signal using Python,6g9ccc,top,92,534,534,0
,Python is now the most popular introductory teaching language at top U.S. universities,2a33wy,top,134,531,531,0
,"A few animated GIFs, and their Python codes.",1w29g5,top,59,533,533,0
,A new version of Wilson's uniform spanning tree algorithm and BFS search animation made with pure python,6zsvt7,top,36,526,526,0
,"To Learn Programming, Do Projects You Actually Care About",5cxmn0,top,33,531,531,0
,"Enhance a low resolution image using a deep neural net with a simple command: ""python3 enhance.py image.png""",5a9idj,top,42,529,529,0
,This weekend's play project,68aifs,top,37,527,527,0
,"Wedding at Scale: How I Used Twilio, Python and Google to Automate My Wedding",64qkd6,top,59,525,525,0
,Anime girl can now access your webcam to look at you in the eye (my python project),8oh9s2,top,80,526,526,0
,"A really nice Pandas cheat sheet, made by the Pandas guys themselves",5l0tsd,top,11,531,531,0
,A journey to make Python with HTTP screaming fast which resulted in a new web micro-framework.,5r83q3,top,89,524,524,0
,"I made a Python script that analyses comments from /r/relationships for clichéd advice, as a learning exercise. Here's the code. It was fun!",6km1mw,top,59,530,530,0
,my textbook brought me here,585c2j,top,76,524,524,0
,"A curated list of Python tutorials for Data Science, NLP and Machine Learning",4jw85w,top,12,519,519,0
,Matplotlib 2.0 final released,5oipi9,top,77,516,516,0
,Essential features of Python3 cheat sheet,7zvzlv,top,32,512,512,0
,"Microsoft donates $100,000 to the IPython team",1n72bm,top,63,517,517,0
"I [already posted about whereami](https://www.reddit.com/r/Python/comments/53igp4/predict_where_you_are_indoors_wifi_signal_machine/), and listened to the community. Here's the update.

**What's the same**: uses machine learning on wifi data to predict where you are indoors.

As can be seen on the [whereami github](https://github.com/kootenpv/whereami):

    # bash
    pip install whereami
    
    # in your bedroom, takes 100 samples
    whereami learn -l bedroom -n 100
    
    # in your kitchen, takes 100 samples
    whereami learn -l kitchen                  # default n=100
    
    # cross-validated accuracy on historic data
    whereami crossval
    # 0.99319
    
    # use in other applications, e.g. by piping the most likely answer:
    whereami predict | say
    # Computer Voice says: ""bedroom""
    
    # probabilities per class
    whereami predict_proba
    # {""bedroom"": 0.99, ""kitchen"": 0.01}

**What's new**

- Now cross-platform (OSX, Windows, Linux such as Ubuntu/Arch Linux)
- Spawned [access_points](https://github.com/kootenpv/accces_points) package in the process (just purely for scanning wifi)
- `whereami` now does not retrain a model before each prediction but only creates a model after new learning
- Big refactoring, allowing a simplified model with more power
- A model is now saved on disk in a way that allows API changes without affecting the model

Curious what you guys think :)

EDIT: So many bugs were caught! Added argparse to instruct the user better. Added tests. Fixed several broken commands. Thanks guys!",You can use `whereami` to predict where you are indoors,54qto9,top,90,515,515,0
,Applied Machine Learning in Python - Machine Learning is today a buzzword and you do not really know what it is until you do it. The University of Michigan has put together a great program that takes you from the basics of Python to the latest Machine Learning techniques.,87mkt7,top,42,512,512,0
,Great tool from Google just released. A Jupyter-based (and Google Drive) now makes easy collaboration and access from any Chrome browser. Thanks Google!,7b7k1k,top,94,513,513,0
"I had the idea this morning to analyze users using the nltk vader sentiment analysis tool to determine who is a dick and who is cool.  I was so excited, I put off all of my responsibilities and built this little site! It totally works! Please let me know what you think. 
Enjoy!

[ruadick.com](http://ruadick.com)


...

We use the Reddit API (PRAW) to extract the most recent 100 comments from a user. We take those comments and extract sentences that aren't too long and aren't too short. Each sentence is then analyzed using the NLTK Sentiment Analyzer Vader Module and scored based on how positive, negative, and neutral it is. We then rank the analyzed users in order from most positive to least positive.

edit: Starting to get some serious traffic to the site.  The Linode/Ubuntu/Nginx/Django/Python 2.7 stack is holding beautifully.  Thanks /r/python!

edit2: Wow 26k analyzed. I really didn't think I'd get that much in 24hrs. Someone made a post to /r/internetisbeautiful and it blew up a little.  Also, TheVerge.com just posted [an article](http://www.theverge.com/2016/12/14/13952994/reddit-are-you-a-dick) about it.  Also, I can now confirm from personal experience that /r/python deserves to in the [top ten most positive subreddits](http://opfeels.com#results).  You guys are the best!",I made a site that analyzes your comments and lets you know if you are a dick.,5i77cd,top,274,518,518,0
,pixelPython.py,96uamx,top,26,516,516,0
,PEP 557 (Data Classes) has been accepted!,7hpmp8,top,147,509,509,0
,Guido Van Rossum one of three Computer History Museum honorees for 2018,7z7cmn,top,16,507,507,0
,wtf-python : A collection of interesting and tricky Python examples which may bite you off!,6x6upn,top,38,508,508,0
,CPython moves to GitHub this Friday,5ssx9w,top,79,509,509,0
,Machine Learning With Python – Introduction,7c01v3,top,5,503,503,0
,Python releases 1st April feature.,88pnhu,top,19,500,500,0
,50 Free Machine Learning Datasets: Part One — Government Data portals,8zjjss,top,17,501,501,0
,"Nice collection of Machine Learning and Python ""cheat sheets""",6fg48n,top,10,500,500,0
,"Python displaces C++ in the popularity ranking, and reaches Tiobe index Top 3",9e9snl,top,63,496,496,0
,"A Natural Language Processing (NLP) blog for beginners that a friend and I have started. Expect tutorials on a weekly basis, with code in Python.",5yx472,top,39,496,496,0
,"Raymond Hettinger:""#python3.6 news: OrderedDict is dead. Long live dicts that are ordered. Regular dicts are ordered and more compact""",51te8x,top,163,499,499,0
,Flask 0.11 is here after a gap of almost 3 years since last release,4ljvrm,top,33,496,496,0
,Just in time for PyCon!,31diuv,top,24,493,493,0
,CPython internals: A ten-hour codewalk through the Python interpreter source code - YouTube,5yej29,top,20,491,491,0
,A cool Python illustration on the cover of a Japanese Python book,42ky8h,top,40,490,490,0
"(Sorry for the throwaway, but I wanted to be able to answer questions honestly without any hesitation.)

I've been in IT since I was 17 in 1999. I started off at a help desk, and worked my way up to a Systems Administrator where I was making 60k USD/yr. (I currently have only an associates degree with no plans to go back to school.) I was primarily a Windows domain/ network admin, with a few *nix boxes spread throughout. I had known windows batch scripting, and way back in the day had programmed in BASIC before the world was.


I had tossed around the idea of learning a programming language before, but when asked I'd often say ""Developers' brains just work differently than mine. I'm not a coder."" Programming seemed so abstract and I couldn't really wrap my head around it.  I finally decided though, to try something.

It was 2010 and I had heard a lot of Ruby on Rails and thought that Ruby would be a great language to learn. I ran through the tutorial of making a polls app at least 5 times, but I just couldn't wrap my head around it. So I gave up.


One year later I heard about python. Despite all the negative talk about python while googling for ""python vs ruby vs php vs ..."" *(GIL, speed, whitespace, duck typing, (not that I knew what ANY of that meant anyway))* I decided that I really wanted to give it a shot. I started out with codeacademy to get my feet wet, I'd tinker with idle while my wife and I would watch netflix after the kids went to bed. Then I started dreaming in code.

Have you ever had ""work dreams""? The kind you have for about 2 weeks after starting a new job that's really hard? That was python for me. Being primarily in a Windows environment it was hard to find anything for python to do initially at work. My boss didn't program, and really didn't see the value in it. Then one day I found myself needing to compare a list of files. I needed to find all the files that were in one column but not in the other. I had them in excel and after working through a formula I had my answer, but I hated it. All I wanted to do was write something like--

    select name from column1 where name not in (select name from column2);
    
Enter python and sqlite. It probably took me about 3 hours to figure it out, but I imported a csv into a sqlite table in python so I could query it. BAM! I was hooked from then on.

Every night I would tinker, read, and play. I found tons of things to automate at work, making my time so much more effective. I loved it. I became a python evangelist. I'd like to say that my boss was impressed, but really he never came around, and it frustrated me. Fast forward a year.

I had heard about the DevOps movement and though I didn't understand it completely at the time I thought that being a Developer and Systems Admin mutant sounded like a lot of fun, and something I could really be good at. 

After having a rough time with my boss one day I decided to check the local classifieds. I saw an ad for a DevOps Admin. Basically this guy needed to know hardware, networking, provisioning, something called puppet, and one of three scripting languages- ruby, bash, or python. 

I looked at puppet, and after having learned about booleans and strings and syntax from python, picking it up wasn't a problem. I got hired on the spot for $90k USD. A clean 50% raise. I use python every single day. I write scripts to check if databases back up properly, if services are up, if all 1000 of my physical servers are getting their updates, to provision RAIDs, you name it. I integrate what I write into puppet, fabric, and a host of other tools that I've learned along the way.

After doing that for a little over a year now, I'm about to hire 2 guys under me as we expand and I'm moving up to $120k USD. I'm learning django for fun and am just starting into machine learning. I check out /r/python every day, you guys have been so helpful to me along my way. And if I can learn python, anybody can!!!

TL;DR
I learned python in a year and got a 50% raise. 1 year later I got another 25% raise, all from python!

edit: percentages, oh math...




","Learning python earned me a 50% raise, and it's about to again.",24x7cc,top,142,498,498,0
,My last post on this sub blew up. So I created a new cheat sheet: Matplotlib! Hope it helps you,636mgi,top,36,488,488,0
,"""A big new thing we aim to release during 2018 is Qt for Python, i.e. bindings to Python programming language."" - QT roadmap 2018",7zl7jo,top,122,491,491,0
,Roadmap to becoming a Backend Developer in 2018,89p8us,top,49,492,492,0
,Python script I wrote that tells whether it’s a Pizza or Not a Pizza,8qh9gf,top,70,489,489,0
,A Python cheat sheet about security,6utwyn,top,34,490,490,0
,"My latest book, Tiny Python 3.6 Notebook, is available on Github",5u1a7h,top,41,488,488,0
,"Hooray, there are packaging guides on python.org now.",7awsje,top,59,484,484,0
,Django 1.11 will be last release to support Python 2,5vc7iy,top,67,481,481,0
,Writing the hello world program in the most overcomplicated way imaginable.,5ujjgl,top,37,481,481,0
,Don't you wish it were this easy? [Lupin III Part V],8a555u,top,36,483,483,0
"Thought it would be interesting seeing someone beginner code, vs someone's professional code on the same project. After I sent him my code he replied with how he would have done it, as a comparison.

**My code:**
    
    import random

    def plyr1wintest(): #checks if player has 3 in a row
        global winner
        if (1 in plyr1list) and (2 in plyr1list) and (3 in plyr1list) or \
           (4 in plyr1list) and (5 in plyr1list) and (6 in plyr1list) or \
           (7 in plyr1list) and (8 in plyr1list) and (9 in plyr1list) or \
           (1 in plyr1list) and (4 in plyr1list) and (7 in plyr1list) or \
           (2 in plyr1list) and (5 in plyr1list) and (8 in plyr1list) or \
           (3 in plyr1list) and (6 in plyr1list) and (9 in plyr1list) or \
           (1 in plyr1list) and (5 in plyr1list) and (9 in plyr1list) or \
           (3 in plyr1list) and (5 in plyr1list) and (7 in plyr1list):
                print ((name1) + ' wins as X')
                winner = True

    def plyr2wintest(): #checks if player has three in a row
        global winner
        if (1 in plyr2list) and (2 in plyr2list) and (3 in plyr2list) or \
           (4 in plyr2list) and (5 in plyr2list) and (6 in plyr2list) or \
           (7 in plyr2list) and (8 in plyr2list) and (9 in plyr2list) or \
           (1 in plyr2list) and (4 in plyr2list) and (7 in plyr2list) or \
           (2 in plyr2list) and (5 in plyr2list) and (8 in plyr2list) or \
           (3 in plyr2list) and (6 in plyr2list) and (9 in plyr2list) or \
           (1 in plyr2list) and (5 in plyr2list) and (9 in plyr2list) or \
           (3 in plyr2list) and (5 in plyr2list) and (7 in plyr2list):
                print ((name2) + ' wins as O')
                winner = True        

    def printboard(): #print board
        print(' ')
        print(' '+ position[0] +' | '+ position[1] +' | '+ position[2] + '    ' + '      '+ '1' +' | '+ '2' +' | '+ '3')
        print('-----------' + '        ' + '-----------')
        print(' '+ position[3] +' | '+ position[4] +' | '+ position[5] + '    ' + '      '+ '4' +' | '+ '5' +' | '+ '6')
        print('-----------' + '        ' + '-----------')
        print(' '+ position[6] +' | '+ position[7] +' | '+ position[8] + '    ' + '      '+ '7' +' | '+ '8' +' | '+ '9')
        print(' ')

    winner = False #win checker
    movecount = 0 #counts amount of turns
    playgame = True

    print ('welcome to Noughts & Crosses') #title

    while playgame == True:
        position = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '] #sets the board spaces blank
        plyr1list = []
        plyr2list = []
        gamelist = []

        winner = False
        movecount = 0

        print (' ')
        #Name input
        print ('What is player 1s name?')
        name1 = input()
        print ('thanks '+ (name1) +', Whats player 2s name?')
        name2 = input()
        print ('so '+ (name1) +' is X and '+ (name2) + ' is O')
        input(""Press Enter to continue..."")

        printboard()

        while (movecount < 9) and (winner == False):
    
            if (movecount % 2 == 0): #player 1 turn
        
                print ((name1) + 's ( X ) turn, please choose placement (1-9)')
                move = input()
                if move in ('1', '2', '3', '4', '5', '6', '7', '8', '9') and (int(move) not in (gamelist)):
                    plyr1list.append(int(move))
                    gamelist.append(int(move))
                    print (gamelist) #debug
                    position[int(move)-1] = ('X')
                    printboard()
                    movecount = movecount + 1
                    plyr1wintest()
                elif move not in ('1', '2', '3', '4', '5', '6', '7', '8', '9'):
                    print ('That is not a valid move! Try again')
                else: print ('That move is taken!, Try again')
        
            else: #player 2 turn
        
                print ((name2) + 's ( O ) turn, please choose placement (1-9)')
                move = input()
                if move in ('1', '2', '3', '4', '5', '6', '7', '8', '9') and (int(move) not in (gamelist)):
                    plyr2list.append(int(move))
                    gamelist.append(int(move))
                    print (gamelist) #debug
                    position[int(move)-1] = ('O')
                    printboard()
                    movecount = movecount + 1
                    plyr2wintest()
                elif move not in ('1', '2', '3', '4', '5', '6', '7', '8', '9'):
                    print ('That is not a valid move! Try again')
                else: print ('That move is taken!, Try again')

        #end game
        if winner == True:
            print ('Congrats!')
        else: print ('Its a tie BOI!')
        print (' ')

        #playagain
        answer = 0
        valid = False
        print ('Would you like to play again (y/n)')
        while valid == False: #waits until valid answer is submitted
            answer = input()
            if answer == 'y':
                print ('aight, resetting...')
                valid = True
            elif answer == 'n':
                print ('aight, cya')
                print (' ') #ASCII art up in here cause why not
                print('             *     ,MMM8&&&.            *')
                print('                  MMMM88&&&&&    .')
                print('                 MMMM88&&&&&&&')
                print('     *           MMM88&&&&&&&&')
                print('                 MMM88&&&&&&&&')
                print('                  MMM88&&&&&&')
                print('                    MMM8&&&      *')
                print('          |\___/| ')
                print('          )     (             .              ')
                print('         =\     /=')
                print('           )===(            Thanks for playing   *')
                print('          /     \ ')
                print('          |     |')
                print('         /       \ ')
                print('         \       / ')
                print('  _/\_/\_/\__  _/_/\_/\_/\_/\_/\_/\_/\_/\_/\_ ')
                print('  |  |  |  |( (  |  |  |  |  |  |  |  |  |  | ')
                print('  |  |  |  | ) ) |  |  |  |  |  |  |  |  |  | ')
                print('  |  |  |  |(_(  |  |  |  |  |  |  |  |  |  | ')
                print('  |  |  |  |  |  |  |  |  |  |  |  |  |  |  | ')
                print('  By Me yay|  |  |  |  |  |  |  |  | ')
                valid = True
                playgame = False
            else: print ('answer not valid, please use y or n')
    #End

**His code:**

    #!/usr/bin/python
    """"""Noughts and Crosses.""""""

    import sys

    def Input(*args):
      """"""Kludge to handle python 2 and 3.""""""
      if sys.version_info.major >= 3:
        return input(*args)
      return raw_input(*args)

    bye = r""""""
                 *     ,MMM8&&&.            *
                      MMMM88&&&&&    .
                     MMMM88&&&&&&&
         *           MMM88&&&&&&&&
                     MMM88&&&&&&&&
                      MMM88&&&&&&
                        MMM8&&&      *
              |\___/|
              )     (             .
             =\     /=
               )===(            Thanks for playing   *
              /     \
              |     |
             /       \
             \       /
      _/\_/\_/\__  _/_/\_/\_/\_/\_/\_/\_/\_/\_/\_
      |  |  |  |( (  |  |  |  |  |  |  |  |  |  |
      |  |  |  | ) ) |  |  |  |  |  |  |  |  |  |
      |  |  |  |(_(  |  |  |  |  |  |  |  |  |  |
      |  |  |  |  |  |  |  |  |  |  |  |  |  |  |
      By Me yay  |  |  |  |  |  |  |  |  |
    """"""


    def Play():
      """"""Play one round of noughts and crosses.""""""
      position = [' ' for _ in range(9)]

      print (""What is player 1's name?"")
      name1 = Input()
      print (""Thanks %s, What's player 2's name?"" % name1)
      name2 = Input()
      print ('So %s is X and %s is O.' % (name1, name2))
      Input('Press Enter to continue...')
    
      PrintBoard(position)

      players = [(name1, 'X'), (name2, 'O')]
      for movecount in range(9):
        player = players[movecount % 2]
        while True:
          print (""%s's ( %s ) turn, please choose placement [1-9]?"" % player)
          try:
            move = int(Input())
          except ValueError:
            print ('Invalid input, please choose placement [1-9]?')
            continue
          if move < 1 or move > 9:
            print ('That is not a valid move! Try again.')
            continue
          if position[move-1] != ' ':
            print ('That move is taken!, Try again.')
            continue
          break

        position[move-1] = player[1]
        PrintBoard(position)
        if PlayerWin(position, player):
          print ('%s wins as %s.' % player)
          break
      else:
        print ('Its a tie BOI!')


    def PrintBoard(position):
      print (""""""
      %s | %s | %s          1 | 2 | 3
      -----------        -----------
      %s | %s | %s          4 | 5 | 6
      -----------        -----------
      %s | %s | %s          7 | 8 | 9
      """""" % tuple(p for p in position))


    def PlayerWin(position, player):

      def Marks(m1, m2, m3):
        return tuple(position[i-1] for i in (m1, m2, m3))

      mark = player[1]
      win = (mark, mark, mark)
      return (
          Marks(4, 5, 6) == win or
          Marks(7, 8, 9) == win or
          Marks(1, 4, 7) == win or
          Marks(2, 5, 8) == win or
          Marks(3, 6, 9) == win or
          Marks(1, 5, 9) == win or
          Marks(3, 5, 7) == win
      )


    # Now let's get down to business.
    print ('Welcome to Noughts & Crosses.')

    while True:
      Play()
      while True:
        print ('Would you like to play again (y/n)?')
        answer = Input()
        if answer in ('y', 'n'):
          break
      if answer == 'n':
        break
      print ('Aight, resetting...')

    print ('Aight, cya.')
    print (bye)","My code for Tic-Tac-Toe (beginner), compared to my mate that works at google's code.",6qvu38,top,143,477,477,0
,The Incredible Growth of Python,6ygxne,top,94,478,478,0
,PyCon 2018 Talk Videos,8j4ep6,top,58,476,476,0
,"Using Python, I extracted the top swear words form ""South Park. Bigger Longer and Uncut"" movie.",7x28yg,top,83,475,475,0
,How To Create A Twitter Bot With Python,7pwe38,top,36,480,480,0
,7 O'Reilly Python Books For Free,56syaa,top,44,475,475,0
,Scientific Python Cheat Sheet,4nd3lc,top,64,480,480,0
"A bit ago I posted a link to my [repo](https://github.com/brentvollebregt/auto-py-to-exe) that converts py to exe with a simple intrerface.
I have recently completed the project and have made a [quick video outlining setup and usage](https://youtu.be/OZSZHmWSOeM). I know this has helped a few people already and I hope it can help you too!

*Edit: Thank you so much for the response you all have given. This is quite a big thing for me and I can't believe I have over 240 stars on a repo that I made myself. Thank you all for the comments, recommendations and even questions; it has been a huge help for me!*",Auto Py to Exe is Complete,84kwb8,top,78,469,469,0
,"Python Is On the Rise, While PHP Falls",3tb7cf,top,274,468,468,0
,30 seconds of python code: Curated collection of useful Python snippets that you can understand in 30 seconds or less.,7ymzjh,top,97,472,472,0
,Python Data Science Handbook,6x1rq3,top,17,474,474,0
,"Discover Advanced Python Features: itertools, packing, decorators, context managers...",6kssea,top,21,468,468,0
,7 Must Read Python Books,5axa1l,top,96,468,468,0
,Minesweeper for command line [Linux],8dxorh,top,19,466,466,0
,Top 250 Subreddits that /r/Python users are active in (ranked by deviation from the average redditor),6leaqy,top,88,467,467,0
"Hello, long time lurker of this sub. I've been wanting to learn python for a long time because I've been making computer graphics with blender 3D for over 10 years. 


So a little over a year ago I decided to start teaching myself. I started with codeacadamy's python course and then worked on several small personal projects. Such as automating some stuff at work. I then did [Udacitys Intro To Programming Nanodegree.](https://www.udacity.com/course/intro-to-programming-nanodegree--nd000) I overall feel pretty confident with python now, but it's hard to gauge how good you are at something if you don't reference it with other people. So here I am to share!



So I currently work as what is probably best described as a ""security guard supervisor"" all though it is a lot more than that. I work at a charity with a low income housing complex in which all guests or staff are required to sign in and out of the building. This is necessary because of certain laws requiring it with charities(it's complicated).  And also so roll calls can be done with the staff if there is a fire alarm.


Before they simply had a binder with a pen and paper to sign in and out. I asked around and found out that we could print barcodes easily on to our ID cards. So I figured the entire process is pretty low hanging fruit for automation. So I presented my idea to my manager and then later some directors and they approved, since it was practically a free solution, aside from my time on the clock. 


I did a back of the envelope calculation and determined this program would save about 400+ man hours a year. 


**TL;DR:** So long story short even though I'm a technically a security guard they let me write python and implement this new system. Which I've had a bunch of staff thank me for because the old way was a a lot more of a pain in the ass.

[Here is the program I wrote.](https://github.com/JosiahSwaim/Punch-IN-OUT) 

I want to pursue programming as a career now so any advice is appreciated too.","My first ""professional"" program",5lbwu4,top,106,465,465,0
"Hi guys! After a lot of hard-work and sheer determination I have mostly completed my book, ""Intermediate Python"". It will receive updates over time :)

It has a couple of issues related to grammar and technical info in it. I am working on ironing them out one by one.

I was a bit lazy so didn't upload it earlier but here it is now.

I have decided to distribute it for free! I wanted to give back to this awesome community so this is what I have to offer for now. I am sure that it would help those who really want to be helped. Best of luck! 

Here are the links:

- [Html](http://book.pythontips.com)
- [PDF](http://readthedocs.org/projects/intermediatepythongithubio/downloads/pdf/latest/)
- [GitHub](https://github.com/IntermediatePython/intermediatePython)

If you like this book then a simple [tweet](https://twitter.com/yasoobkhalid) and a personal email <yasoob DOT khld AT gmail DOT com> would mean a lot to me!

P.S: The book is open-source so if you find typo or technical error or just want to expand it's contents with your own knowledge then just send over a pull request :) Moreover, if you want to give me any tip then kindly pm me your email and I would let you know once I setup a tip-collection system.

**Note:** This is not related with that **paid** ""intermediate Python"" book in any way. I became aware of it today. I had been using this name internally for a couple of months. If the author of **paid** ""Intermediate Python"" has any issue with this I would be more than happy to change the name of my book because he definitely beated me to the finish line. :) 

------------------------

**Edit:**

Hey guys! All those of you who are going to use this book can really help me and motivate me by letting me know how this book supplements your day to day learning and if you are a Teacher, Assistant Professor or something of that sort then kindly let me know if you would be willing to offer this book to your students or not. :)

You already have my email address or if you want to tweet about it then you can do so at [@yasoobkhalid](https://twitter.com/yasoobkhalid).

Moreover, I really can't thank this community enough. This community has helped me a LOT over the years. If you see my Reddit profile then you can easily guess that this is the only community (/r/python) where I spend most of my time.

------------------------

####Edit:

You guys can donate me if you want to by buying the donation version of Intermediate Python from [@gumroad](https://gumroad.com/l/intermediate_python) :)

 It is only for $10 but if you want to pay less then kindly let me know (pm) and I can give you a custom link.

Cheers!","I just released alpha version of ""Intermediate Python"", my first and free E-Book.",3hbb46,top,77,463,463,0
,FuckIt.py,1s6pbw,top,83,467,467,0
you know the moment when you are completely drunk and you have the desire to program something cool. i have the feeling in this very moment. so let's build cool stuff guys. cheers. have a great night. and fyi: I LOVE PYTHON. IT IS THE BEST.,drunken programming,86q4f6,top,115,463,463,0
,"""The average programmer has the aesthetic sense of a hyperactive weasel on LSD and wouldn't know a cleanly designed language if it fell from the sky and hit them on the head. Hence the popularity of PHP, Perl and C++.""",6ixd3y,top,241,460,460,0
,MentalHealthError: an exception occurred (Kenneth Reitz),47tjns,top,63,463,463,0
,Google Code is shutting down,2yt4ux,top,95,456,456,0
"I just released [cutelog](https://github.com/busimus/cutelog), a GUI for Python's standard logging module. It looks [like this](https://i.imgur.com/LQi8ccg.png).
It's cross platform and requires only minimal changes to your code (if you're already using the logging module). 

It can do most things you would expect: searching, filtering, multiple connections, customization of the output table, limiting number of records per connection, merging records of several tabs. There's also a [dark theme](https://i.imgur.com/BGUqHM2.png)!

It can also do things you would _not_ expect, because it's in beta and may have bugs. Submit an issue on GitHub if you find one of those!

This is my first released project of any kind, so any feedback is welcome.",Tired of logging to a terminal? I made a GUI for you!,7ppfph,top,82,455,455,0
,"Tinkering with a 0.96"" OLED and MicroPython",8fslvz,top,34,452,452,0
,Implementing a Neural Network from Scratch in Python – An Introduction,7fq5ss,top,68,457,457,0
,/r/Python is trending!,4xcw9z,top,56,456,456,0
,Machine Learning For Complete Beginners (using Python),3vxub2,top,40,452,452,0
,"After the recent pyBitmessage exploit, let us all remember that eval() is REALLY DANGEROUS",7xr839,top,120,456,456,0
,My paper got accepted today. All figures written in python/matplotlib,7rebq3,top,87,458,458,0
,uvloop: Make Python Networking Great Again,4hqcza,top,41,456,456,0
"I've finally open-sourced this project (thanks to this very subreddit, and more specifically [this](https://www.reddit.com/r/Python/comments/70udwq/what_routine_tasks_do_you_automate_with_programs/) thread for encouraging me).

The project is [here](https://github.com/tmthyjames/Achoo).

There is a lot of work to be done, but I'm really excited about this project. Special thanks to [Corm](https://www.reddit.com/user/Corm) for the encouragement, without which I wouldn't have pushed this code so soon.",Achoo: The raspberry-pi-powered system I built to notify the school nurse if my son will need his inhaler on any given day.,729g39,top,66,456,456,0
,How to Create 3D Objects With Python And Blender,7w6fgi,top,26,450,450,0
,"This subreddit is legit, This textbook for an introductory CS course uses the url in examples.",3pcqt6,top,77,445,445,0
,When is Python *NOT* a good choice?,88mdys,top,497,445,445,0
,How I Learned To Code Neural Networks In 2015 (In Python),3z0fmv,top,33,450,450,0
,"PyCharm 2018.1 Out Now: Partial commits, Python 3.7",87skgp,top,178,450,450,0
,How to use Python and Flask to build a web app — an in-depth tutorial,7l4pbb,top,15,447,447,0
,"We're starting an open source scientific Python package for plasma physics called PlasmaPy, kind of inspired by AstroPy. It's in the early stages. Contributors of all kinds (programming, docs, physics, discussion, ideas) are more than welcome! Give open science a hand (and a few lines of code)!",6qa11t,top,38,450,450,0
,How DuckDuckGo is trying to help programmers,4cztmq,top,62,445,445,0
"Hi there, my name is Harrison and I frequently do Python programming tutorials on [PythonProgramming.net](https://pythonprogramming.net) and [YouTube.com/sentdex](https://www.youtube.com/user/sentdex). 

I do my best to produce tutorials for beginner-intermediate programmers, mainly by making sure nothing is left to abstraction and hand waving. 

The most recent series is an in-depth machine learning course, aimed at breaking down the complex ML concepts that are typically just ""done for you"" in a hand-wavy fashion with packages and modules. 

The machine learning series is aimed at just about anyone with a basic understanding of Python programming and the willingness to learn. If you're confused about something we're doing, I can either help, or point you towards a tutorial that I've done already (I have about 1,000) to help.

The main structure for the course is to:

* Do a quick overview of the theory of each machine learning algorithm we cover.
* Show an application of that algorithm using a module, like scikit-learn, along with some real world data.
* Break down the algorithm and re-write it ourselves, **without machine learning modules**, in Python.

We're not rewriting the algorithms with the intention that we're going to actually produce something superior than what's available, but rather to learn more about how the algorithms actually work, so that we understand them better. I also see a lot of people are very keen to learn about deep-learning, but the learning curve to get to that point is quite challenging, since quite a bit of deep learning requires you to have a wholistic understanding of how things are actually working, and not just a high-level understanding of how to use a module. Hopefully this can help. 

At least for me personally, I have learned a lot by breaking the algorithms down, so I thought I would share that in my tutorials.

All tutorials are posted on **[PythonProgramming.net](https://pythonprogramming.net/machine-learning-tutorial-python-introduction/)** as well as **[YouTube](https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v)**, so you can follow along in video, text, or both forms, and the content is all free. 

We've done linear regression and K Nearest Neighbors so far, and have quite a long way to go still. We are going to be diving into the Support Vector Machine next, then clustering, neural networks and deep learning. Once we've made our way to deep learning, we're going to be working with TensorFlow.

If all that sounds interesting to you, come hang out and learn with us! 

I tend to release a couple videos a week. If you have suggestions/requests, feel free to share. 

Follow along with the text/video tutorials: on **[PythonProgramming.net](https://pythonprogramming.net/machine-learning-tutorial-python-introduction/)** or **[YouTube](https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v)** ",In-depth Machine Learning Course w/ Python [x-post /r/machinelearning],4j0xhf,top,68,447,447,0
,My girlfriend made these today :),1xfx5w,top,32,445,445,0
,Qt for Python is coming to a computer near you,8c3c0o,top,101,450,450,0
,"PYTHON in rotating voxels, written in python",816qcb,top,23,443,443,0
,Alright - got my new faculty login to the school server. Let's write a few scripts. Doh!,1hski6,top,60,441,441,0
,Raymond Hettinger - Python 3.7's New Data Classes,7tnbny,top,141,437,437,0
,My top 5 'new' python modules of 2015,3xyjx5,top,54,438,438,0
,"PyPy v5.9 Released, Now Supports Pandas, NumPy",74fwhk,top,62,436,436,0
,Found this on r/vexillology thought it looked cool,8ccn6b,top,31,434,434,0
"I recently checked out the Python exercises from CodingBat and I think they are horrible. The exercises are targeted at beginners and so I think they should teach people the pythonic way of doing stuff. I'm no expert in Python at all but even I found so many things that are just not the way it should be done. I feel like they transferred the Java solutions to Python. To give you some examples what I mean:

 * worst thing first: They override the  str name space, by supplying str as an argument in functions or assigning some string to it.

 * Java wording: they constantly refer to lists as arrays

 * Non Pythonic solutions: when accessing the last element of a list they write array[len(o)-1], instead of array[-1]


Edit: Spelling / Format",Suggestion: Remove CodingBat from side bar,8z0pxo,top,74,437,437,0
,Running a script that makes my RAM usage look like an actual Python.,748xg7,top,32,433,433,0
,TIL that initial Python commit was 26 years ago. I am too young.,4zwgf3,top,110,431,431,0
,"Compared breakdown by region on Google Trends for Python, Java, JavaScript, C#",9anytb,top,93,436,436,0
,Curated list of 80 Python courses (Updated),4p5657,top,24,428,428,0
"https://youtu.be/X7jf70dNrUo

Very interesting perspective",Sentdex on Udemy's awful business practices,8sl76u,top,129,428,428,0
,"Lucky Cat spinning-arm persistence of vision display, powered by MicroPython",8javkt,top,19,432,432,0
,Download information on all your gmail emails and the body text to either csv or json. I developed this to download my 100K + emails stored over several years on gmail.,7ipz81,top,30,428,428,0
,Complete Guide on working with Python and MySQL,94ir2n,top,41,431,431,0
,A quick tour of Python 3.7's new breakpoint feature,852t3a,top,68,428,428,0
I have followed Miguel Grinberg's blog ( https://blog.miguelgrinberg.com/ ) and Sentdex blog ( https://pythonprogramming.net/ ). I was looking for blogs  that focus on a particular module entirely like Web development or Image Processing or GUI or anything related to Python. ,What are some amazing blogs related to Python?,8aigrf,top,48,426,426,0
"As is tradition it's nice to bring this up every so often and witness everybody's creativity. So how have you made your life easier?

My most recent was as script to delete all entries older than a year from dozens of microsoft access database files.",What Python program have you created to make your life easier?,5esa4g,top,340,425,425,0
,"I got tired of printing variables, so I built IceCream: a little library to sweeten debugging.",7xjwm2,top,77,423,423,0
,Evolving Simple Organisms using a Genetic Algorithm and Deep Learning from Scratch with Python (Tutorial),7lb4t2,top,48,430,430,0
,Python Overtakes R for Data Science and Machine Learning,6x8uth,top,58,423,423,0
,Julia fractal wallpaper including the parallel Cython code used to generate it,48sanl,top,40,423,423,0
"Just looking for some inspiration in interesting side projects to work on, or neat things that I could possibly implement at my job. ","r/python, what are some of the coolest things you've automated using python?",61vbni,top,344,421,421,0
,"Version 1.0 of my scandir module which speeds up os.walk() by 3-10x, now included in Python 3.5 as os.scandir()",36r6r5,top,39,420,420,0
,How to create a Windows Service in Python,93xuc8,top,19,419,419,0
,Pycon 2016 videos are out on YouTube now,4m0ual,top,53,426,426,0
"Hello all,

I made a bot that plays candy crush and I wanted to share it with you.


Here you can see it in action:

https://www.youtube.com/watch?v=18vqQOPlvO4




The source code is on github here:

https://github.com/AlexEne/CCrush-Bot


If you have any questions feel free to post them here or in the youtube link and I'll try to answer them.
I included a pre-trained classifier (svc.dat) in the github source but it has the possibility to train itself if you provide it with the data. ~~I did not upload that data on github in order to keep the number of files to a minimum. The training data for the classifier basically consists of a bunch of cropped candies.~~ LE. I also uploaded the training data.

Cheers,

Alex",I made a python bot that plays Candy Crush,2wrxeu,top,84,421,421,0
,Practical Introduction to Web Scraping in Python,7sfzdc,top,22,417,417,0
,What every Python project should have,5n4jz7,top,146,416,416,0
,"Bloomberg just open-sourced their IPython-based interactive plotting software, bqplot",3ntpf9,top,53,413,413,0
,PyCharm 2017.3 is out now,7gdt9s,top,132,419,419,0
,Free eBooks on Data Visualization and Machine Learning,8x3pdg,top,20,414,414,0
,Understanding Python's new Dataclasses,8vrlke,top,94,413,413,0
,Introduction to web scraping with Python,6cas7x,top,26,418,418,0
,Minimal and clean examples of data structures and algorithms in Python,65mxbw,top,44,410,410,0
,Apparently PIP just got upgraded from 10.0.1 to 18.0,90zhfk,top,95,415,415,0
"I became fluent in Python a few years ago but never used it for anything besides assigned coursework or job related tasks. I’ve been looking to apply my skills in a way that would inspire me to excel while being enjoyable and have been having a fairly hard time with it. 

So what are the most fun things you’ve used Python for that can be turned into a long term hobby? ",What are some fun things to do with Python?,8axg0p,top,147,410,410,0
,Library which provide mock data for any purpose. From cryptographical data to personal data.,6vb4n0,top,31,414,414,0
,Use More Iterators,590vcp,top,70,413,413,0
,Know Python? Want to pick up some basic (pip installable) Game theory? I've written documentation for Nashpy.,6hv664,top,16,403,403,0
,Here's the trailer for a game I made in Python using Tkinter!,5zed47,top,106,412,412,0
"**tl;dr**

An open source, free,  python personal assistant with a user expandable plugin framework and nlp from spaCy.io.

* Sign up: http://willbeddow.com/signup
* Web app: http://willbeddow.com 
* Github: https://github.com/ironman5366/W.I.L.L
* Android app: https://play.google.com/store/apps/details?id=com.willbeddow.will
* Telegram interface: @WillAssistantBot on telegram

**Details**:

A while back, [I posted a video](https://www.reddit.com/r/Python/comments/47jdxi/my_open_source_python_personal_assistant/) of my personal assistant - W.I.L.L. It was my first major project, and you guys gave me alot of tips and comments on what you liked, how I could improve, and the right way to do some open source stuff that I hadn't previously encountered.

After **a lot** of rewrites, extensive work (by both me, and the W.I.L.L community), I'm happy to present W.I.L.L version 3.0.

**What can W.I.L.L do?**

One of my major goals with W.I.L.L was not only to make a cool concept for a personal assistant, but to make it usable and useful. W.I.L.L. already has a number of useful plugins, and it's super easy to add more. 

**Plugins W.I.L.L already has:**

* News: ex: ""read me the news"" - a summary of the news from a site of your choice, refreshed every twelve hours
* Weather: ex: ""What's the weather like?"" - weather for your location, delivered using PyOwm
* Spotify: ex: ""Play jukebox hero on spotify"" - Searches spotify and opens a spotify url for the song that's found. On android, will open in the spotify app
* Netflix: ex: ""Watch Futurama on netflix"" - searches netflix and opens a netflix url for the shwo that's found. On android, will open in the netflix app
* Reminders: ex: ""Remind me in 10 minutes about how awesome W.I.L.L is"" - sets reminders. You can currently be notified via email and socket.io push notifications on the web app, and thanks to the expandable notification framework, it's easy to add new methods of notifying the user.
* **Search**: The crown jewel of the plugins, set to run by default when no other plugin is triggered by the input. Search runs through a chain of different search engines and sites to find the correct answer of a question. It first searches wolframalpha and wikipedia, and if it can't find anything it uses nlp from the newspaper module and bs4 to parse a correct answer from the top google result.

**Just how easy is it to add a plugin?**

    from core.plugin_handler import subscribe
    def run_check(event):
        #Check for a word in the provided spacy nlp object
        return ""example"" in [i.orth_ for i in event[""doc""]]
    
    @subscribe({""name"":""example"", ""check"": run_check})
    def example_plugin(event):
        return {""type"": ""success"", ""text"": ""example"", ""data"":{}}
    

That's it.

**Contact me**
If you have any requests for new plugins, or further comments about W.I.L.L, feel free to email me at will@willbeddow.com or leave an issue on the [Github page](https://github.com/ironman5366/W.I.L.L)

W.I.L.L is very much still in development and I could use suggestions and advice

Thanks!

**Edit**: I forgot about the API! W.I.L.L also provides a free JSON API to use it's features, easily allowing new clients to be written for any platform. It's currently lightly documented in the README, with an example in the quickstart. More extensive documentation is coming as soon as I figure out how I want to write it!
","W.I.L.L 3.0 - A free, open source, python personal assistant",5r1zko,top,48,411,411,0
,This video helped me code better and wanted to share: Clean Architecture in Python,41jx4w,top,41,405,405,0
,Laziness is a virtue,2swn1t,top,54,412,412,0
,Why Python 3 Exists,3x7ewr,top,158,404,404,0
,IPython 6.0 released – Stop Python 2 support,66dq42,top,67,407,407,0
,What’s New In Python 3.6,4dqqys,top,278,410,410,0
"The why is understandable: Python is easy. Gluing all those libraries together, and make them readily available is very desirable.

Python is not the only language that does what it does. It is the most popular, though.

What I am interested in understanding is the history of this actually happening. Why Python, and not any other scripting language?","The more I learn about Python, the more I realized I am practically only using it as a wrapper around libraries written in Fortran, C, ... How have Python become *the* wrapper everybody uses?",6v0amj,top,202,405,405,0
,Machine Learning Explained with GIFs,6aku0r,top,6,402,402,0
,Python 3.4.0 has been released!,20m3g3,top,171,401,401,0
,Practice algorithms and data structures (and prep for coding interviews) with interactive coding challenges in Python,992yvh,top,30,405,405,0
,"Ubuntu Devs Work on Demoting Python 2 to ""Universe"" Repo for Ubuntu 18.04 LTS",7jeott,top,149,404,404,0
,FoxDot: a python package for making music as you program,780tyb,top,62,402,402,0
,Python Top 10 Articles for the Past Year,5rqc65,top,15,405,405,0
,"Django 1.8 and Python 3: Complex app tutorial, end-to-end",35hac5,top,19,407,407,0
,Interactive Mind Map for learning Python,6op7uc,top,25,398,398,0
,A List of Non Trivial Python Exercises,71h4cz,top,34,402,402,0
" Project Byzantium is a distributed, decentralized, mobile, meshnet on a Linux LiveCD that goes up in 60 seconds. The current version fully works, I've used it myself! The developers want more code to tackle new features, more services, and create help with making users anonymous.

http://project-byzantium.org/presentations/HOPE_Byzantium_Presentation.pdf

http://project-byzantium.org

http://www.hacdc.org/2012/08/project-byzantium-interviewed-by-slashdot-at-hope-2012/

Testers, bug reporters, and TORRENT SEEDERS are also needed as well! Please paste this into other places decicated to freedom of information and open access for all!

-edit from below-


Project Byzantium is not for the whole world, not like a replacement internet. That's what Project Meshnet is. The Byzantium Project is on a smaller scale, and not 100% permanent. It could be if you feel like keeping one up I guess! This is made to be able to get people up and running with thier own free network to one another and communicating and transmitting files and data as fast as possible in an emergry situation. In the slides it gives a couple examples. Like when hurricane Katrina hit and no one could communicate with one another. Or in Egypt when the government turned off the internet and started killing all the protestors. That's what this is for.",Know Python? Project Byzantium needs your help!,1spfvg,top,71,403,403,0
"I created [PythonBooks](http://pythonbooks.org/) as a side project.

The website is a guided repository of Python books. It classifies Python books into fine grained categories and shows the best books in each category. It has filters for Python version, free and non free books etc. For the beginner book section, you can even filter the books by topics that you want to learn.

Enjoy!

Thanks a lot for all the encouraging comments, for suggesting improvements and for pointing out errors that have escaped my attention. If you know one of these books and have a few minutes, I would be really grateful if you left a review by clicking the ""Comment on GitHub"" button on the book's page.",PythonBooks: Find the best Python books,6l7946,top,74,403,403,0
,Live visualization of all the pokemon in your area written in Python,4tl1md,top,121,400,400,0
,Requests-HTML: HTML Parsing for Humans,806my0,top,60,393,393,0
,4 Python libraries for building great command-line user interfaces,6a67l7,top,23,396,396,0
,Top 15 Python Libraries for Data Science in 2017,6bvwvn,top,27,394,394,0
,Humble Book Bundle: Joy of Coding,4y7oax,top,70,391,391,0
Any comments or links welcome. I'm trying to understand what the barriers are that keep us on Python2,Are you still on Python2? What is stopping you moving to Python3?,7dcgnq,top,349,397,397,0
"I am NOT a developer.  But, I've tinkered with programming (in BASIC, Visual Basic, Perl, now Python) when needed over the years, starting in my teens during the 80's and throughout my career, and had at least entry level courses in COBOL(in about 1990), C, and Java (in about 2009) while getting my degree.  (I was somewhat of a nontraditional student.)

Today I decided that I needed to script something, and hoped that *learning* how to do it in Python was going to take me significantly less time than doing it manually - with the benefit of future timesavings.

No, I didn't go from 0 to production in a day.  But if my coworkers will leave me alone, I *might* be in production by the end of the day tomorrow.

The last thing I used to scratch an itch like this was Perl in about 2013.  Like with Python, I was learning as I went.  And in that case - while some parts weren't bad, other parts were like running barefoot over sharp glass.  I have working Perl from back then that I still don't *quite* understand bits of, because the best I could do is take someone else's example and massage it for my needs in some places.  (In fairness, what I was doing there was a bit more complex, but it still wasn't rocket science.)

What I'm working on today isn't super complex - I'm taking some user input, making some decisions based on that input, reading a .csv, and will ultimately output a json file - but I've been able to easily understand everything I've done so far.  I've done a bit of googling around the json and csv bits, and that seems pretty easy too.  But putting together what I've done so far has just been a complete joy.

The syntax is so wonderful - it took me a couple of minutes to realize, for instance, that there was no ""wend"" or similar for a ""while"" loop, that merely the end of a code block would serve the same purpose.  But when I did I immediately thought ""wow, of course not - how efficient is that?""   I feel like that's a big part of what I'm enjoying - things that maybe should be able to be implied rather than explicitly typed in or stated, actually *are* implied in many cases.  It feels like there's a lot less in the way of required punctuation, that's for sure.

Overall it feels natural, intuitive, and relatively easy to understand and write the code for the basic things I'm doing - I haven't had this much fun doing stuff with code since the days fooling around with BASIC in my teens.

Well, thanks if you actually read this far.  I've just found this to be so fun and exciting I had to share it with folks who might care.  I think I'm going to be looking for excuses to script things with Python going forward.  :-)


**Edit:**  Wow, interesting responses in the comments.  Seeing what the community here is like just fans the flames.  Thanks all!


","Dear Python, where have you been all my life?",8ndhel,top,92,392,392,0
"Hi guys, 

according to IEEE Spectrum, Python is the No. 1 in the ranking of the top programming languages of 2017.

Take a look [here](http://spectrum.ieee.org/static/interactive-the-top-programming-languages-2017) to see the interactive ranking.

Python has continued its upward trajectory from last year and jumped two places to the No. 1 slot.

In particular, Python is the No. 1 for Web and Enterprise categories but is not present in the top 14 positions in the Embedded category despite the constant growth of solutions such as [Zerynth](https://www.zerynth.com/) and [Micropython](http://micropython.org/).

What do you think of this ranking? And what about the embedded category? Do you think Python has a future in this area too?",The 2017 Top Programming Languages according to IEEE. Python jumps to No. 1,6o6ynw,top,109,392,392,0
,Fizz Buzz in Tensorflow (x-post from /r/ProgrammerHumor),4krx81,top,22,388,388,0
,Effectively Using Matplotlib,67g4vp,top,44,390,390,0
,Python GUI Examples (Tkinter Tutorial),7s7dsi,top,59,392,392,0
,Machine Learning is Fun: A simple explanation of how image recognition works using python and tflearn,4nx19n,top,16,391,391,0
,Comparing city street orientations with Python,8xr1at,top,49,390,390,0
,How to fake a sophisticated knowledge of wine with Markov Chains,647zoi,top,18,387,387,0
,I use Python to make old piano jazz playable again.,22ssh6,top,36,389,389,0
"EDIT: I didn’t realize that the title is somewhat misleading, I already had experience interacting with RESTful APIs in PHP, Ruby, and JavaScript. I’d been wanting to build a project like this for awhile and used it as an excuse to get familiar with Python. 

Using a throwaway since I cannot change my Spotify username

The playlist is here: https://open.spotify.com/user/1285950058/playlist/0d8k1FfVCrCZUnSXTcAlUE

The playlist is generated from crawling the first 10 pages of the songs on this list: https://www.besteveralbums.com/topratedstats.php?o=track

The playlist is set to update every day, though I don't know how much this list changes over time. 

There's some limitations, however:

* If the song isn't on Spotify, there's not much I can do about that.
* If the text of the song doesn't match the name of the song exactly on Spotify, the song won't get added to the playlist. (I'm trying to figure out a way to make the search results more accurate)
* I could not get the crawler to actually add the songs in order, so the order right now is random

Using this method, I was able to accurately add 84 out of the top 100 songs on this list.

I'd love to hear your feedback, and feel free to follow the playlist! 

(Sorry if this breaks any rules on the subreddit) ","Decided to start learning Python last week, and using Python and Spotify's API, I created a playlist that's automatically updated from BestEverAlbums.com's Top tracks of all time list",8r5dku,top,47,387,387,0
,The Ultimate Guide to Data Classes in Python 3.7,8jmjwh,top,50,383,383,0
,Auto-generated skyline using next version of Arcade library,79csuw,top,25,383,383,0
,"Ubuntu 16.04 LTS to Ship Without Python 2, Windows Printers Detection Affected",49c950,top,94,386,386,0
,Response to my script for a small python calculator coding challenge.,3kjayo,top,56,380,380,0
,What is love?,3pwoxp,top,50,383,383,0
,HumbleBundle - Python DevKit,8gjhyx,top,149,384,384,0
,Python 3.6.3 is now available,7438dm,top,105,381,381,0
,Pip 10 has been released,8c7ce1,top,87,382,382,0
,Simple Machine Learning Tutorials,7nvqz9,top,10,378,378,0
"After speaking with the people at Educative, we have decied to make my Python 101 online course completely FREE for the next 48 hours on [Educative's website](https://www.educative.io/collection/5663684521099264/5707702298738688). Be sure to go get yourself a copy.

It is based on my book, [Python 101](https://leanpub.com/python_101/), which is also free. When you get it from Educative, it will be yours to keep for life. Note that this is an interactive online course, **not a video course**. If you enjoy the Python 101 online course, you can get my second online course, [Python 201](https://www.educative.io/collection/5663684521099264/5693417237512192) for 50% off just by using the following coupon: **au-reddit-py201**.

Links:

- Python 101 [Online course](https://www.educative.io/collection/5663684521099264/5707702298738688) (FREE for 48 Hours)
- Python 201 [Online course](https://www.educative.io/collection/5663684521099264/5693417237512192) (50% off with au-promo-py201 coupon

You can also get my eBooks for 50% off the suggested price with the following links:

- [Python 201: Intermediate Python](http://leanpub.com/python201/c/50percent)
- [wxPython Cookbook](http://leanpub.com/wxpythoncookbook/c/50percent)",Python 101 Online Course is FREE for 48 Hours!,60gdde,top,98,378,378,0
,Turtle Pig Pen Cipher,8dgvcq,top,30,379,379,0
,Advanced Numpy Techniques,7lwokp,top,21,382,382,0
,IPython notebooks are being distributed as supplementary materials in peer-reviewed academic publications to enable readers to reproduce the computational aspects of the work.,2lhhb7,top,60,376,376,0
,"CPython has migrated to GitHub, and the repo is now live!!",5tado0,top,37,373,373,0
"Yep, you can write a module that blocks another module from being imported. Go into sys.modules, which is a dictionary keyed on module names, and add a None with the key you want to block (e.g. sys.modules['re'] = None).

I was doing a project over the summer where I had to study the Python language reference, and this is one of the things I love telling friends who think they know a lot about Python.",Evil Python trick: block another module from being imported!,9e2d79,top,48,380,380,0
,Cybrary is offering a free Python for security course.,6ryhfz,top,15,375,375,0
,Some Cool Python Tips and Tricks That Are Worth Knowing,53c3wi,top,110,378,378,0
,dataset: databases for lazy people,506sn6,top,69,381,381,0
,Pyxel - open source retro game development environment in Python,94743x,top,34,375,375,0
,"Probably the best lecture I've seen, Raymond Hettinger - Python's Class Development Toolkit",2zp0jy,top,41,379,379,0
,Probably the best tutorial on regular expressions I have ever read,2sgv6d,top,55,379,379,0
,Microsoft announce Python integration into Power BI,99fnb6,top,51,372,372,0
,5 strategies to write unblock-able web scrapers in Python,8gg7ok,top,93,381,381,0
,This is What Python Beginners Have to Deal With,4vup4a,top,382,370,370,0
,"All code from ""Machine Learning with TensorFlow"" is now available on GitHub",5ijwut,top,13,373,373,0
,Dropbox Hires Away Google’s Guido Van Rossum,14ghah,top,89,373,373,0
,Why is the Travis CI Python logo so derpy?,94bf8p,top,36,374,374,0
"Let’s say you’re putting in 10 hours a day coding. 

Here’s an average breakdown of coding hours pattern in my opinion

Coding: 30 minutes 

Google: 3 hours

StackOverFlow: 6.5 hours 

Total : 10 hours 

That’s just based on my opinion. Your mileage may vary ","Having studied Python for the past several months, I have come to realize the pattern in amount of time spent coding",8lxzub,top,166,371,371,0
,I built the beginning of a blockchain in Python to learn lower level of how it works. Might help people here as well.,778icc,top,19,374,374,0
,Stop writing code that will break on Python 4!,40mql4,top,185,370,370,0
,How Victor Stinner fixed a very old GIL race condition in Python 3.7,83hxl4,top,19,368,368,0
"Hi guys! You might already know that I released a free and open source book on Intermediate Python. The name of the book itself is also [intermediate Python](http://book.pythontips.com). After my [last](https://www.reddit.com/r/Python/comments/3hbb46/i_just_released_alpha_version_of_intermediate/) post the book received a lot of patches and it is in a whole lot better shape now. It also received a LOT of positive response from the community. It remained on the front page of [Hacker News](https://news.ycombinator.com/item?id=10075078) and /r/Python. It is currently a [trending](https://github.com/trending?l=python) project on [GitHub](https://github.com/yasoob/intermediatePython) under the Python tab. I am happy to say that it has entered beta stage now. This is the best time to take a look if you haven't already.

Moreover, if you want to add anything to the book or just want to polish it further then you are more than welcome to submit a Pull request on GitHub.

I just wanted to write a quick note that a lot of people asked me last time whether I accept donations. I wasn't accepting donations untill recently. I have uploaded the latest build of the book on [Gumroad](https://gumroad.com/l/intermediate_python) so if you feel like tipping me then you can buy the donation version of the book from [Gumroad](https://gumroad.com/l/intermediate_python). It would mean a lot to me and would help me to continue writing free quality content.

**Links:**

- [HTML](http://book.pythontips.com)
- [EPUB](http://readthedocs.org/projects/intermediatepythongithubio/downloads/epub/latest/)
- [PDF](http://readthedocs.org/projects/intermediatepythongithubio/downloads/pdf/latest/)
- [Donate](https://gumroad.com/l/intermediate_python)
- [Blog](http://pythontips.com)","I recently released ""Intermediate Python"", a free and open source Python book. After receiving a LOT of positive feedback and support it is in Beta stage now!",3i3z4p,top,23,372,372,0
,"I made a web service that returns a random compliment :) (results may vary, compliments returned may be of a sexual nature, as they are sourced from /r/gonewild)",3uhc4l,top,83,370,370,0
,A Chrome Extension that adds direct links to `import` and `from ... import` statements on GitHub,65flun,top,36,366,366,0
,VIM and Python - a match made in heaven (learn how to set up a powerful VIM environment for Python development),4ngca0,top,145,366,366,0
,How I extracted Super Mario Bros level data using a 6502 emulator written in Python [xpost /r/programming],8us6ks,top,6,366,366,0
,The Ultimate Guide To Speech Recognition With Python,86440q,top,13,373,373,0
,6.0001 Introduction to Computer Science and Programming in Python. Fall 2016 - YouTube,5ue5ys,top,24,367,367,0
,Google is finally working on Python 3 for the App Engine Standard Environment,8qlwvy,top,41,362,362,0
,Visualize python code execution,20b4h3,top,26,366,366,0
,"GitHub language statistics, Python is 2nd most popular language!",5craf4,top,55,364,364,0
,How to Crawl the Web Politely with Scrapy,4zibd6,top,62,364,364,0
,Legofy is a python program that takes a static image or gif and makes it so that it looks as if it was created by legos.,3qlze1,top,58,367,367,0
"I'm fairly new to Python but not to Programming. With the programming languages that I've learned in the past I always see a recurring pattern — some libraries (modules) are more often used than others.


It's like the Pareto Principle (80/20 rule), which states that 80 of the outputs (or source code) will come from 20 of the inputs (language constructs/libraries).


That being said, I would like to ask the skilled Python veterans here on what they think are the top 10 most used built-in modules in a typical Python program, which a beginner Python programmer like me would benefit to know in detail?


EDIT:

Thanks to all that have replied :)


I found a site where I can study most of the modules that you suggested:

(Python Module of the Week)

Contents:  http://pymotw.com/2/contents.html

Index:  http://pymotw.com/2/py-modindex.html

Of course, there is no substitute for the official documentation when it comes to detailed information:

Python 2.7.*:  https://docs.python.org/2/library/index.html

Python 3.4.*:  https://docs.python.org/3.4/library/index.html",What are the top 10 built-in Python modules that a new Python programmer needs to know in detail?,28yo37,top,135,364,364,0
"Hi everyone.

I've read a LOT of programming books, so I decided it was time to give one back to the community. Since I love working with the Tkinter library to create GUIs, I decided to write a book which will hopefully help teach newbies how to get started with writing their own GUI applications.

I've finally finished and released Learn Tkinter By Example. It's free, released under Creative Commons with the Python source code released with the MIT licence. The Latex source code is also available alongside the PDF book, should anybody want that for any reason.

The book is available from my Github here, along with more details:

https://github.com/Dvlv/Tkinter-By-Example

All feedback is welcome (preferably constructive rather than just insults!) As the book states towards the end, I am completely open to working on developing it further if need be. Source code comments, questions, and changes can be sent to me through Github, and anything book-related can be messaged to me directly here or through twitter (@Dvlv292).

I hope this book will be of use to some of you.","My first book - Tkinter By Example - now available (Free, CC BY-ND)",6dnfsw,top,70,360,360,0
,Tackling graphical programming in Python.. I had to make a small adjustment to my book title for use at work..,16p63p,top,44,362,362,0
,"From December 31st, 2018, Pandas will drop support for Python 2.7. This includes no backports of security or bug fixes (unless someone volunteers to do those)",8c883i,top,40,358,358,0
,A Beginner's Guide to Neural Networks in Python and SciKit Learn 0.18,68uhx9,top,15,364,364,0
,I made Python exceptions a little better.,60scld,top,117,363,363,0
,XKCD-style plots in Matplotlib,11mfge,top,14,366,366,0
"Hey guys, 

I’ve been working on building a really detailed course around the Flask framework to get many beginners started with web development with Python. 

Course Page: https://www.thecodewolf.com/courses/python-flask-web-development/

Here are the first few videos of the series, I’ve also have written tutorials with the videos as well:

* Overview & Installation
    * [Video](https://youtu.be/Ty2qAlDsAxc)
    * [Blog Post](https://www.thecodewolf.com/introduction-to-python-flask-web-development-overview-of-flask/)
* Hello World & Flask Application Structure
    * [Video](https://youtu.be/OrTWfZpv0i0)
    * [Blog Post](https://www.thecodewolf.com/python-flask-web-development-hello-world-flask-application-structure/)
* Flask Templates, Jinja2 Tutorial, Bootstrap Integration, and Custom Error Pages
    * [Video](https://youtu.be/0M74EGmqWIY)
    * [Blog Post](https://www.thecodewolf.com/python-flask-web-development-flask-templates-and-flask-bootstrap-integration/)

The next few videos and guides will be coming out in the next few days/weeks, and I’ll be releasing new content on a regular basis.

**My goal is to create the best foundational web development course with the Flask framework to get as many people started with Flask as a stepping stone in web development with Python.** 

If you guys enjoy the content, I will also be working on a detailed series like this with Django as well.

Here are some of the following videos that will be coming up with the series:

* Web Forms with Flask
* Database Integrations with Flask

Then I will be working on content that will actually have you build a complete blog application with users, blog posts, and all sorts of other really cool stuff. 

With the current content so far, I would love to hear some feedback as well.

~ CW",Detailed Flask Web Development Series,6z5jkx,top,35,359,359,0
"Hi guys.

Here on [CheckiO](https://py.checkio.org/) we want to put together a list of the most interesting and popular blogers. After conducting a small research of my own (read ""googling"")  I decided to raise this question on reddit as well.

Which of the python-blogs you think is the best one and why? (I'm asking your personal opinion) 

Also, please, state only one blog in your comment, so later we could have a raiting based on the amount of votes that each one got. This way, the question, as a reddit post, will have a big value to the reddit community.

What do you think?

Thank you for all of your opinions.
",Best Python Blog,6tff4j,top,37,358,358,0
,How many people are around? Monitor wifi signals to count the number of cellphones around you,6aytne,top,50,363,363,0
,"Predict stock movement a day in advance through python, supervised learning, and social media analytics (Waldo Update!)",5a05hs,top,112,355,355,0
,"Dropbox introduces Pyston: an upcoming, JIT-based Python implementation",224e6a,top,80,356,356,0
,Visibility graph simulator built using Pyvisgraph,8nsems,top,10,358,358,0
,"Taking a class on Python over the summer, saw this little shout out to you guys.",6ni5qt,top,32,357,357,0
,Automatically grading multiple choice tests/exams from photos with Python & OpenCV.,55nsck,top,32,358,358,0
,Awesome Python features explained using Harry Potter,94p5tl,top,54,356,356,0
,Machine Learning with Python - Easily Explained,8lqmul,top,15,353,353,0
,Heroku switching default to v3.6.1,6fvgrf,top,29,357,357,0
,Corey Schafer just released a 6.5h Django Tutorial on his channel,9c3xfn,top,24,352,352,0
,Pandas: Meet the man behind the most important tool in data science,7ifyn3,top,60,359,359,0
,"Using Python to automatically create square-mile figure-ground diagrams of cities' street networks, to compare urban form anywhere in the world",5lsuef,top,11,354,354,0
,Build Your First Python and Django Application,5s6b4d,top,55,356,356,0
"Hello everyone.

I'm a beginner in Python and still doing a course on it. I just started Python just 2 months. I really want to motivate myself to continue learning Python, but I only learn the course on and off . I felt that only way to keep me going is be shown on how great and useful Python is. Yes, I do have a project I plan to do with the knowledge of Python, but just feel lazy sometimes (I really want to be very committed).I will really get inspired and motivated when I see the amazing things that Python can do and create. Please tell me your stories. 
Also, you can mention how it was life changing.

Did it help make your job non related to programming easier? 

Were your co-workers impressed by your skill and felt like they should learn too?

Did it help get you a job?
Thank you",What's the coolest thing you did with Python?,88w1ws,top,440,351,351,0
"It's hard choosing a path to go down so a little description on your path would be an interesting read :)

Edit: I did not anticipate so many replies! I wish I could reply to everyone so I'll do it here. Plenty of food for thought and an extremely interesting read thanks! ","To those who have a career in Python post a little description on your role, interested in the kinds of jobs python programmers do!",3e239y,top,316,353,353,0
,Building Modern Applications with Django and Vue.js,8lays5,top,26,352,352,0
,Free python book,7qwuwy,top,46,349,349,0
"There is an awesome Humble Bundle from No Starch Press where you can pay what you want and get Automate the Boring Stuff with Python amongst other great books. Awesome stuff.

https://www.humblebundle.com/books/no-starch-hacking-books",Pay what you want and get Automate the Boring Stuff with Python (amongst other great books),4gq5fy,top,58,349,349,0
,"I had a hard time getting started with Micropython, so I decided to write a guide to make it as easy as possible for people like me. Enjoy!",5lppph,top,17,353,353,0
,Snips.ai open-sources its Natural Language Understanding Python lib,835q1v,top,21,353,353,0
,"Python 3 Quick Tip: The easy way to deal with file paths on Windows, Mac and Linux",7ue8lo,top,64,354,354,0
,I documented all 100 Flake8 violations and created a website for them,7hicx4,top,33,353,353,0
,TV Overlord - I think it's gotten good enough for others to use.,4y0y0i,top,69,351,351,0
"I recently came across one that I think takes the cake.

I accidentally had nested `multiprocessing` things happing at one and got:

    AssertionError: daemonic processes are not allowed to have children

Are there better ones?",What is your favorite Python error message?,4ivd2k,top,182,347,347,0
,Python Top 10 in September 2017,73ffsg,top,9,353,353,0
,Serpent.AI - Game Agent Framework. Turn ANY video game in a sandbox environment for AI & Bot programming with Python. (Beta Release),71uwob,top,26,349,349,0
,I coded an Augmented Reality billiards game for my computer science class!,69p2ep,top,32,351,351,0
,Python at Netflix,1a35h8,top,87,346,346,0
,Monty Python explained Python's type system,8u92p7,top,37,349,349,0
,Automating my co-workers job.,2mkcq2,top,74,347,347,0
"    Python 80,220 (learnpython 26,519)
    Javascript 51,971
    Java 33,445
    PHP 31,699
    AndroidDev 29,483
    Ruby 24,433
    C++ 22,920
    Haskell 17,372
    C# 14,983
    iOS 13,823
    C 11,602
    Go 10,661
    .NET 9,141
    Lisp 8,996
    Perl 8,596
    Clojure 6,748
    Scala 6,602
    Swift 6,394
    Rust 5,688
    Erlang 3,793
    Objective-C 3,669
    Scheme 3,123
    Lua 3,100

    ""Programming""  552,126
    ""Learn Programming"" 155,185
    ""CompSci"" 73,677",Python subreddit has largest subscriber base of any programming language subreddit (by far).,2h1e1c,top,118,346,346,0
,Detecting Fake Videos with Python,6gx6yv,top,18,345,345,0
,Scan Darknet with Python (Tutorial),5w9cj1,top,33,346,346,0
,The most fun eight lines I've written.,2fk5se,top,125,348,348,0
,Be a self taught Python programmer in 2018. (MOOC),83ww7c,top,54,346,346,0
,The Redesigned Python.org,1ydxil,top,120,344,344,0
,WebSockets - Full Stack Python,89ynd0,top,16,345,345,0
,Matplotlib 2.1.0 released with major new features,7501ch,top,35,343,343,0
,Wrote a new tool that makes beautiful dir() output,5ykbef,top,94,339,339,0
,This project to upscale images from 16x16 to 64x64 was in Python Weekly. Not once does the project mention 'enhance'.,50npe4,top,44,343,343,0
,Create TUI on Python,8dukue,top,29,342,342,0
,GUI Programming with Python,3vmaot,top,73,339,339,0
,"letsencrypt, a free cert auth, a Python service to help you easily convert to HTTPS, enters public beta today",3va5h6,top,29,341,341,0
,Python Pandas: Tricks & Features You May Not Know – Real Python,9ba0vf,top,15,342,342,0
,Create your own Twitter Bot with Python and Tweepy!,8aqc1x,top,43,339,339,0
"I'd like to take part in DigitalOcean + GitHub's Hacktoberfest this year, but I've never really contributed to any open source projects before and don't really know where to start! Does anyone know of any projects that accept contributions from anyone and that don't require months of playing around with before getting comfortable with?",What are the best GitHub repositories that anyone can contribute to?,75oq5k,top,51,344,344,0
,A simple GUI spreadsheet in less than 100 lines of Python,7klkzi,top,32,338,338,0
,The history behind the decision to move Python to GitHub,5t6y5g,top,37,335,335,0
,Awesome Python,4eh1oq,top,34,337,337,0
,Resources for Learning Python,883sn9,top,18,337,337,0
,Python: range is not an iterator!,812gsn,top,67,340,340,0
,Average Face: Python / C++ Tutorial with Code,5vxqr4,top,19,341,341,0
,pythonhearted. feel free to get the high resolution image from github and use it any for personal needs.,8bxtre,top,37,334,334,0
,Python Release Python 3.7.0a4,7p7yi4,top,52,337,337,0
"Edit:  
Which python package did you use if any? In which department did it take place? If you've installed similar programs for non-IT offices/companies, I'd also like to hear your story.  

I'm learning python and wondering how the things I'm learning will be of any practical use in the future. ",What menial tasks within your company have been automated and saw real returns in the form of time or money saved thanks to Python?,6rr4b9,top,239,336,336,0
,plot.ly is now free and open-source,3t6tzk,top,35,336,336,0
,Deep Learning Enables You to Hide Screen when Your Boss is Approaching,5oz4st,top,21,339,339,0
,Top Python Articles for the Past Year,7tuy39,top,7,330,330,0
,py3redirect - Chrome extension - Automatically redirects to Python 3 documentation when Python 2 docs page is requested,51esme,top,40,333,333,0
,Where the f*** can I park? [OC],472az8,top,87,340,340,0
,tt - a Python library for Boolean algebra and truth tables,7aiuyp,top,37,335,335,0
,Python Packaging Is Good Now,4xnip4,top,142,328,328,0
What types of things do you use Python for when automating your life or tasks at work?,How do you use python to automate tasks in life or at work?,308ucq,top,337,335,335,0
,Python is the most popular programming language of 2015!,2vbsl7,top,66,328,328,0
,"""9 reasons you should be using PyCharm"" by the host of Talk Python to Me",58sheq,top,297,332,332,0
,"""High Performance Python"" co-author Micha Gorelick has quite an impressive author bio...",3imbe2,top,26,337,337,0
,"Python-Game. Rock, Paper, Scissors, Lizard, Spock",8tuima,top,86,330,330,0
,Dave Beazley started working on the 5th edition of the Python Essential Reference and will use Python 3.6 as a starting point,5uowp5,top,14,334,334,0
Interested to hear how you are using Python scripts as your personal assistant to enable your work. I know this question is asked often but each time it unearths few gems. ,How are you using Python scripts as your personal assistant at work?,4oyya0,top,279,333,333,0
,PyFormat.info - Everything you ever wanted to know about Python string formatting (Built at the PyCon sprints),32ocbx,top,34,336,336,0
,Python code to solve xkcd 1313 (ipython notebook),1ujxrm,top,35,330,330,0
,IPython gets $1.15M funding,14ptyq,top,79,332,332,0
,Optimizations which made Python 3.6 faster than Python 3.5.,6fdwgn,top,8,333,333,0
,A PEP8 Wallpapper,3wrwff,top,50,324,324,0
,"TIL about ""Google Python Style Guide""",3ueu7c,top,57,326,326,0
,Full Stack Python: a free open source guide to learning all layers of the Python web stack,1wqmws,top,35,331,331,0
,Making your C library callable from Python by wrapping it with Cython,8gwjuk,top,42,329,329,0
,5 speed improvements in Python 3.7,7wwwm5,top,43,327,327,0
"...or Java (and soon, Ruby, PHP, C#, etc.). 

It's my first website with Flask (my first real dynamic website?). I wanted the domain to be coderedd.it, but it was too expensive :(. So I just asked my brother to help me host it. 

Comments appreciated. :)

[r.doqdoq.com](http://r.doqdoq.com)

UPDATES:

- NSFW indicator for Python (can't figure out where/how to place it in Java, but it still checks for NSFW so it won't load image previews)
- don't preload all images (thanks to canuckkat)
- use `def` instead of `class` in Python

UPDATES 2:

I just opened up the repo at bitbucket https://bitbucket.org/john2x/rdoqdoq :) 
 
Thanks everyone! 

","A website that lets you browse Reddit like you're 
reading/coding in Python!",k6enr,top,73,334,334,0
,My first PyQt5 application,8vgage,top,119,326,326,0
,Have any of you made money/have a passive income by automating a process with python?,7f52lf,top,194,326,326,0
,An Easy way to play with your Photos with Python,6tsoe1,top,28,330,330,0
,Python... slowly taking over the world (Python in SQL Server 2017),66ofa0,top,38,328,328,0
,Made this with Python 2.7 from scratch (no django or flask) no git just yet but soon!!,4l71if,top,79,329,329,0
,The Idiomatic Way to Merge Dictionaries in Python,477tqv,top,112,327,327,0
,Teaching my son python...,1b8jn1,top,73,327,327,0
,"PyCharm 2017.2 Released: Docker Compose on Windows, SSH Agent, Amazon Redshift",6pn3u2,top,55,323,323,0
,Accidentally added a 'g' to the Python.org... Was not disappointed,24c5e5,top,43,326,326,0
,29 common beginner Python errors in one flowchart,1jsqgq,top,44,326,326,0
"I've only been using Python for a few months, and before that I used nearly entirely Ruby and Matlab.

I have had some moments where I discover a library or feature that really improves the way I work.

I was wondering what feature or library (or practice) you discovered that noticeably improved how you write Python? ",What one thing took your Python to the next level,5f6ev8,top,242,327,327,0
"Hi there!

I'm a CS student, and usually I like to keep an eye on the job listings of Formula 1 teams so that I can apply to any relevant positions, now or in the future. Opening each website and navigating through a jungle of JavaScript just to view the job titles is obviously a hassle. So over the last week in my spare time, I built an open source website with Python and a little JS to help with the same.

##Website: **https://f1jobs.co**

The most important things for me were speed and up-to-date job listings for the current teams. Here is a summary about the website.

* It remains up-to-date with the changes in job listings automatically. 
* It loads fast and is lightweight (explained in the FAQs section of the website).
* All the code - **[client](https://github.com/F1Jobs/client)[CSS and JS] + [updater](https://github.com/F1Jobs/updater)[Python]** is open-source. If you want to collaborate and help improve it, I'll be glad.
* There is no jungle of JavaScript. No external libraries, no analytics, no tracking scripts, no ads.
* A clean and non-intrusive interface.

### [Source Code](https://github.com/F1Jobs/) and [FAQs](https://f1jobs.co/#faqs)

So if it feels relevant, kindly check it out and let me know what do you think of it. Any questions, feedback or suggestions, I'm listening. Hope this could be of help to some people. Cheers.",I spent the last week building an open-source website with Python (and a little JS) which lets you view and apply for open jobs at all the F1 teams currently on the grid. Check it out: https://f1jobs.co,94u68s,top,64,321,321,0
,PSA: Python 3.3 is end-of-life in 2 days. Are you prepared?,72vswr,top,116,326,326,0
,"Building a self driving toy car with Python, a Raspberry Pi, OpenCV, and TensorFlow",598drh,top,11,327,327,0
,Django awarded Mozilla Open Source Support Grant,3weyzq,top,44,330,330,0
,VIM and Python - a match made in heaven,3qf1qi,top,145,323,323,0
,The Forgotten Optional `else` in Python Loops,8fkbem,top,66,325,325,0
,"Prospector is a tool to analyse Python code and output information about errors, potential problems, convention violations and complexity.",7sogfo,top,6,326,326,0
,11 Python Libraries You Might Not Know,3mc6l3,top,34,322,322,0
,Python quick Cheat Sheet.,s0nbl,top,36,324,324,0
,"Compute distance between strings. 30+ algorithms, pure Python implementation, common interface.",878vjb,top,33,319,319,0
,"PSA: If you've been putting off hosting your own, internal package repository or localizing your pip packages, it's a one-liner.",7rwhbt,top,21,322,322,0
,PyPy: How to make your code 80 times faster,79nk6o,top,84,318,318,0
,Data Analysis with Pandas and Python Course - 100% OFF,6lruks,top,37,321,321,0
,opencv python drone - mark a person to be tracked with an object,61krt4,top,17,319,319,0
,Nice curation of 19 free ebooks to learn Python,4l3in7,top,56,317,317,0
,What cool program to automate a daily task did you write?,34982z,top,317,321,321,0
,Hey Reddit! Check out this interactive exhibit I wrote in Python.,e3hi0,top,61,318,318,0
,"If, like me, you need a Python centered break from work; here's a cool and informative video that fits perfectly! As a beginner this is a nice change of pace while still related to Python. I think anyone can benefit from watching it.",53vhk2,top,24,325,325,0
,Python 3.5.2 is released,4q2lxb,top,29,323,323,0
,Raymond Hettinger - Beyond PEP 8 -- Best practices for beautiful intelligible code - PyCon 2015,32d188,top,65,314,314,0
"It's probably already well known, but BeautifulSoup is the beesknees! Im doing more with this than i could have dreamed to do in other languages and in only a few hours.

That being said, im sure there are ways to make it even better! Anyone know of any neat stuff you can do thats not covered in the documentation?

I love the way you can extract the info from html tags just by using find() or get_text(). Really user friendly stuff!!",Some love for BeautifulSoup.,8lhoqu,top,84,321,321,0
,Python on cover of Bloomberg magazine,39pjhf,top,95,324,324,0
,A new package index for Python,8bmjcs,top,36,315,315,0
,Python socket cheat sheet (include AF_ALG),7gt9sx,top,18,312,312,0
"Hey guys, this playlist covers Python multithreading aimed towards beginners. I worked really, really hard to create demonstrable examples that show what each aspect of Python multithreading does.
Threads, Locks, Events, Daemon Threads, Queues, Subclassing threads are all covered.
In the future I will cover : Multiprocessing, Coroutines, Aysncio, futures and have more practical examples.

https://www.youtube.com/playlist?list=PLGKQkV4guDKEv1DoK4LYdo2ZPLo6cyLbm

Hope you can guys can get something out of it and let me know if there is anything you want me to work on =)
",Python Multithreading for Beginners,6u42rz,top,43,323,323,0
,Python Software Foundation News: Python trademark at risk in Europe: We need your help!,18j8dd,top,33,319,319,0
,Stop supporting old releases.,7aq95l,top,199,318,318,0
,Pygorithm: A Python module to teach algorithms and data structures. Contributors are welcome.,6rvr0e,top,21,323,323,0
"I am a Java programmer as my day job and I want learn something new. So I know how for-loops and if statements work and what classes, object and whatever are. I just need to adjust the syntax. But pyhton has a lot of nice features that I don't know about. What kind of learning resources would you suggest?",Best Python resources for experienced programmers?,65589r,top,70,321,321,0
,Mark Cuban Getting his python on.,623jfa,top,50,315,315,0
,"Markov Chains amuse me, so I made a Flask site that uses them to generate Cards Against Humanity answer cards: Chains Invent Insanity",5s8u57,top,85,311,311,0
"I've written a decorator you can apply to your functions to make their contents run with root privileges. It does this by serializing the function and executing it in a sudo'd python interpreter. The user is prompted for their password (if not using nopasswd) so this is suited to interactive scripts and devops-y things.

The code is here:

https://gist.github.com/barneygale/8ff070659178135b10b5e202a1ecaa3f

It has some limitations, so consider it a proof-of-concept:

* You can't write to sys.stdout from the wrapped function. This could be fixed
* You can pass arguments and read return values, but they have to be simple, marshalable values 
* Your function can't use anything from outside its scope
* There's no error handling

Hope it's interesting :-)",@sudo decorator: an evil hack,4enqb7,top,58,313,313,0
,John Hunter author of Matplotlib passed away,z28yw,top,18,318,318,0
,Socket Programming in Python (Guide) – Real Python,93qk9g,top,14,312,312,0
"I do not make money from these videos. The purpose is to share them because many people need this course while Coursera have removed it. **I will remove it immediately when required**. I hope that you can contribute subtitles for these videos.

Week 0: https://www.youtube.com/playlist?list=PLwYi6_tbqG05QiuspMTqMwlLt809eDSFS

Week 1: https://www.youtube.com/playlist?list=PLwYi6_tbqG06wcZc_bymB0Feo9fCxl9Ur

Week 2: https://www.youtube.com/playlist?list=PLwYi6_tbqG06F281oAq1km6RAAQRrhp5l

Week 3: https://www.youtube.com/playlist?list=PLwYi6_tbqG07l1D1v6KtruvAyu3vFhs1v

Week 4: https://www.youtube.com/playlist?list=PLwYi6_tbqG04yvN6AB1m6Q2_MtLWfTwVh

Week 5: https://www.youtube.com/playlist?list=PLwYi6_tbqG07REilUufmy6mWWI-02Nhhp

Week 6: https://www.youtube.com/playlist?list=PLwYi6_tbqG06FTHdyP9JFlc1eh6lWAek9

Week 7: https://www.youtube.com/playlist?list=PLwYi6_tbqG07za58HqRSuT2kp3G3kul43


The poster does not hold the rights for the content posted.

All material © Philip N. Klein.

http://codingthematrix.com/

This is from a video uploaded on Coursera's courses. Currently, this course has been removed and the professor doesn't reopen this course on Coursera.",Coding The Matrix: This course for anyone need.,5j042r,top,35,310,310,0
,"I just finished my biggest programming project so far- I built a Visual Programming Language for programming robot arms, with integrated computer vision, done entirely with Python",4x30bt,top,35,317,317,0
,"Describing Projects as ""For Humans"" must stop",4a9sxa,top,123,317,317,0
,I'm creating an example Python Machine Learning notebook for newcomers to the field. The goal is to show what an example ML project would look like from start to finish. I'd love your feedback or contributions to make it better.,3hu8fj,top,28,315,315,0
,Creating An HTML5 Game Bot Using Python,82r06r,top,3,313,313,0
,"Guido van Rossum on Twitter: ""46 across: Programming language named for a comedy group. https://t.co/aXoOIM3iXZ""",4ibe02,top,25,310,310,0
,How to make your first serious Python project,9795xf,top,22,315,315,0
,Introduction to NumPy and Pandas - A Simple Tutorial,7mdn56,top,24,315,315,0
"Something about needing to inherit from TestCase and TestFixture, the bazillion different asserts, the fucking camel case method names, and all the other numerous  verbose oddities always annoyed me. (aaand maybe I'm a little bitter about my previous bullshit contract too) 

After playing with Pytest today, it's elegance got me and I'm never looking back.  Any developer or tester should give it a serious look for their next project. </rant>",Played with Pytest for the first time today... Uhh fuck unittest,6s4a4p,top,124,312,312,0
"Coursera has a (free) course officially starting on Monday (March 27th) titled [*Audio Signal Processing for Music Applications*](https://www.coursera.org/learn/audio-signal-processing). The first week is already available and it looks like the whole thing will heavily rely on Python (2.7 unfortunately), NumPy and SciPy for signal processing and Matplotlib for graphical representation.

If you're interested in signal processing specifically tailored for audio files and music, and you want to get more familiar with NumPy and SciPy, I think this is a great opportunity!

Bonus point for me: the professor teaching this, Xavier Serra, seems to be a Linux, Open Source and Creative Commons enthusiast since everything (code, slides, audio) is available in an open licence (AGPL or Creative Commons). Yay! \o/","Audio Signal Processing for Music Applications, a heavily Python-infused coursera class (Python, NumPy, SciPy, Matplotlib, etc.)",61eppg,top,16,311,311,0
,A list with companies that allow remote work and use Python,514fbb,top,41,312,312,0
,A Simple Guide for Python Packaging – Small Things about Python,5ww44y,top,71,307,307,0
,How to Build Your First Slack Bot with Python,4mtwys,top,26,311,311,0
,DARPA publishes all its open source code in one place (lots of python),1x32ow,top,21,317,317,0
,Minimalist Python Wallpaper,7ogqcp,top,19,311,311,0
,Flask Mega tutorial: Part I,7hunqm,top,18,311,311,0
,Rendering IPython notebooks on GitHub -- starting today,357bny,top,17,312,312,0
"Hi /r/Python!

We're a small team from Amsterdam building a platform for running Python scripts which stream real-time data into Excel. It's called [Gridarrow](https://gridarrow.com).

**Here's how it works:**

- We run Python scripts that grab data from anywhere you need - APIs, databases, web-scraping and push it directly into Excel via a plugin.
- We have scripts that connect to many different data-sources available, and you can tweak these scripts or write entirely new ones using our online IDE.
- Multiple users can connect their spreadsheets to the same script at the same time and get the same data instantly.
- No VBA required!

We hope this this looks interesting to you. Please let us know if you have any feedback, questions or suggestions for us. You can also subscribe on [our website](https://gridarrow.com) to get early access to Gridarrow as soon as we launch.

Thanks for your help! The Gridarrow Team",Stream real-time data into Excel with Python,6u9psy,top,48,311,311,0
,Release of IPython 5.0,4rsy7t,top,58,312,312,0
,"A comparison of Numpy, NumExpr, Numba, Cython, TensorFlow, PyOpenCl, and PyCUDA to compute Mandelbrot set",40gdqs,top,98,309,309,0
" I was reading [this thread](https://www.reddit.com/r/programming/comments/3myc9b/insider_oracle_has_lost_interest_in_java/) on /r/Programming about how Oracle has lost interest in Java. One of the comments says
> Objective-C / Swift live on Apple island, C# lives on Microsoft island. That leaves going back to C++ or surrender oneself to the Python version schizophrenia (sounds most fun of all other options).

I started learning code with Python and I love it. I write it for fun. Now I'm having to learn Java for college and it sucks. There's so much more code to write to do simple things and you can make so many silly little syntax mistakes so easily that it makes it harder to actuallly write functioning code. A lot of people in my class are completely new to programming and they are so lost. 

I understand that because of the JVM, Java is super duper portable and a lot of existing code is written in Java. Is that the only reason it continues to be used? Would a startup or a company building something from the ground up completly avoid Java? Is Java the only language we can use for Android dev?

C++ seems to be universally hated on with C# being the best alternative but leaving you tied to a MS plaform. 

Then behind all of this there's Python. Python is a dream to read and write. Has a bunch of amazing libraries to do all kinds of cool shit. There's tools like Flask, Django, Kivy and others that allow you to use Python for WebDev and Mobile Dev. 

Even if you look at this sub there are 111,085 readers. /r/Java has 46,788 readers and /r/cpp and /r/csharp have around 30k readers. If everyone loves Python so much why is it not being used more? What am I missing here?

**EDIT:** Too many responses to reply to but thanks everyone for your input. Some good points were made about how I'm srill very new to this and will see the benefit of Java's constraints when working with other devs. Also the fact that Python just cant compete for speed in some situations. 

It seems to me that Python is an excellent tool to have on your utilitiy belt. Great for automating things and supplementing other tools (As well as being perfectly capable, most of the time, of building full size projects). However those other languages might not be that scary and have their own advantages over Python.

In my opinion though Python is an amazing educational tool. I think it could reasonable be introduced in Primary education without too much hassle while I wouldn;t say the same about Java. 
",Everyone who encounters it seems to love Python. Everyone seems to bitch about languages like Java and C++. Why isn't Python more widely used in Enterprise and will it ever be?,3myppd,top,286,311,311,0
,Google boosts Python by turning it into Go,5mqbiz,top,111,307,307,0
,"Continually updated Data Science IPython Notebooks: Deep learning, Spark, Hadoop MapReduce, Kaggle, scikit-learn, matplotlib, pandas, NumPy, AWS, Python essentials, and various command lines",3ynk5l,top,9,310,310,0
,"TIL there is a way to package whole Python virtualenv in a zip file, it's called PEX and it's been used by Twitter since 2011",39fy17,top,58,306,306,0
,Guido: Do not send me email like this,1n27lq,top,38,305,305,0
,[Cheat Sheet] Python Basics For Data Science,7n9zpz,top,20,305,305,0
"Brython is designed to replace Javascript as the scripting language for the Web. As such, it is a Python 3 implementation (you can take it for a test drive through a web console), adapted to the HTML5 environment, that is to say with an interface to the DOM objects and events. -> http://www.brython.info/

This is ambitious and it is worth it ! What do you guys think of it ? ",More People Should Join the Efforts of Brython to make Python the client-side language of the web,7k2eoo,top,120,309,309,0
"Python is great. I love Python. But familiarity breeds contempt... surely there are things we don't like, right? What annoys you about Python?",What is your least favorite thing about Python?,6sbasm,top,611,304,304,0
"Friend told me this yesterday, kind of blew my mind. Had never seen this before.

from https://wiki.python.org/moin/BitwiseOperators
~ x
Returns the complement of x - the number you get by switching each 1 for a 0 and each 0 for a 1. This is the same as -x - 1
",You can use [~i] for reverse indexing rather than [-i-1],5x374h,top,116,307,307,0
,Guido on Python 2.8 at PyCon 2014,22x7wb,top,148,308,308,0
,Dive Into Python 3 now finished and downloadable as HTML and PDF,9jy5u,top,24,304,304,0
,The new PyPI now supports Markdown descriptions,84xwjs,top,34,311,311,0
,Pipenv: A Guide to the New Python Packaging Tool,8elkqe,top,125,309,309,0
,PyPy gets funding from Mozilla for Python 3.5 support,4wwttd,top,26,305,305,0
,10 Useful Python Data Visualization Libraries for Any Discipline,4n5st0,top,43,309,309,0
,"The US Army open-sourced a Python ""network forensic analysis framework"".",2ue120,top,29,307,307,0
,Python is the Language of the Year,1u5j1q,top,133,307,307,0
You may check it [here](https://github.com/dn1z/pgn2gif),I made a tool that generate gifs from chess games,8wrpz4,top,51,305,305,0
"With an Electronics background, I sometimes struggle with software paradigms. There are a few python for engineers courses/books out there that I am looking at.

I was wondering if anyone would be interested in the opposite as well. An Electronics for CS/Programmers book/course. And if yes, what are the key areas/topics that confuse you.

Thanks.
","Would anyone be interested in an Electronics for Programmers book? If yes, what topics?",6w1x4z,top,67,305,305,0
,Grumpy: Go running Python!,5m0irq,top,83,303,303,0
,"Remember ""Minecraft in 500 lines of python? We're rewriting it into a game framework.",4f9jqo,top,37,305,305,0
,I just created a simple script that will allow you to download youtube videos as audio and video,90uopl,top,78,301,301,0
,#PyCon 2016. Guido van Rossum the founder of Python programming language explained very beautifully why does python exists in the World today.,7n6wyo,top,27,304,304,0
"**Edit:** **[GITHUB LINK](https://github.com/brumafriend/BrumaGame)** TO CODE.  

^A ^rough ^roadmap ^can ^be ^found ^[here](https://github.com/brumafriend/BrumaGame/blob/master/Roadmap).

Made with python3, also it's a ""console game"" AKA all text.


How the game works:  
You have an army and a population, which number 5000 and 25000 respectively. Your population does not include soldiers. The aim is to conquer all 6 of the other countries there are right now: _UK, USA, France, Germany, Spain and Russia_.

You can lose in two ways. Firstly, if your population & army is so small that you can't win any war or explore to find more soldiers. Secondly, and most importantly, through **tension**:

Tension starts at 10%.  
Winning a war decreases tension.  
Losing a war increases tension.  
If tension is > 50% there is a chance there may be a civil war which can defeat you or severely damage your army and population numbers.

The mechanics:

**Conscription**: Conscription can allow you to add to an army's numbers by recruiting civilians. Your army can only get to 10,000 members through conscription and for each 1000 people conscripted, **tension** rises by 10%.

**Exploring**: You need 400 civs and 100 soldiers to explore. Exploring can result in gaining civilians and soldiers, this also decreases tension. It can also result in disaster - making you lose the people sent out and causing an increase in tension of 20%.

**War**: The most important aspect of the game is war. Waging war against another country is simple; winning is not. Your chance to win is **x/(x+y)*100**^* with x being your troops and y being the enemy's. So, if you have equal numbers then there's a 50% chance you win. Upon winning, tension is decreased and you gain troops. You can't defeat the same country twice. Upon losing, tension increases and you roughly a quarter of your troops. You can try to attack the country again at a later date.

**Money**:  Money can be used to purchase soldiers. In a desperate situation? Buy your way out of it! You start with $50,000. Winning wars earns you money, losing wars loses you money. Money can also be earned by exploring.

**Parades**: Country tension too high? Have some fun! A parade costs $10,000 but it will reset your tension to zero percent, giving you a second chance at retaining authority! A parade does not come without risk. There is a 5% chance that the parade will end in disaster, causing a 51% increase in tension (meaning a civil war is possible) and costing you an extra $10,000!

**Tax:** Low on money? Tax people. Not surprisingly, taxation isn't popular and, whilst raising funds for war, will also result in a huge increase in tension. Taxation should only really be used in emergencies or if you have a very low level of tension. For each person taxed, you gain $1. The tension increase per tax is: **(n)*0.00092** with _n_ being the number of people taxed.

**Political Belief:** (as of 01/12/2017) There are currently three political beliefs you, as a country, can adopt free of charge! You can only set your belief once (it cannot be changed), so make it count. If you become Communist, you have a higher chance to win a war. If you become Conservative, you gain less tension from defeats and failures. If you become Liberal, the chance of a civil war breaking out when your tension is above 50% is lower.



^_edit_: ^Wow. ^Thanks ^for ^the ^support ^guys. ^I'll ^try ^to ^update ^the ^game ^and ^update ^the ^github ^with ^it. ^The ^advice ^has ^been ^helpful ^and ^if ^any ^of ^you ^want ^to ^help ^me ^with ^the ^creation ^of ^the ^game ^in ^any ^way, ^feel ^free ^to ^send ^me ^a ^message.

_Edit 2_: Thanks for the gold! :D As I've already said, the support has been immense.

*As of 10:55, 18/11/2017. Thanks u/ice_wendell!",I made a crappy game that you might like.,7dm6sm,top,77,308,308,0
,A complete guide to Pandas for Beginners,6q5utv,top,22,307,307,0
,Scikit-Learn Cheat Sheet: Python Machine Learning,5nr0uk,top,14,304,304,0
,A 3D Modeller in Python in less than 500 lines,4vfus2,top,15,301,301,0
,7 shortcuts of a highly effective Sublime Text user,78gkgn,top,94,305,305,0
"I started learning Python, since it's an under-taught industry standard.  I know Java, C, C++ and varying knowledge of other languages...and Python...ITS BEAUTIFUL.  

As I learn the differences in structure, I feel like crying tears of joy.  Gone are the horrible days of having to meticulously define and add language-specific formats (Visual Basic makes me physically hurt sometimes).  You can even just straight-up make a list with multiple primitive types...and you don't have to write and import 3-4 different lines of code to do it.  

I know that posts like this aren't particularly interesting, but holy fuck, Python is just so cool that I can't help myself.  I feel like learning Python is as an ephiphany; it's just so efficient and effective.  

It's a shame that universities and other educational systems are so slow to embrace Python as well: from database administrators to a former executive of Sun Microsystems (Bill Raduchel), businesses want people that know Python.  However, after my brief experience, call me a convert because this is awesome.  

EDIT:    
import have as hath",I Hath Witnessed the Glory That Is Python,4fhuao,top,248,298,298,0
,Pip will be included in Python 3.4! (PEP 453 -- Explicit bootstrapping of pip in Python installations),1oz5ct,top,41,303,303,0
,"I hacked a quick script to download books from Humble Bundle in batch. Just wanted to share, I hope it's useful to someone.",9b0gpn,top,42,300,300,0
,10 common security gotchas in Python and how to avoid them,8rxbab,top,54,301,301,0
"It's sad to see that a large amount of daily posts in this subreddit are self promoting articles and tutorials. While, this is not necessarily bad, I think it's currently not really working.

The problem (apart from the spam) is that those tutorials are many times not very well built and others might follow them for learning purposes which would lead to frustration.


My proposal is to add some required tags for tutorials.

- Feedback: for authors who are posting own writings and ask for feedback.
- Recommend: for OPs that discover a tutorial that want to share AND personally recommend.
- Request: for redditors who stumble on a tutorial and want a second opinion on whether it's good enough or for requesting a tutorial.


Ps. Actually could use the same tags for other content as well. 

What's your thoughts? 

",[PROPOSAL] fixing the tutorial spam,80d041,top,69,300,300,0
,10 Myths of Enterprise Python,2owcwf,top,144,298,298,0
,Python 3.6 dict becomes compact and gets a private version; and keywords become ordered,51xysy,top,63,300,300,0
,"Python crash course for scientists/engineers: With working examples for ODEs, optimization, chemistry, and more.",24ouxr,top,26,303,303,0
"this is probably [old news to some](http://jakevdp.github.io/blog/2013/07/10/XKCD-plots-in-matplotlib/) but i didnt know. try it now!!!

    import matplotlib.pyplot as plt
    plt.xkcd()
",TIL xkcd style plots are a DEFAULT part of matplotlib,4nplu4,top,32,304,304,0
"If you are about to ask a question about how to do something in python, please check out /r/learnpython. It is a very helpful community that is focused on helping people get answers that they understand.

As with any subreddit before you post there, please [familiarize yourself with the rules and guidelines in their sidebar](/r/learnpython/wiki/config/sidebar). The most notable rule is to not just post the question; explain what you've tried and any pseudocode you may have worked on thus far.

/r/learnpython isn't just for homework; you can get help with most aspects of python that you don't understand, even if it isn't for a school project.

> For those who are new to programming, welcome. To those who are returning or are finishing up their schooling, congrats and keep it coming. To those who are lifers in the field I have no words besides keep being cool.

Thanks /u/Needsmoretests for putting it well. Please do read [the much better intro / comment written by Needsmoretests below](https://www.reddit.com/r/Python/comments/3kestk/post_learning_questions_to_rlearnpython/cuxedpo). There's so much to learn, and many places to learn it in! ",Post learning questions to /r/LearnPython,3kestk,top,42,302,302,0
,I developed an open source flight simulator written entirely in Python. Download it on GitHub!,3bv0z8,top,45,295,295,0
"I sometimes do this, especially with college-aged relatives who think of programming as a far-fetched career choice. It's especially girls who think that they need an extreme ability with math to do it.

**EDIT:** The clear winner here is /u/MrValdez's suggestion of the [Python **turtle** module](http://openbookproject.net/thinkcs/python/english3e/hello_little_turtles.html).

It's extremely simple and easy to show a very visible easy to follow effect with very simple, readable code. This shows immediate benefit, rather than requiring a long, complicated setup process (which I would undoubtedly mess up and have to debug live).",You sit down with your machine and a person who knows nothing about programming. What do you show them to try and prove that programming is fun and not just for elites/geniuses/nerds?,3bgjud,top,205,299,299,0
,Beating Candy Crush with Python,1qpbwi,top,45,299,299,0
,Let's remove the Global Interpreter Lock,6tn5vh,top,88,298,298,0
,Python For Finance: Algorithmic Trading,6isetr,top,46,298,298,0
,Happy Pi day to all pythonistas!,2z0xif,top,40,299,299,0
,A new Python library allows Microsoft Excel spreadsheets and Python applications to share data and code,2vx6ws,top,38,299,299,0
I've researched this a bit and it seems like ML libraries are written in Python because Python is popular for ML. Is there any other reason behind this? What made early machine learners and data scientists back Python so strongly?,Why are so many machine learning libraries written in Python?,8u02op,top,95,292,292,0
,How To Create A Botnet With Python,7okur1,top,45,295,295,0
,"Teaching an old dog new tricks — or, how I learned to love Python’s str.format, and gave up on %",2g6ifk,top,109,293,293,0
,The other (great) benefit of Python type annotations,8hmjq9,top,111,299,299,0
,Python illustration by /u/denholmsdead in sticker form. [Details in comments],6kgnvy,top,35,295,295,0
"For example:

## collections.Counter
    # 10 most frequent lines in a file
    collections.Counter(open('file.txt')).most_common(10)

## collections.Deque
    # https://en.wikipedia.org/wiki/Josephus_problem
    def last_to_die(n, k):
        alive = collections.deque(reversed(range(n)))
        while len(alive) > 1:
            alive.rotate(k-1)  # -1 to count the killed soldier
            alive.pop()

        return alive.pop() + 1  # index by 1 not 0

",What is an underused tool from the standard library?,3uoy8f,top,191,295,295,0
,"Why ""1000000000000000 in range(1000000000000001)"" is so fast",352szm,top,22,299,299,0
,One line of code cut our Flask page load times by 60%,2ery37,top,46,294,294,0
"[Documentation here](https://animatplot.readthedocs.io/en/stable/)

**What it is:**

animatplot is a library for more easily producing animated plots. It was built with the goal of making animated plots as easy as static ones. Just feed it data. No dealing with how stuff updates. More time should be spent on the data; not the plotting. Bonus: this library lets you easily add time sliders and pause buttons. This does come at a cost of memory usage (all data must be generate before any plotting not on the fly), but even for a detailed plot it should not be too bad (I made an animated pcolormesh plot with a 100,000 frames without any issue).

Here is a gif of an example:

https://i.redd.it/evfgjj31rle11.gif

If that wasn't a gif. The slider and pause button would work exactly as expected.

**Why I built it:**

I'm a physics/math student, and I've frequently found myself needing to make all sorts of animated plots. Generally things that are solutions to PDEs (light waves, heat equation, etc.). Many of my peers have struggled to produce these animation often resorting to simply clearing and redrawing plots every frame. It can also be useful for displaying iterations of a numerical method to more clearly see if it is working as expected. Ultimately, I saw a need, so I wrote this.

**What I learned writing this:**

I already knew a bit about packaging from a [previous project](https://github.com/t-makaro/nb_pdf_template), but that was a set of templates, not a library, but I still learned a lot about things like how to use a `_version.py` file to have a single location for the version. Mostly, I learned how to document code (using sphinx). I also learned a lot about how matplotlib works (luckily I never had to read any of the c code, only python). I also submitted a fix to matplotlib slated for matplotlib version 3.1. This has also really changed the way that I use matplotlib.

**Near future plans:**

animatplot is built using ""blocks"" to represent ""things"" that are to be animated. I currently have plans for scatter plot and annotation blocks. I plan to move the gallery to use sphinx-gallery once they add support for custom image scrappers. (Sphinx-gallery devs have really been hard at work to finish some stale PRs since I asked about animation support.) I also really need to improve the Pcolormesh block api since it's just not as capable as I would like.

Edit: Perhaps I should mention how long I've been working on this. I originally started this over a year ago, but I have completely rewritten everything and then some, and made the documents in the last month and a bit. The only thing that is the same from the original project is the internal logic for the play/pause button. Matplotlib 2.2 introduced discreet slider bars which inspired (and was critical to) much of the implementation.

Edit 2: Wow, thank you everyone for the positive feedback. Sorry for the packaging issue (damn editable install didn't catch that). It's fixed in version 0.2.2.",Introducing animatplot: Making interactive animated plots with matplotlib easy (my first library),958ulo,top,39,295,295,0
,Launching RemotePython.com: A job board and aggregator for remote Python jobs (and only remote Python jobs) | Calazan.com,5qa7ec,top,25,291,291,0
,How the Circle Line rogue train was caught with data (and Python),5fwiuk,top,16,294,294,0
,I built a slackbot in Python to help me find an apartment in SF,4u3zlo,top,61,297,297,0
,Securely add an NSA backdoor to a Flask web app.,1g0mlh,top,9,300,300,0
,The wildly successful Khan Academy has just creating programming / computer science related videos using Python (all videos are CC licensed),icubh,top,36,296,296,0
,PyPi is currently experiencing downtime due to an upgrade gone wrong,8cojrq,top,40,291,291,0
,FAT Python : the next chapter in Python optimization,6msl3r,top,37,293,293,0
,"API Design: Think First, Code Later",5vs727,top,26,293,293,0
,Rockstar,3dp9t1,top,35,288,288,0
,A Python 3.5+ web server written to go fast,5jqrfa,top,49,295,295,0
,Basic machine learning algorithms in plain Python [X-post r/MachineLearning],83p1t1,top,20,293,293,0
,"""Computational and Inferential Thinking: The Foundations of Data Science"" - free online textbook for Berkeley course, taught in Python",622f3q,top,15,288,288,0
,[video] Using Google Sheets With Python,5wp74m,top,17,295,295,0
,YouTube-dl: open source YouTube downloaded written in Python - Cross platform,4dw823,top,44,290,290,0
,New book teaches Python by hacking Minecraft,40x3ym,top,32,291,291,0
,Is anyone interested in the python cheat sheet I made for myself?,zbwme,top,59,290,290,0
,pip 9.0 is out -- new `pip check` command + many smaller features and bug fixes,5as3yw,top,44,294,294,0
,Python 3.4.3 is out!,2x3w25,top,102,291,291,0
,Simple Minecraft Clone Written in Python - I'm really impressed,1b7bcf,top,51,288,288,0
,Fast and Accurate Face Tracking in Live Video with Python,7s1v6v,top,22,292,292,0
,Growth of major programming languages based on visits to questions on Stack Overflow (high-income vs. non high-income countries).,9cvjjo,top,72,287,287,0
,Domino effect in 10 lines of Blender Python (tutorial),7dqvwj,top,11,287,287,0
"I read a great article on functional programming the other day, and ended up writing some reference code for most of the examples in Python.  
&nbsp;  
Thought I'd share them here in case anyone is interested in the subject.

# @ Gist:
# &nbsp;&nbsp;&nbsp;&nbsp;[examples.py](https://gist.github.com/Enteleform/180648e3f2915e7791097403e19a5464#file-examples-py)
# &nbsp;&nbsp;&nbsp;&nbsp;[results.txt](https://gist.github.com/Enteleform/180648e3f2915e7791097403e19a5464#file-results-txt)

&nbsp;  
### Article:
*So You Want to be a Functional Programmer*

&nbsp; **Pages**:

1. [**Intro, Purity, Immutability**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536)  
2. [**Refactoring, Higher-Order Functions, Closures**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a)  
3. [**Function Composition, Point-Free Notation**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7)  
4. [**Currying, Map, Filter, Reduce**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49)  
5. [**Referential Transparency, Execution Order, Type Annotations**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a)  
6. [**Functional Javascript, Elm, Closing Notes**](https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-6-db502830403)  

&nbsp;  

### Related Resources:

* **Module:** [**Syntax Sugar**](https://github.com/czheo/syntax_sugar_python)  
(*required for the Point-Free Notation example*)  
&nbsp;  
* **Python** > **Docs:** [**Functional Programming HOWTO**](https://docs.python.org/3/howto/functional.html)  
* **Article:** [**Partial Function Application in Python**](http://www.techrepublic.com/article/partial-function-application-in-python)  
* **Article:** [**Python Functions - Map, Filter, and Reduce**](http://www.bogotobogo.com/python/python_fncs_map_filter_reduce.php)  
* **Amazon** > **Books:** [**Functional Python Programming**](https://www.amazon.com/Functional-Python-Programming-Steven-Lott/dp/1784396990)  ","""So You Want to be a Functional Programmer"" examples, transcribed to Python",63spib,top,58,289,289,0
,The only problem with Python 3’s str is that you don’t grok it,5nwvbo,top,151,284,284,0
,Hey everyone! I made my first calculator in Python! What do you think?,4i69m0,top,108,290,290,0
,PyCharm 4.5 released,3627se,top,86,291,291,0
,PyCharm 3.0 Community Edition,1n1dua,top,80,288,288,0
,Must Have Packages and Settings in Sublime Text for a Python Developer,7tbzsp,top,72,286,286,0
,Modify the Python language in 6 minutes,65y5q6,top,11,287,287,0
"I enjoy reading about Reddit's trajectory from LISP to Python, with Pylons as the web framework [""because none of them are any good (Aaron Schwartz, 2005)""](http://www.aaronsw.com/weblog/rewritingreddit).

Python web frameworks have matured greatly, but some are definitively known as more ideal for certain use-cases and less ideal for others. Today, what framework would be a top choice for a Reddit built from scratch? What would be the pros and cons of using this framework?

I'm hoping for some interesting input from people who, unlike me, have worked with many of the frameworks on both small- and large-scale apps.","If Reddit were written from scratch today, which Python web framework would it use and why?",5gdckn,top,164,290,290,0
,Jupyter Notebooks of the gravitational waves calculation,45glz6,top,14,288,288,0
,CPython internals: A ten-hour codewalk through the Python interpreter source code,3r00ue,top,13,287,287,0
,Python 3.5.5 is out!,7vayf0,top,36,287,287,0
,Roadmap to becoming a developer in 2017,605in1,top,44,288,288,0
,General Tips for Web Scraping with Python,6as9jw,top,47,289,289,0
"Just as the title says, i suggest that we should have monthly hiring threads. This way employers will be able to contact the vast pool of python programmers here on Reddit and of course it would be of a great help for the Job Seekers. 
",Can we have a monthly Hiring thread like r/cpp or others too?,57ba50,top,46,284,284,0
,Looks like FSociety writes their scripts using Python,4sgt71,top,94,285,285,0
,A blender script that procedurally generates 3D starships [x-post from /r/programming],4osn9g,top,2,287,287,0
,Pep 498 approved. :(,3k6qi8,top,344,290,290,0
,10 awesome features of Python that you can't use because you refuse to upgrade to Python 3,26y26u,top,177,285,285,0
preferably covers unsupervised learning. thanks,which is the best book for python machine learning ?,76iz6i,top,49,285,285,0
,PyData Seattle 2017 videos are up!,6pcuqe,top,7,284,284,0
,The new f-strings in Python 3.6,5k3p10,top,99,287,287,0
,Python 3 is Winning Library Developer Support,49jqi7,top,66,288,288,0
,Microsoft's Python engineering blog,46wujr,top,64,280,280,0
,"80+ Best Free Python Tutorials, eBooks & PDF To Learn Programming Online",20sn1h,top,18,287,287,0
"I posted about the Masonite Python web framework a few months ago on this r/python here and it received interesting feedback. During this time we received a few contributors who are just super awesome and contributed some awesome features.

We also were able to boost the speed of the framework to serve about twice as many requests in 30 seconds as Masonite 1.6 using some \`wrk\` benchmark testing.

Our contributors are extremely excited for this release and we can't wait to show it to the Python community. We think many of you will love the framework.

Here are a few useful links to checkout the framework:

Slack Open Invitation: [http://slack.masoniteproject.com](http://slack.masoniteproject.com)

The Github Repo: [https://github.com/MasoniteFramework/masonite](https://github.com/MasoniteFramework/masonite)

The Documentation: [https://docs.masoniteproject.com/prologue/introduction-and-installaton](https://docs.masoniteproject.com/prologue/introduction-and-installaton)

Whats New in Masonite 2.0: [https://docs.masoniteproject.com/whats-new/masonite-2.0](https://docs.masoniteproject.com/whats-new/masonite-2.0)

The Core Repository: [https://github.com/MasoniteFramework/core](https://github.com/MasoniteFramework/core)

Creating Your First Blog: [https://docs.masoniteproject.com/creating-your-first-blog/introduction](https://docs.masoniteproject.com/creating-your-first-blog/introduction)

Feedback for the Masonite community is appreciated and  we'll be watching this thread for your thoughts on the framework! We hope to see you guys create some awesome web applications!",Masonite 2.0 Released - The Modern Python Web Framework!,8rjla6,top,111,283,283,0
,Python Programming Tutorials For Beginners,75zf5r,top,49,280,280,0
,A library adding anti-pythonic syntatic sugar to Python,5q13l8,top,69,281,281,0
"hey guys,

So I have been a subscriber of this sub for a while and even though I have been relatively inactive, I have tried to contribute the best I can esp with guys who need help with some code checking.

Well, I have been unemployed for a while now about 6 months and it hit me really hard this Christmas when I could not afford any gifts for my sister who has basically sheltered me the whole time period as i search for a job.  so this new years eve i stayed in and decided to write a small [script](https://github.com/basalamader/Job-Parser) for people like me out there who might be struggling to find a job or even may need information about the average salaries for the position they are looking for. In addition to that it also finds the median of the job you are looking for and compares it with other jobs that you may be interested in.

Requirements:

you will need a plotly account with the user name and api_key given once registered.

you wil also need to download both income and scraps.py and save them in one folder or just download the whole repo.

**Running the code**

you will need the beautiful soup package, pandas and plotly package. I believe everything else comes natively but i will include a requirements.txt file in the git repo.

[**code**](https://github.com/basalamader/Job-Parser). 

Once you have the script downloaded just format the main() at the bottom and add the list of jobs that you need to check for. Currently the default would be main([""python analyst"", ""civil engineer"", ""python""]). The state variable right before the for loop in the main module is currently ""CA"" but you can add your state.

Expected output:
you will get output like 

* [output0](""http://i.imgur.com/cGg8ajy.png"")
* [output1](""http://i.imgur.com/UsPYZFJ.png"")

it will be  a nice formatted pandas DataFrame that shows the jobs that you selected and top ten jobs displayed on the website.  Then the different levels of income with the mean and the median of every job salary.

It will also output the graph of the total number of jobs available in the list and the Quantity of jobs available (x) vs salary(y)

**Next part of the development**

I plan to parse the top 15 jobs looking for key words that can be used to buff(SEO) up your resume. In addition to this i also plan to add dice.com in the results and give the user a chance to choose between the two. I really hope you enjoy this and hopefully are able to have much better luck than I am having getting in the job market.

Edit : happy new year!! Pythonistas",A little script that i wrote in my darkest time,3z7fww,top,42,281,281,0
,PyCharm 4 is out with more of everything you love about Python,2msqvk,top,74,283,283,0
"Hi everybody,

I want to know if python is a good language for creating GUI applications.
I will create commercial programs and I would like a framework which is totally opensource and free. Do you have some libraries for me ?

Besides, I want to know if GUI applications made in Python are fast and efficient. 
I wanted to learn JavaFX with the Java programming language, and even if it's very good, I found it very hard to understand with the actual tutorials on the web. 

Thank you ",Is Python good for creating GUI application ?,8ksxvt,top,210,281,281,0
,Audio Fingerprinting with Python and Numpy,55d33k,top,8,283,283,0
,An Introduction to Stock Market Data Analysis with Python (Part 2),54kzub,top,23,283,283,0
,The Fuck: a Python app that corrects your previous console command,3zhvcy,top,22,287,287,0
,"Raspberry Pi Zero, $5 computer 512mb ram, 1GHz processor.",3ucu5w,top,55,282,282,0
,That's what I call a Python cheat sheet,253jkd,top,45,282,282,0
,You can accidentally override local variables with PEP 572 -- Assignment Expressions,8fokpw,top,103,278,278,0
,Python Decorators From the Ground Up,7h933w,top,20,282,282,0
,"""Make the world better? Remove some Javascript from it"" - Compiling Python to JS @ PyCon 2017",6k1t8q,top,142,279,279,0
"I'm working on a solo project so I'm accountable to nobody. The project is just for fun so I have no financial gains from it. I license it as open source and it's available on github just for people to discover it, but I have 0 watchers and I don't ever expect to get any pull requests or anything. It's just on GitHub so I can use Jenkins CI. It's 100% my own thing and it's just for fun.

I keep doing this thing where I'll implement the functionality, then before I finish or I finish the bare minimum and I try to think about how I refactor the code to work better/to future proof it. I've been doing this over and over and over. Sometimes i implement new things, but lost of the time I'm unhappy with my code and I refactor everything.

I come from a non OOP background so my first ""release"" of my project was 100% functional, no classes at all. Then I watched some videos on better Python and I thought ""yeah ok, these 7 functions all use the same interface: let me just write a Class for it as an interface and subclass all 7 functions.""

Then I watched the ""stop writing classes"" video and thought ""oh ok, yeah these 7 classes all only do __init__ and ""evaluate"""" which is what the video says is bad class design. I liked the idea of a common shared interface though so I refactored and gave the class more functionality.

Then I realized the class was too busy, and it did things that didn't really make sense for the class. So then comes more refactoring: splitting classes etc.

Then I realized that classes aren't ""things"" but are rather ""data"", and that methods aren't ""class functions"" (noice the space), but are rather functions that act on that data (and a class **is** data). This kind of clicked and made sense, so inrefactored again.

Now all my classes are logically ""data"" objects instead of ""thing"" objects, and I have methods that act on the data and nothing more. But the problem is this left me with some functions that didn't really belong to a class, but I thought everything needed to be a class, so I refactored AGAIN and tried to fit those functions in somehow. This meant I had to change some of my ""data classes"" so that it made sense that they owned some of these new methods.

Long story short now I'm looking at my code, and remember this is all just for fun, and I'm seeing a lot of overhead. All these classes, these dependencies, etc, are all overhead when what I really need is a script to call functions. Which is what I had at the beginnig.

At this point I forked my repo and refactored AGAIN into a simple script with functions.

But I'm still not happy because now I have a ton of duplicated functions in various scripts/routines. I could refactor yet again and have a ""library"" but then I realize that these scripts can be generalized. You can see where I'm going ...


How do I stop wasting time like this?",I've wasted so much time refactoring. How do I stop?,6115xb,top,131,282,282,0
,Google Brain's Deep Learning Library TensorFlow Is Out - with python bindings,3s53ev,top,37,281,281,0
,Writing Game boy emulator in Python,9bggdv,top,29,279,279,0
,Practical Python List Comprehension Tutorial,7bemz6,top,22,276,276,0
,why Python is steadily eating other languages’ lunch in scientific computing,1usgc3,top,70,282,282,0
,Parallelism in one line,1tyzw3,top,45,277,277,0
,I made an irritating twitter bot and some people got angry. A few lols ensued.,o9nvp,top,66,281,281,0
,"A useful checklist for build good Python libraries APIs. Based on ""How to make a good library API"" PyCon 2017 talk",6jtits,top,28,281,281,0
,If programming languages were weapons and python would be...,2f5z6x,top,114,278,278,0
,Test-Driven Web Development with Python – The Book,8ukf09,top,21,278,278,0
,Tutorial for GUI in Python 3 tkinter Registration form,88grwq,top,39,280,280,0
,PyCharm Pro is free for students with a valid .edu address,369zja,top,70,282,282,0
,Visual Studio Code is now shipping with Anaconda!,7ygvfq,top,79,277,277,0
,IPython magic to profile and view your Python code as a heat map,6umiru,top,35,277,277,0
,A Neural Network in 11 lines of Python,3dbvrq,top,54,279,279,0
,pyvim -- A Vim clone in pure Python.,33wvc9,top,85,277,277,0
,"Transforming Code into Beautiful, Idiomatic Python (48:59)",1ar853,top,32,274,274,0
,Machine Learning over 1M hotel reviews finds interesting insights,4try49,top,45,272,272,0
,"Damn Russians, breaking into systems and installing 2.7! Don't they know we're on 3 now?",84ok40,top,51,273,273,0
,Matplotlib+Python used to plot every single known object in the Solar System!,7f7xgv,top,21,274,274,0
,[2014] Why Python is Slow: Looking Under the Hood,4r21cl,top,55,272,272,0
,Obfuscate your python script by converting it to emoji icons,8bg4pn,top,56,276,276,0
"Hey guys. Huge Python fan here, and coincidentally a lawyer. 

Python has hugely helped me out with all areas of my legal practice, and as a result, I'm one of the most efficient lawyers I know. (And that's only with some 1000 hours  of study/reading/experimentation/practical use; and I'd love to spend more hours with Python still to deeply understand every inch of its nook and cranny.)

At this point I've definitely gone beyond the basics: i.e. I have comfort with some of Python's more 'advanced' functions already (e.g. decorators, generators, etc); I've gone through or am going through most of the 'proper' Python books (e.g. Fluent Python, Beazley's Python Cookbook, etc); and I've dabbled with many areas in Python (save for the ultra-specialized ones, like machine learning, which I'm keen on taking on in time). 

Python is an amazing tool for me. 

And having read about this for a bit, I now realize that having another tool under my belt to complement Python would be great. And I may have some time on my plate for that one -- just _one_ -- more tool. (It's not that I don't appreciate the beauty of the many different programming languages, but I have to be realistic with the little time that I have.)

My question, therefore: Python is a great Swiss knife for all my main tasks, but if there was one other practical language you would recommend that I focus on and learn in depth and which could be useful for a non-programmer/lawyer, what would it be, and why?

Appreciate the tips guys, thank you.","I'm a lawyer, and I know Python, and want to learn just one more language -- do recommend",6f8ina,top,251,277,277,0
,An simple tutorial on how to effectively use the python debugger (pdb),61afpv,top,14,270,270,0
"The [original article](https://learnpythonthehardway.org/book/nopython3.html) by Zed Shaw ([@zedshaw](https://twitter.com/zedshaw)) on why not to use Python 3.

[Rebuttal](https://eev.ee/blog/2016/11/23/a-rebuttal-for-python-3/) by Lexy([@eevee](https://twitter.com/eevee)). 

Some [really reliable stats on Python 2 vs Python 3](https://www.jetbrains.com/pycharm/python-developers-survey-2016/) by the JetBrains PyCharm team, rebutting the original article.
Note: Python 2 vs Python 3 stats is equal for PyCharm and non-PyCharm users per report details.

Some fresh stats from Andrey Vlasovskikh ([@vlasovskikh](https://twitter.com/vlasovskikh)), the PyCharm Core Developer on [current Python2 vs Python 3 stats in PyCharm](https://twitter.com/vlasovskikh/status/801720613312364544).",A reasonable rebuttal to Zed Shaw’s case against Python 3,5ep5fe,top,226,271,271,0
,A top 10 of the mistakes Python programmers make (x-post r/programming),251jkf,top,67,274,274,0
,Pandas for Data Analysis | SciPy 2017 Tutorial | Daniel Chen [video],81w1si,top,0,274,274,0
"I dont know how others new to python feel , but coming from a C (bit of java and cpp as well) systems background , I totally love python!
I just love how easy it is to build useful stuff , in the last week I have worked on simple but somewhat useful things like :
1) getting weather for your location
2) automating file creations from db data , handling error cases better (as compared to bash the code was much more cleaner )
3) currently working on scraping an ecommerce website for checking on price drops for wishlisted products . Love the power the libraries like pickle,soup, smtp etc provide ! 

I would have taken a considerable amount of time and coding to build any basic useful thing with C , and would cringe everytime I need to implement a map,list etc ! BTW I do know the usecases of C are very different but the freedom python provides just leaves me wide eyed!

Only thing is I know very little of how and why python works the way it works . Am currently going thru more usage based tutorials and googling the rest , but unlike C I have a very slight discomfort of the lvl of abstraction . 

Any good resources for taking my knowledge to the next level and some good projects to take up next?","Coming from a C background, I LOVE PYTHON!",36hewo,top,182,274,274,0
,"Python wins trademark dispute, rival stops calling itself “Python”",1ao170,top,29,272,272,0
,Python 3.6.3 released on Tue. All machines at FB are already running it,74ytqh,top,67,274,274,0
,PEP 557 -- Data Classes,6yvf5e,top,26,274,274,0
"Hi guys,

I just launched https://www.RemotePython.com a few days ago (built in Python of course, with Django).  I started the project as I'm a freelance Python developer and only work remotely, and thought it would be nice if there's a site that only lists remote Python jobs as that would save people time from having to check/subscribe to multiple sites.

Right now, I'm doing the job postings manually.  I have a list of sites that I check daily. I make sure that the job actually involves Python before posting it as sometimes you'll see postings like ""we're a Java shop, but we'd also consider candidates who have experience in Python, etc."", and they get tagged as ""python"" because it appeared in the text.

I hope some of you will find the site useful and any feedback is appreciated!",I built a job board/aggregator only for remote Python jobs,5m3hoy,top,41,268,268,0
,An Introduction to Stock Market Data Analysis with Python (Part 1),5470d7,top,3,270,270,0
,The 2016 Top Programming Languages [Python is in the top 3!],4uydku,top,101,271,271,0
,Must-watch videos about Python,38a8my,top,35,271,271,0
,A Python script that makes video summaries of soccer games based on the reactions of the crowd,29whvi,top,28,272,272,0
,Result of moving Python to Github,7qt4x3,top,26,275,275,0
,Why IPython is the best thing since sliced bread,3mtwje,top,89,269,269,0
"I've always wanted to try to code. I'm a chemistry major at my uni and I finally said 'hey it might help some day' and it might be fun. Never did I expect it to be this fun. I was just sitting here trying to figure out why my code wasn't working (really simple function like input, simple math, and stuff like that) and I figured out why and I fixed it. The satisfaction in the problem solving is amazing. I'm going to start to become a regular around here. Can't wait to learn more!","I just started this past weekend, but can I say that this is absolutely amazing.",8lkqdo,top,57,267,267,0
,Grail: A python web browser from the 90's written by Guido van Rossum,3dthqf,top,10,269,269,0
"I ask this because I just learned something new that I feel like I should have known for a long time... if you define a class with a `__len__()` and a `__getitem__()` method, it *automatically* becomes iterable! e.g.

    class Foo(object):
        def __len__(self):
            return 10
    
        def __getitem__(self, i):
            if i > len(self):
                raise IndexError
            return i

    for i in Foo():
        print(i) 

What's the most recent new Python feature you have learned?",Experienced Python Users: what's the most recent new thing you learned about the language?,32yvjf,top,301,268,268,0
"Alternatively, what is a library that is currently not so easy to use that you think could do with an improvement?",What do you think is more difficult in Python than it should be?,4if7wj,top,641,272,272,0
,"R users: Life is too short, use Python",2qawc1,top,89,267,267,0
"**EDIT: I have released the source code of the website which can be found at [GitHub](https://github.com/lambsteak/usefulpython). I have also written [blog articles](https://usefulpython.com/blog/overview-how-to-build-this-website/) walking through the building, provisioning and deployment of a website like this from scratch. I will be adding more articles to that series and you can sign up there to recieve notifications of new articles.**

I built a Django-based [website](https://usefulpython.com/) mostly from scratch using a base Bootstrap theme for front-end. I used celery-beat to run periodic tasks which scrape site-relevant news from sources such as RSS feeds using BeautifulSoup and requests, I used python-twitter to get relevant tweets to display on the website, and I used a couple of Django apps such as tinymce for text editing in admin site for the content creators, django-celery-beat for easily rescheduling the scheduled periodic tasks from admin site, and other apps such as humanize to format dates and times. I used nginx and gunicorn for serving the web requests and PostgreSQL as database server.

This site provides a basic blogging app with features such as dynamic categories (using post tags), scheduled posts and hidden posts, a WYSIWYG editor for content creators with support for embedding media in articles, a single-threaded comment system, and popular posts section using the article view and comments as the criteria. The app also periodically runs web scraping and other tasks using celery-beat to display upcoming tech events and tech news, and uses Twitter API to display the relevant top tweets. The tasks can easily be configured from the admin site by changing the topics to search for to obtain the news and tweets.

I will next be implementing social-auth based signing up and more advanced text searching tools for searching etc. I also keeping in mind the possibility of using ML algorithms for creating more dynamic and automated posts categories and implementing the ""related posts"" and ""suggested posts"" features down the road.

Here's the link again of the site that I built which went live today: [https://usefulpython.com/](https://usefulpython.com/)
I would greatly appreciate any feedbacks and comments!",One and a half year since starting learning Python this is what I can build,7qmf01,top,65,271,271,0
,The Evolution of Code Deploys at Reddit,6fnf6y,top,3,267,267,0
,"GvR: The transition to Python 4 won't be like the transition to Python 3 (""we've learned our lesson"")",3v62ac,top,217,269,269,0
,"Obfuscating ""Hello world!""",273jas,top,41,266,266,0
,Python.org Redesign Preview,1ah0v6,top,105,268,268,0
,Let’s Create Our Own Cryptocurrency,6nxjbt,top,27,267,267,0
,"""Python for Scientists"" -- free ebook of 400 pp. curated chapters from O'Reilly's Python & Science Stack",3lui23,top,17,265,265,0
,pyNES: Write NES games in Python,3lfje4,top,47,266,266,0
,The Most Diabolical Python Antipattern,2tuhc1,top,73,264,264,0
,(Infographic) Which programming language should I learn first,2sb3sz,top,147,267,267,0
,Data Science Using Python - Explained Very Easily,8k46hb,top,16,266,266,0
,Python Open Source Projects of the Year,7pbe9z,top,20,264,264,0
"Hi all!

Are you a hobbyist, recently graduated,  or junior dev who's looking to improve your programming? 

I'll help you out.

### Who's this guy?

I'm a senior dev / ex SysAdmin doing mostly server side and embedded development at work, most of it in Python.

### What's the catch?

Your code needs to be FLOSS and hosted on either GitHub or GitLab.  It's preferred if you _don't_ already know the tools, but have your own code that you want to figure out and improve.

### What do you Gain?

1. Git basics (workflow)  
2. Code structure & code review  
3. Documentation & work-flow  
4. Planning, ticking and breaking down tasks

### Why do you do this?

This is the stuff I've been working up material for our internal education, and I want to try it out on a group of people who self-select as interested.

### What's the requirements?

You need to have a project, that you can explain what you want to achieve.  I'll __help__ you and _teach_ you how to organize with the things around the actual coding.


### How do I sign up?

The work _will_ be in public, but all communication doesn't have to be.  Send me a notice or a private message, pitch me your project, and I'll see where we get started.


# Thank you all!

So, this exploded overnight, and I've spent quite a few hours of my workday answering questions and messages.

Those of you who signed up, great job so far.

After checking out a few project, here's going to be the plan so far, going on:

- Python packaging ( structure the code on disk)  
- commit messages ( oh my)  
- commit shaping (oh my oh my)  
- Issues and milestones   
- CI systems
- Merge Requests / Pull Requests / Code Review
- Documentation(!)


## Some numbers

25 pitches of as of yet unannounced projects, which may or may not turn into something! 

18 projects which I've started to look at, and tried to provide some level of feedback to all of them. This was a bit more intense than I thought it'd be, and my inbox exploded, so I do apologize for missing out on helping some of you.

5 projects I've declined so far, because they are either proprietary, startups, or people who want me to work for them for free. ",Are you an hobbyist or junior dev looking to improve?,7ivcn6,top,91,267,267,0
,100+ Educational Links For Python - For Beginners to Experts,48x6b2,top,8,269,269,0
,SQLAlchemy 1.0.0 Released,32wbxg,top,80,266,266,0
,"A curated list of awesome Python frameworks, libraries and software. Inspired by awesome-php.",29l5qa,top,24,266,266,0
,The lack of a case against Python 3,5fhs4h,top,241,266,266,0
,A Rubik's Cube solver written in Python that uses webcam input (through OpenCV) to read the starting configuration of a shuffled cube and then guides you through the solution,54bm7v,top,18,263,263,0
,"PSA: pep8 and pep257 (the tools) are getting renamed to pycodestyle and pydocstyle, respectively",4bhwld,top,19,265,265,0
,How I Made Video Streaming 20x More Efficient with Python and C (in porn industry),1dmov9,top,34,261,261,0
"This is a temporary post due to the high influx of reports we have had on the matter of ""this post belongs in /r/learnpython"". Before making a post here, please make sure it would not be better suited for one of our partner subreddits! Thank you :)",Please refer to /r/learnpython for help and advice on Python programming!,8u2mnb,top,37,266,266,0
"Hi all, 

I seriously need to overhaul my RSS feeds on Feedly. I'm looking to add some Python blogs. Which ones do you follow and why?",What Python blogs do you recommend?,6500tz,top,25,263,263,0
,The Python JITs are coming,4z6e34,top,167,267,267,0
,"Announcing General Availability of PyCharm 5: Python 3.5, Docker Integration, Thread Concurrency Visualization, and much more",3r7s26,top,46,268,268,0
,"Hi r/Python, 4 months ago I created a tiny text-extraction algorithm and you guys were fans :) After spending the better part of the last 4 months testing and thinking about extraction algo's for a paper (never again), I think I've landed the big one. Well, it's small actually. 10 lines of code.",3664fx,top,49,264,264,0
,python user detected :P,17khxs,top,69,263,263,0
,Writing your own programming language and compiler with Python,8unx8z,top,30,263,263,0
,Build a voice interface in three minutes with PORCUPiNE,8q2kqj,top,35,265,265,0
"Hi all, 
I made a simple win32 (pypiwin32) wrapper for creating Windows notification. It supports callbacks, user defined icons and some more.

I would be very thankful if you could check out its source code, maybe install it from pypi and play a little bit around :).

I am planning to create some test units and ReadTheDocs project documentation. For now, the only documentation available is readme and docstrings.

Github: https://github.com/malja/zroya

Documentation: http://zroya.readthedocs.io/

Thank you all.",Python notification library for Windows,7y3q3i,top,26,263,263,0
,"Snowy, a pure Python image library accelerated with Numba",9d7uh1,top,24,263,263,0
,Use this python framework to add Siri voice control to any project,6rl3pj,top,20,264,264,0
,"Thonny, Python IDE for beginners",6ahnsb,top,35,263,263,0
,I created a script to change your wallpaper to most upvoted image of the day on /r/wallpapers or any other subreddit. You can use it at startup too!,4ppcmg,top,38,263,263,0
,A Letter to /r/python | Kenneth Reitz's Journal,8kjv8x,top,291,259,259,0
"Wes McKinney’s excellent Python for Data Analysis is five years old this year and due to be replaced; pandas itself has moved from version 0.8 to 0.19 in that time and much has been improved. This series of blog posts by Tom Augspurger was written over six months of last year and gives an excellent overview (and some great detail) on writing modern, idiomatic pandas:

- [Modern Pandas](https://tomaugspurger.github.io/modern-1.html)
- [Method Chaining](https://tomaugspurger.github.io/method-chaining.html)
- [Indexes](https://tomaugspurger.github.io/modern-3-indexes.html)
- [Fast Pandas](https://tomaugspurger.github.io/modern-4-performance.html)
- [Tidy Data](https://tomaugspurger.github.io/modern-5-tidy.html)
- [Visualization](https://tomaugspurger.github.io/modern-6-visualization.html)
- [Time Series](https://tomaugspurger.github.io/modern-7-timeseries.html)",Modern Pandas Tutorials,645tyh,top,27,263,263,0
"Hey folks :) 

I couldn’t find a good and updated list of Python developer or Python programming podcasts online. So I started this list with the best Python podcasts I know of:

__[The Ultimate List of Python Podcasts](https://dbader.org/blog/ultimate-list-of-python-podcasts)__

I'd love to grow this list and make it more useful. I really enjoy listening to these podcasts when I’m at the gym or driving. 

There are some great podcasts about Python development out there but I just couldn’t find a good and up-to-date list.

My (arbitrary) criteria for inclusion on this list are:

* episode download links must work; and
* the podcast must be active (new episodes are coming out) OR at least have an interesting archive with old episodes worth listening to.

I plan to keep this list updated, so feel free to shoot me a PM if you think anything is missing or if you’d like to see your own Python podcast added :)

Thanks!",A list of the best Python podcasts,5d36cl,top,23,260,260,0
"Follow up to: https://theoutline.com/post/1953/how-a-vc-funded-company-is-undermining-the-open-source-community

https://atom.io/packages/autocomplete-python-jedi

As kite.com had introduced changes to the Atom plugin which people felt to be undesirable, we now have a fork which removes all the offending code. Any Atom users out there, please do show your support.

Edit: Previous reddit link: https://www.reddit.com/r/Python/comments/6p5qjt/a_san_francisco_startup_called_kite_took_over_and/",autocomplete-python-jedi: The fork of autocomplete-python,6pi5qf,top,59,262,262,0
,How to Create A New Python Module (and deploy it using pip),5gl1lx,top,39,262,262,0
,"Get Started Learning Python for Data Science with ""Unpacking NumPy and Pandas""",6l3pwv,top,8,255,255,0
,[Python-Dev] PyCharm debugger became 40x faster on Python 3.6 thanks to PEP 523,61hokj,top,58,259,259,0
,TIL that matplotlib can do xkcd style charts,4588s4,top,40,256,256,0
,IPython 2.0 is out and it looks even more awesome,21zvlg,top,102,258,258,0
"I think this is cool:

>>> import this",What's the one code snippet/python trick/etc did you wish you knew when you learned python?,19dir2,top,311,260,260,0
,Rodeo 1.0: a Python IDE on your Desktop,3ollpw,top,98,259,259,0
,SubredditSimulator - Using markov chains to generate posts on reddit (running at /r/SubredditSimulator),3hhw84,top,37,254,254,0
,So you want to write a desktop app in Python,29y462,top,68,258,258,0
,"Building APIs with Django and Django Rest Framework: Free, short book about building APIs. Continues from where the Django ""polls"" tutorial ends.",86i0nl,top,9,254,254,0
,Nanosecond resolution is coming as part of the Python 3.7.0b1 release,7uwry6,top,29,256,256,0
,"K Lars John gives incredible closing keynote to PyCon 2016, received a standing ovation",4m4ihv,top,85,260,260,0
,Python second most paying job after C++,2zkgp4,top,84,256,256,0
,"Finally, a piece of Python code is featured in The Daily WTF ... :/ ",kmur4,top,112,260,260,0
,Talk on how to get into cpython hacking and embedding python interpreters.,91e3vf,top,13,255,255,0
"I would like to convert my python script to an executable file, but without having the user install libraries like opencv, keras, etc. which I import in my script. Any idea how I can do this? I just don't want to make every user install all the packages before running my code as an executable. 
",How do I make an executable that doesn't require installing any python packages?,82ei5g,top,56,258,258,0
"I recently read the post [*I would like to contribute to open source project, how do I start?*](https://www.reddit.com/r/Python/comments/7y7yop/i_would_like_to_contribute_to_open_source_project/) and it inspired me to start contributing to a project. 

What projects have some or all of the following characteristics?

* Are important to Python or the community (people depend on it, has the potential to be very useful for the community going forward).
* Have few contributors or maintainers
* Are in need of new features, refactoring, or otherwise have existing issues.
* Other reasons that may stand out as reason for contributing to a project.

I want maximize the benefit that my time contributing may have for the community, but I'm new to contributing to open source and don't have a great understanding of the space right now in relation to Python.",What open source python projects are in need of contributors?,7y9suj,top,60,257,257,0
"Source: https://github.com/kingbuzzman/vodafone_annoy

Live: https://twitter.com/kingbuzzm4n/with_replies

**Update: ** I've added wireless stats, more comments to the code, thanks for all the constructive criticism ",Currently annoyed at my ISP so i did a thing to annoy them on twitter,6qhlz4,top,178,259,259,0
,XKCD plots in Matplotlib,3o3ohq,top,22,256,256,0
,A python terminal viewer for browsing reddit,2xmo63,top,43,254,254,0
,The first stable release of PyPy3: support for Python 3!,28o9u9,top,57,255,255,0
,"I wrote software for laser cutting fractals with robot arms in python, emulating the Python Turtle library. Code in the description!",7u9pp4,top,18,256,256,0
"Hi guys,

We just released one of the biggest ever [CheckiO.org](https://checkio.org) upgrades. Here you can find a link on a short video where I explain some details of this release https://www.youtube.com/watch?v=7PpTQoj6k7k . We added ClassRooms that can be used by teachers and instructors https://www.youtube.com/watch?v=RiLka87gMFc . We also added a list of [OpenSource projects](https://py.checkio.org/projects/filter/opensource/) that fit nicely for new contributors.

Check what we are doing and let us know what you are thinking about it.
",CheckiO.org - game for Python and JavaScript coders,52qifv,top,35,258,258,0
,Top Data Scientists to Follow and Best Tutorials on GitHub,3e7lpo,top,18,256,256,0
,Python without an operating system,345o5j,top,22,256,256,0
,[Fast Pandas]: A Benchmarked Pandas Cheat Sheet for Optimal Performance.,85cp50,top,18,256,256,0
,First drawing using Python Turtle Graphics. Thoughts?,6ojl17,top,42,255,255,0
,The many uses of _ in python...,5ph572,top,18,255,255,0
"I've published a two part tutorial series on building basic Telegram Chatbots using python. I focus on explaining every step instead of using frameworks. Feedback appreciated! 

Part 3 will be a live video tutorial where I demo how to deploy the bots to a vps. Expected mid Jan. 

Part 1: https://www.codementor.io/garethdwyer/tutorials/building-a-telegram-bot-using-python-part-1-goi5fncay

Part 2: https://www.codementor.io/garethdwyer/tutorials/building-a-chatbot-using-telegram-and-python-part-2-sqlite-databse-backend-m7o96jger

Github: https://github.com/sixhobbits/python-telegram-tutorial",Tutorials: Building Telegram Bots using Python,5hctvj,top,19,253,253,0
,Why [] is faster than list(),35ytab,top,49,256,256,0
,Cracking passwords with Python (the wrong way),247qza,top,56,254,254,0
"My goal from the beginning of this project was to create a 100% replica of the first level of Super Mario Bros using Python. I would say my version is about 90% there. At a later date I'll probably recode it to actually use a tilemap instead of my weird idea of using a background and stretching to fit an arbitrary aspect ratio. There are a few really minor features I didn't feel like adding, mostly because I'm tired of working on this project for two straight months.

To be honest, if I'd known how much work it would be to recreate Super Mario Bros, I'd have chosen a different project.  I always assumed Mario was a pretty simple game, but it's actually quite complicated. Adding powerups, enemies, updated overhead information, music and sound effects, not to mention the physics of Mario and his animations, made it quite challenging.  I hope you like it!

Here's the repo. Controls are arrow keys, 'a' for jump, 's' for run/fireball.  You'll need to install [pygame](http://http://www.pygame.org/download.shtml).  

https://github.com/justinmeister/Mario-Level-1

EDIT:
Thanks for all the kind words. You guys are great. I know this isn't /r/learnpython, but for anyone interested in getting into pygame, here are the resources I used to learn:

[Invent with Python](http://inventwithpython.com)

[Program Arcade Games with Python and Pygame](http://programarcadegames.com)

[Mekire's github](https://github.com/Mekire)

[Mario and the state pattern](http://paarsgames.nl/2013/07/29/animate-mario-using-pygame/)

[The State Pattern](http://gameprogrammingpatterns.com/state.html)

EDIT 2:

For those with problems getting pygame to work, here are some tips from the comments:

[If there is an 'unrecognized music format'](http://www.reddit.com/r/Python/comments/1ymn1w/i_recreated_the_first_level_of_super_mario_bros/cfm09hs)

[If 'no module named pygame'](http://www.reddit.com/r/Python/comments/1ymn1w/i_recreated_the_first_level_of_super_mario_bros/cflys9n)

[If you want to change the keybindings](http://www.reddit.com/r/Python/comments/1ymn1w/i_recreated_the_first_level_of_super_mario_bros/cfm5nzr)

[If you're unsure how to navigate github to get the game going](http://www.reddit.com/r/Python/comments/1ymn1w/i_recreated_the_first_level_of_super_mario_bros/cflvwxe)

EDIT 3: Heh, someone posted this at [Hacker News](https://news.ycombinator.com/item?id=7284062). A little less positivity over there.  Oh well, can't please everybody. :)",I recreated the first level of Super Mario Bros using python and pygame. [x-post from /r/pygame],1ymn1w,top,50,254,254,0
,TIL: $ pydoc -p 6060 => instant Python docs at localhost:6060,1irhuc,top,23,253,253,0
"JetBrains is having a sale. Everything 50% off.

[JetBrains Products: 50% Off ](http://www.jetbrains.com/store/?fromMenu#edition=personal)",PSA: All JetBrains Products [PyCharm] at 50% off,93ev86,top,80,251,251,0
,Python 3.7: Introducing Data Classes,8d7ddz,top,59,249,249,0
,Writing Python Command-Line Tools With Click (Tutorial),7hyjnl,top,34,253,253,0
,Python Top 10 Articles - Oct 2017,79h65p,top,7,250,250,0
"When f-strings were announced I was dubious - .format() is pretty neat, why bother with anything else?

Turns out they are awesome. There's not really much to say beyond that - they don't magically do things that .format() doesn't. But once you start using them, you get hooked. It just feels so surprisingly natural, you wonder why you ever did it any other way. If you don't believe me, just try it! 

Kudos too to PyCharm for the syntax highlighting and autocompletion support - hope every editor picks up support soon (Jupyter notebooks, I'm looking at you!).",f-strings in Python 3.6 are awesome,62kt64,top,237,252,252,0
,Abandoning Go for Python,4sqfte,top,99,256,256,0
"I've started using [PyLint](http://www.pylint.org) on all my code, and writing more formalised unit tests with the [Unittest](https://docs.python.org/2/library/unittest.html) module.

My coding ability shot up after I started using these, as it helped me spot problems fast and correct me as i'm working.

Are there any other tools which you would recommend for general python development?",What Python Tools should I be using on every python project?,3nctlm,top,169,255,255,0
,PythonPedia. One Stop for Python Programming Resources. It's all about Python.,3mbe36,top,23,251,251,0
"It has been brought up a few times that removal of *homework* style posts would make /r/Python a better place. We're not 100% sure if we agree, but we're willing to entertain the idea that it might be right, so from now on we'll be making an effort to remove ""please explain my homework"" style posts from /r/Python.

When we remove a homework post, we'll leave a reply that looks something like this:

> Hi there. You have posted a beginners question to /r/python, however it is far more suited to /r/learnpython, where users are actively interested in helping with beginner topics. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: ""Posting homework assignments is not prohibited if you show that you tried to solve it yourself.""

> Cheers & best of luck!

So now I'm sure you're all asking ""How can I help?"" The best thing that everyone could do to help is the following:

* When you see a beginner's questions *please report them*.
* If you want, *politely* direct them towards /r/learnpython.
* If you report something and it doesn't get taken care of, PM me and I will take care of it at the next opportunity I have.

Please note that our modqueue team isn't extensive, so please allow us a bit of time to get things done! We'll make an effort to keep things neat and tidy, but we certainly don't work in shifts to make it so right now.

Please give us any feedback you want below!","Homework, Learning, and Posts on /r/Python",2voohz,top,56,254,254,0
,30 Python Language Features and Tricks You May Not Know About,1zwocy,top,42,251,251,0
,tqdm - Add a progress meter to your loops in a second,1uvbhs,top,51,252,252,0
,Create *beautiful* command-line interfaces with Python,1kfqb6,top,95,256,256,0
"Over the last few days a number of suspicious looking accounts have started to follow me on twitter. They all pretend to be some sort of generic Python related account. Yet they all have more or less the same bio and all tweets link to very suspicious websites. 

I've blocked and reported all of them, but more and more are coming and I'm seeing legitimate Python accounts following some of them, probably without double checking. 

Did anyone else notice this? Does anyone have an idea of what's going on? Should I report this to twitter and if yes how?

Here's a list of the accounts I've seen so far if someone want's to check them out. **Be careful with clicking any of the links in their tweets and bio!**

* [@learn_pythonx](https://www.twitter.com/learn_pythonx)
* [@python_codecs](https://www.twitter.com/python_codecs)
* [@PythonCodeademy](https://www.twitter.com/PythonCodeademy)
* [@The_PythonTutor](https://www.twitter.com/The_PythonTutor)
* [@Python_Codingz](https://www.twitter.com/Python_Codingz)
* [@Python_4coders](https://www.twitter.com/Python_4coders)
* [@Learn_Python_2z](https://www.twitter.com/Learn_Python_2z)
* [@python_0toHero](https://www.twitter.com/python_0toHero)
* [@ThePythonTutor_](https://www.twitter.com/ThePythonTutor_)
* [@python_4coder](https://www.twitter.com/python_4coder)
* [@Python\_Master_](https://www.twitter.com/Python_Master_)
* [@Python_programz](https://www.twitter.com/Python_programz)
* [@pythonbeginner_](https://www.twitter.com/pythonbeginner_)
* [@PythonsTraining](https://www.twitter.com/PythonsTraining)
* [@LearnsPython](https://www.twitter.com/LearnsPython)
* [@PythonDailyNews](https://www.twitter.com/PythonDailyNews)
* [@python_news_4u](https://www.twitter.com/python_news_4u)
* [@python\_academy_](https://www.twitter.com/python_academy_)
* [@pythonmaster_](https://www.twitter.com/pythonmaster_)
* [@PythonDev_AtoZ](https://www.twitter.com/PythonDev_AtoZ)
* [@LearnPython_toZ](https://www.twitter.com/LearnPython_toZ)
* [@Python_AtoZ](https://www.twitter.com/Python_AtoZ)
* [@Python4Tutorial](https://www.twitter.com/Python4Tutorial)",I'm being followed by an army of spammy Python accounts on Twitter. What's going on?,7wl2hc,top,41,248,248,0
,Making a Stand Alone Executable from a Python Script using PyInstaller,74mdnl,top,58,250,250,0
,I developed an open-source flight simulator for aerial drones written entirely in Python. Download it on my GitHub!,3a4zm6,top,36,254,254,0
,"MypyC, native code Python compiler being developed by Dropbox",97sfeq,top,94,251,251,0
,Python Anywhere Blocked in Russia,8fdf9d,top,58,251,251,0
,The rise of Python for Embedded Systems,6oflnw,top,37,247,247,0
,Armin explains the Flask globals. I've always wanted to know the reasoning behind this design choice..,5kqoou,top,15,249,249,0
,Google Python Style Guide,33gg02,top,122,251,251,0
,"IPython 1.0 is finally released, nearly 12 years in the making!",1jzyi6,top,27,251,251,0
,"macster, ""You're in a starbucks thinking about to build the next killer-app with node.js and mongodb but you don't have a mac? """,1emp3i,top,41,248,248,0
,I build a little http crawler in python to improve my studies.,83nucf,top,27,249,249,0
,"FYI blank_string="""" is faster than blank_string=str() for using empty strings",6ov21k,top,129,248,248,0
,Thonny IDE 2.0 released,564up0,top,46,254,254,0
"Way back then... June, 11th 2013...

http://www.reddit.com/r/Python/comments/1g3xy4/rpython_just_hits_the_50k_readers_mark_congrats/",Congrats!!! r/python just hit the 100K mark!,37kgpr,top,21,249,249,0
,The decorators they won't tell you about,752vin,top,53,249,249,0
,"How to Build A Boba Tea Shop Finder with Python, Google Maps and GeoJSON",71t9xt,top,15,251,251,0
"The Transcrypt Python to JavaScript compiler v. 3.6 now supports fstrings and numbers with dashes. In addition, support for iterators and generators has been added, including 'yield from'. In addition to the arithmetic and relational operators, also bitwise operators can now be overloaded. The compiler can be pip-installed under Python 3.5 or 3.6 and supports static typechecking. Transcrypt precompiles Python 3.6 to compact and fast JavaScript 5 or 6 and can be combined with any JavaScript library. http://www.transcrypt.org",Transcrypt Python to JavaScript compiler now supports Python 3.6,5qt7f5,top,24,252,252,0
,Mochi: a new programming language for Python,2p9t2s,top,34,253,253,0
,/r/buzzfeedbot - A subreddit run entirely by a bot written in Python,72pu98,top,89,249,249,0
,"Core Python dev: ""The next major Python version will be Python 8""",4ct3bx,top,39,248,248,0
,"Give me a bowl and 60 lines of Python, I'll play the Turkish March for you :)",27owix,top,31,250,250,0
,Python3 to become the default Python in Fedora,1p47co,top,104,245,245,0
"To start, I have a BA degree with a poor background in math. I've been working at a tech company at service desk. I recently had my first interview loop for python. I've used python on my own for automating tasks, interacting with APIs, and building my own side projects (using flask, sql, plotly, etc.) 

I was feeling confident enough about my own skillset to apply for an entry-level development job at my current company. The first round went reasonably well. The interviewer gave me a programming problem that was like a riddle to solve. 

The second interviewer did the same thing, except it was way more difficult and everything he wrote on the board was in Java - I don't know Java. He was aware of this and I kept having to ask for clarification about what the code was doing and then 'interpret' that into python. I honestly did not understand the question he was asking me -fundamentally. Like, I just didn't understand what he was trying to ask. After the third time I asked him to repeat it I just pretended to understand. He practically walked me through the problem and did it for me. It was awkward 

The third interviewer came in and also asked me some really hard math riddle. It took me about 15 minutes to understand what the problem was actually about. I had no idea where to begin. He also had to essentially walk me through it and ended up writing all of the code on the board. 

I understood the code. We talked about how the functions could work. But he also told me it was kind of a trick question and that the actual answer involved using floats and modulo to get the answer. 

Cool.

The fourth interviewer cancelled on me as I had basically wasted everyone's time at this point. I went home and got very, very drunk.

I feel completely defeated. I've worked for years to learn Python and try and become a developer. I can't afford one of the expensive bootcamps. I thought I knew enough to get at least an ENTRY-LEVEL job based on what I've talked with other developers. The whole interview was essentially how well can you solve riddles using math. Well, I'm probably never going to be able to do that. 

Should I give up? Are all interviews like this? Where have I gone wrong?",Had my first interview this week... It did NOT go well. Should I be realistic and give up on this as a career path?,9bvyqm,top,164,245,245,0
,17 Line Markov Chain,75664z,top,10,249,249,0
,pip 7.0 released - will auto build and cache wheels for huge speed ups.,36v5ps,top,66,248,248,0
,Why Python is Better than Matlab for Scientific Software,296eeo,top,144,249,249,0
,"My new book ""Hacking Secret Ciphers with Python"" is done. 415 pages, 1700 lines of code, free to download. 100% of proceeds go to the EFF, Creative Commons, and Tor Project.",1cehnx,top,28,249,249,0
,happy() happy() birthday,ggc8p,top,45,246,246,0
,Randall Munroe banned from PyCon 2009,7w284,top,42,249,249,0
,Python Script to generate ASCII Art from an image!,99c949,top,38,244,244,0
,Pyre: Fast Type Checking for Python,8ip1pj,top,38,246,246,0
,"[Hobby Project] I made an FFMPEG tool in python which generates tiled video thumbnails to ""summarize"" a movie",87wwto,top,21,244,244,0
,"Hand-crafted Python 2 and 3 boilerplates with argparse, logging, Flask, pytest, tox, and more",6dgkka,top,33,245,245,0
,"Funding Django is not an act of charity, it's an investment",44xk1e,top,21,247,247,0
,Python 3.0.0 was released 5 years ago!,1s31ah,top,187,245,245,0
,"Web Scraping With Python: Scrapy, SQL, Matplotlib To Gain Web Data Insights",6uhg1e,top,10,247,247,0
,Dismissing Python Garbage Collection at Instagram,5on5nj,top,67,247,247,0
,Import code from Stack Overflow as Python modules,5b31mu,top,41,243,243,0
,Peter Norvig - iPython Notebooks,4au1aw,top,0,246,246,0
,PSA: Python 3.5 FINAL is due tomorrow!,3koclu,top,74,243,243,0
"I'm about to go to my first Python interview and I'm compiling a list of all possible interview questions. Based on resources that I've found [here](http://www.reddit.com/r/Python/comments/dxvtv/favorite_python_interview_question/), [here](http://programmers.stackexchange.com/questions/21917/python-interview-questions) and [here](http://ilian.i-n-i.org/python-interview-question-and-answers/) I noted down the following common questions, what else should I add?

**easy/intermediate**

* What are Python decorators and how would you use them?
* How would you setup many projects where each one uses different versions of Python and third party libraries?
* What is PEP8 and do you follow its guidelines when you're coding?
* How are arguments passed – by reference of by value? (easy, but not that easy, I'm not sure if I can answer this clearly)
* Do you know what list and dict comprehensions are? Can you give an example? 
*  Show me three different ways of fetching every third item in the list
* Do you know what is the difference between lists and tuples? Can you give me an example for their usage? 
* Do you know the difference between range and xrange? 
* Tell me a few differences between Python 2.x and 3.x?
* The with statement and its usage.
* How to avoid cyclical imports without having to resort to imports in functions?
* what's wrong with import all?
* Why is the GIL important? (This actually puzzles me, don't know the answer)
* What are ""special"" methods (__<foo>__), how they work, etc
* can you manipulate functions as first-class objects? 
* the difference between ""class Foo"" and ""class Foo(object)""

**tricky, smart ones**

* how to read a 8GB file in python?
* what don't you like about Python?
* can you convert ascii characters to an integer without using built in methods like string.atoi or int()? [curious one](http://sontek.net/blog/detail/convert-a-string-to-an-integer-in-python)

**subjective ones**

* do you use tabs or spaces, which ones are better?

Ok, so should I add something else or is the list comprehensive?",Python interview questions,1knw7z,top,182,244,244,0
"    > python.exe -c ""import sys; print sys.version""
    2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:53:40) [MSC v.1500 64 bit (AMD64)]

    > python.exe -m test.pystone 1000000
    Pystone(1.1) time for 1000000 passes = 4.98978
    This machine benchmarks at 200410 pystones/second

    > bash.exe

    $ python -c ""import sys; print sys.version""
    2.7.13 (default, Jul 31 2017, 11:24:24)
    [GCC 5.4.0 20160609]

    $ python -m test.pystone 1000000
    Pystone(1.1) time for 1000000 passes = 3.34375
    This machine benchmarks at 299065 pystones/second
",Why is Python 50% faster under Windows Subsystem for Linux?,6qndr6,top,44,244,244,0
,Why Is NumPy Only Now Getting Funded?,6jy927,top,31,244,244,0
,matplotlib 1.5.0 is out -- still alive an kicking with pandas DataFrame support and pretty seaborn styles,3qsubq,top,45,241,241,0
,The new Python.org redesign looks great,1yr1jd,top,67,245,245,0
,Python now has an official binary format for cross-platform distribution,18n1km,top,48,241,241,0
"Hey guys I’m inspired by another op here. I’m still an undergrad so I may not be able to teach you advanced stuffs. Here is my recent side project which may illustrate my ability. http://uoftprofs.com 

If u r interested in this, feel free to pm me. (Btw my purpose of doing this is to make my English more fluent  :p) I will take my lessons seriously I promise.","I also wanna teach someone python, C, web scraping, sql, etc for free",8rqtu5,top,51,244,244,0
,Open-source cryptocurrency portfolio manager written in Flask!,7m18d0,top,14,244,244,0
,How do you make beautiful data visualizations in Python?,688rs3,top,67,244,244,0
,Intro to Natural Language Processing in python,5o3wv3,top,16,243,243,0
,Python 2.7 EOL Countdown,4ka2md,top,164,245,245,0
,PyPy 5.0 released,49ugzu,top,36,245,245,0
,Any disc golfers in this subreddit?,91ktue,top,33,240,240,0
,PyPy2.7 and PyPy3.5 v6.0 dual release,8ez52g,top,18,242,242,0
,"A dead simple Flask boilerplate app with SQLAlchemy, Redis, and User Authentication",5pdf54,top,25,243,243,0
,An Introduction to Scientific Python - Pandas,4r89ra,top,16,244,244,0
,Every Python Package now pre-installed on Repl.it -- an online REPL,59bvlj,top,84,241,241,0
"Just mention my username in a comment along with the username of the person you would like to analyze and /u/opfeels will respond with the analyzation results.

I use the Python Reddit API Wrapper to extract the most recent 100 comments from a user. I take those comments and extract sentences that aren't too long and aren't too short. Each sentence is then analyzed using the NLTK Sentiment Analyzer Vader Module and scored based on how positive, negative, and neutral it is. I then rank the analyzed users in order from most positive to least positive. 

you can also use the website: [ruadick.com](http://ruadick.com)

EDIT: fixed bug ""<bound method Redditor.index of <Redditor: Redditor object>>"" remember the () when calling functions. =)

",I created a bot that analyzes a user's comments and determines if they are positive or negative.,5lgot5,top,898,244,244,0
,How to make your script better,4hzam0,top,77,244,244,0
,Please remove mitsuhiko/*,2kz8av,top,109,238,238,0
,Sims 4 Modding will use python!,2cnq6o,top,65,243,243,0
,CardIO - a rich python library for heart signals,7exmkn,top,14,240,240,0
,PyInstaller 3.3 released,71m2a6,top,41,239,239,0
,Raymond Hettinger: Modern Python Dictionaries: A confluence of a dozen great ideas (PyCon 2017),6cd9oo,top,31,239,239,0
,A introduction to Functional Programming for Python coders,4d6cb4,top,71,239,239,0
,The Top Python GitHub Devs and Repos to Follow (All-Time and Trending),462e9k,top,23,242,242,0
,Kids would rather learn Python than French,3k8yk9,top,73,238,238,0
,Let’s Build A Web Server. Part 1.,2ygcw6,top,18,240,240,0
,Underscores in Python,2w8myi,top,55,242,242,0
,pyformat.info : one stop guide for string formatting in python,8kf2ra,top,12,237,237,0
,SpeechPy - A Library for Speech Processing and Recognition,6zzqvi,top,7,239,239,0
,Why did Pinterest move from Django to Flask.,6jjqxx,top,165,237,237,0
,"""The result of the poll: 29 coredevs dislike 👎 PEP 572 vs 3 coredevs like 👍 it""",8w133z,top,159,235,235,0
,"An introduction to asyncio, that I so wished I had.",8tqnde,top,41,237,237,0
"As a whole. I am just learning python and it seems there are different aspects like Frameworks, Data Science, API, and there are sub categories in those, like you have Frameworks that break down into front end, back end, then you have full stack programmers. How much python do you have to know to actually get a job or is it better to zero in and focus on one? ",Does anyone actually KNOW python?,8k9y1s,top,142,236,236,0
"Hello /r/Python,

First of all, this is a serious post and by no means I am trying to be humorous here. I suffer from post-Python dissatisfaction syndrome, that is, any other programming language seems just not as expressive, as powerful, and as beautiful as Python. I abstain from mentioning any names to start a flame war, but with many languages that I considered, popular-and-hype or old-and-traditional, that was how I felt.

I wanted to ask you if that's also the case for you, **and** whether you can give me some suggestions for a different programming language. I'm looking for a preferably (AOT) compiled language, although my chief concern is execution speed and the expressiveness of Python. Also, a mature or at least good enough ecosystem of libraries is equally important (for GUI at least).

I asked here because I wanted to hear Pythonistas' preferences for another Pythonic language, sorry if it's considered out-of-place. Feel free to contribute your own opinion on any other language that you consider to be Pythonic.

Thanks!",Post-Python Dissatisfaction Syndrome,6c1jnv,top,192,237,237,0
,Kite: Programming Copilot,4erjy4,top,107,237,237,0
,Intel Distribution for Python,4ahzys,top,48,238,238,0
,"According to a recent survey, the average Python developer is paid >$100k",2yoly4,top,144,235,235,0
"If you're using Flask or Werkzeug (independently of if you're planning on upgrading to Python 3) some help is wanted in making sure that the current versions in the git repositories don't break your code (too much).

There were some unfortunate API changes necessary due to the restricted bytes type on Python 3 which might show up:

- Werkzeug's `Headers.linked`was removed without replacement.  The API just does not work without string coercion.
- Werkzeug and Flask `Headers` now returns unicode objects all the time and headers are restricted to latin1.  This is the only thing that makes sense on PEP 3333
- `werkzeug.urls` is now rewritten from scratch without the stdlib and provides URL parsing and joining functions.  Use those instead of the stdlib one if you want code that works on 2.x and 3.x.  They are internally uniforming IRIs and URIs (or at least attempt).
- Some deprecated functionality was removed in Werkzeug and Flask.
- Flask's JSON support differs from the stdlib in unicode behavior on Python 3.  Use `flask.json` instead of `json` or `simplejson` on Python 3 to get unified behavior on 2.x and 3.x regardless of if the stdlib's JSON or simplejson module is used.
- non-silent usage of limited streams in Werkzeug is gone.  I suppose nobody used that anyways.
- Werkzeug's request objects now act as context managers and provide a close method.  This ensures that request resources are properly closed without the help of the garbage collector.
- Fixed some issues with the request object sometimes ignoring the `direct_passthrough` flag.  This might show some errors in your code now.
- Flask's teardown system got reworked due to exception handling changes on Python 3.  This might now have a knock-on effect if you have custom error handlers.  You might now get an error passed to teardown functions which were previously already hidden.  This change is probably for the better due to teardown handlers being used for resource management.

To see if your app works with the changes check out the master branches from github and install them into a virtualenv.

Repositories:

    https://github.com/mitsuhiko/flask.git
    https://github.com/mitsuhiko/werkzeug.git

Thanks :)",Werkzeug and Flask git repositories have early Python 3 Support. Testers wanted.,1fd69b,top,31,238,238,0
,"Some Deep Learning with Python, TensorFlow and Keras",7ficvi,top,5,238,238,0
,Parsing in Python: all the tools and libraries you can use,6o8fjl,top,10,233,233,0
,Basic tutorial for using web scraping for data,6c6puz,top,29,235,235,0
"There was a thread back including some WTFs you can find in Python 2. What are some remaining/newly invented stuff that happens in Python 3, I wonder?",What are some WTFs (still) in Python 3?,5zk97l,top,563,235,235,0
,I wrote a toy JVM implementation in Python,96fr3m,top,72,231,231,0
,How — and why — you should use Python Generators,7i6vua,top,46,234,234,0
,Facebook open sources PyTorch,5oqn6u,top,12,232,232,0
,Analyzing 1.7 Billion Reddit Comments with Blaze and Impala,3l6s9c,top,28,236,236,0
,"Finance outsider wins $100,000 with Python stock trading algorithm. Beats hedge fund pros.",2y2rr7,top,77,237,237,0
,Python for Programmers - a few things I wish I had known about,2curpa,top,30,234,234,0
,Introduction to the A* pathfinding algorithm in Python,2cifcb,top,8,235,235,0
,"Fernando Perez, creator of IPython wins the 2012 Free Software Award from the FSF.",1ax0xm,top,17,236,236,0
,Python and Its Community Enter a New Phase,8ze0i3,top,160,236,236,0
,"Python 3.6 release pushed to next week (Dec. 23, 2016)",5iotha,top,50,234,234,0
" Fellow Scientists, what is your workflow in python?

I am a scientist/mathematician first and programmer second.

Writing code for scientific and algorithmic purposes involves looking at some data, writing something that uses said data, run some algorithms, plot the results, writing some more code that uses the data differently because you understood something from the plot.
Rewriting new and ad-hoc algorithms and when you finely like something, you put it in some special file you keep all the other functions that are useful.

This story, more or less, is what most or the scientists are facing, be it with Matlab, R, Python, or something else.

I have been using python for quite a while now and I like it, but my workflow always seemed a bit suboptimal.

This is what it looks right now:
At any given moment I have 3 windows open:

1) An IPython notebook (called Jupyter notebook now)

2) A IPython qtconsole with the same python as the notebook (this is just an ipython shell)

3) A full IDE for writing the eventual bits of code I like (PyCharm in my case)

The notebook and qtconsole are side by side. (you can lunch a qtconsole with the same kernel as the notebook with the magic command %qtconsole )
The IDE is on the second monitor.

I use the notebook to write small bits of code.
The problem with the notebook that you often need to write very small bits of code like this:

    len(arr)

putting these small fractions of code in the notebook just clutters the notebook thus making it too big to find anything.
In these cases I use the qtconsole (remember, it is connected to the same python kernel so anything you do in the notebook you can also access in the qtconsole)

To write big functions or classes I use pycharm and do

    %run /path/to/script/in/pycharm

to run it in the notebook.

All this is very convoluted, the notebook itself while super nice, isn't very configurable, for example I like much more the cell idea in matlab, where you can run cells and the output is in the shell.

What I tested and didn't like at the end:
1) Spyder - this is the obvious candidate, but it has one major flow, the auto-complete in the the editor is not connected to the python kernel, so even something like this has no autocomplete (in the editor)

    from numpy import *
    a = zeros(10)
    a.<tab>            # this would get autocompleted in the notebook but not in spyder

2) using the Pycharm built in notebook support - it is just super buggy at the moment (and has the same problem as spyder)

3)  sublime with sublimeREPL - this is not even close to the notebook capabilities.

4) JupyterLab - this is in alpha and buggy now

5) IEP - has all the features, but it just supper buggy

My ideal program  will have a good shell support and good cell execution support

So, what is YOUR workflow?, maybe we will learn from each other!","Fellow Scientists, what is your workflow in python?",50t9hz,top,118,232,232,0
,Good logging practice in Python,4lxtlk,top,37,235,235,0
,Python 3 is fine | Sealed Abstract,26n0kd,top,96,230,230,0
,Parallelism in one line,1w6h6g,top,32,234,234,0
"- Running a cProfile on a multiprocessing script. No results.
- Flatten to one process for debugging. No results.
- Profile subroutine in script directly, instead of through main method. No results.
- Profile script with invalid inputs, just to see if there's an error. No results.
- Profile a built-in Python function. No results.
- Replace profile statement with print(""Hello World!""). No results.

- Check first code line:

        if __name__ == '_main__':

...I'm an idiot. Please, nobody else ever do this.",I'm an idiot.,1r61s8,top,95,235,235,0
,Django 1.5 released,19a0aa,top,36,237,237,0
,lptrace - a tool to trace any running Python program,58aj0r,top,47,234,234,0
,"Google's Deep Dream Code Goes OPEN SOURCE on GitHub! : This repository contains IPython Notebook with sample code, complementing Google Research blog post about Neural Network art. See original gallery for more examples.",3h56pv,top,16,237,237,0
,"Python voted ""Best Programming Language"" and ""Best Scripting Language"" in Linux Journal Reader's Choice Awards",e2smi,top,46,234,234,0
,PyCon 2017 VoDs,6d2edm,top,41,233,233,0
,Django 1.10 released,4voiby,top,40,232,232,0
"I was doing some of the warmup exercises at coding.bat, and saw an example of a better way to write in Python. It's nothing much, but it made me realize that I have a basic understanding of what I'm doing now. 

Basically I figured out why this:

    def monkey_trouble(a_smile, b_smile):
        if a_smile == b_smile:
            return(True)
        if a_smile != b_smile:
            return(False)


Can be written much more efficiently as this:

    def monkey_trouble(a_smile, b_smile):
        return(a_smile == b_smile)

Probably not that big of a deal, but it made me pretty happy, so I thought I'd share. 

",Noobcomplishment,37wcjh,top,66,232,232,0
,SQLite: Small. Fast. Reliable. Choose any three.,2aonc3,top,84,235,235,0
"For a calculus class, I wrote a script that calculated the bisection method, it took about 10 minutes, nothing too complicated. I printed the output in terminal and handed it in, getting an A+. It took other students around an hour to do it by hand. 

What about you guys?

EDIT: I showed my work by handing in the source code. The professor accepted it and even admired the idea, said he didn't know that it was possible. Hahaha.",What was your most clever use of a python script in everyday life?,xl2ai,top,432,230,230,0
,Google Facets – An Open Source Python Tool to Analyze & Visualize your data,74u94v,top,9,228,228,0
,PyCharm 2016.3 released,5ehlfo,top,59,232,232,0
"After a previous post on [reddit](https://www.reddit.com/r/Python/comments/384tcu/finally_it_is_now_easy_to_send_emails_in_python/), [yagmail](https://github.com/kootenpv/yagmail)'s back!

There will be a detailed description in the README on [github](https://github.com/kootenpv/yagmail), but here I'll list some features:

- Python 2 & 3
- Simple wrapper on SMTP, with some magic
- Easy to send attachments
- Easy to embed images / html
- And by easy I mean really easy: just point to a local file path or write some html; yagmail will attach/use it!
- No more passwords in scripts

Since the last post:

- Emails are now automatically HTML, with logical fallback texts for non HTML email viewers
- Explicitly send raw text (method `raw`)
- Explicitly embed an image inline (method `inline`)
- Passwordless script extended by `getpass` fallback
- 5 reddit suggestions followed, 6 github issues closed
- Lots of bugfixes

Code to get started:

    from yagmail import SMTP, inline
    yag = SMTP('mygmailusername')
    contents = ['This is the body, and here is an image:', inline('/local/path/img.png'),
                'You can also find an audio file attached.', '/local/path/song.mp3']
    yag.send('to@someone.com', 'subject', contents)

Note that when `contents` is a list, it will consider each item and check if it is a local file. If it is, it will attach it with the right MIME type. Awesome!

Do note that I'm the maintainer, but I'm posting this because I'm committed to making it a great package for people who want to easily send email messages (rather than 20 lines of SMTP/MIME).

I'm also committed to try and resolve all issues within 24 hours on github. Please raise an issue at github, or send me an email using `yag.feedback(message = 'Great job dude!')`

Note that I'm preparing for a first version, and will gladly use all feedback I get :)

As tradition, apologies for the click bait / annoying title!
",Finally it is now even easier to send emails in Python!,3gtps6,top,71,234,234,0
"If you are interested in procedural dungeon generation, [here](http://arcade.academy/examples/index.html#procedural-generation) are few examples written in Python.

* [Recursive division maze-generation](http://arcade.academy/examples/maze_recursive.html)
* [Depth first maze-generation](http://arcade.academy/examples/maze_depth_first.html)
* [Procedural Caves - Cellular Automata](http://arcade.academy/examples/procedural_caves_cellular.html)
* [Procedural Caves - Binary Space Partitioning](http://arcade.academy/examples/procedural_caves_bsp.html)

Visualized using the Arcade library, but the maps are generated with a 2D array first, so it should be easy to visualize them using any system.",Procedural dungeon generation in Python,88zans,top,11,233,233,0
,Python Plotting With Matplotlib (Guide + Example Code),80xhav,top,15,229,229,0
,Python – Basics of Cryptography and API,7t37ql,top,19,227,227,0
,"Raymond Hettinger, Keynote on Concurrency, PyBay 2017",6xkvaz,top,28,226,226,0
,1M rows/s from Postgres to Python,4w60he,top,62,232,232,0
,Boltons: over 100 Python utilities,321d3o,top,51,230,230,0
,Useful Python Functions and Features You Need to Know,1sy7sj,top,31,232,232,0
,Think Python: How to Think Like a Computer Scientist (free Python ebook),1rcdlu,top,40,228,228,0
,Seaborn (visualization library) v0.9.0 released with new relational plots and updated themes and palettes,916cjz,top,36,231,231,0
,3x faster than Flask; Quart as a upgrade to Flask,7fva42,top,56,230,230,0
,left-pad 0.0.3 is now available on PyPi!,4botwh,top,81,228,228,0
,Understand and build your first artificial neural network from scratch with Python and Numpy,973yih,top,35,225,225,0
,How to build a scaleable crawler to crawl million pages with a single machine in just 2 hours,5wo9sf,top,28,228,228,0
"I generally use Consolas on Windows and Ubuntu Lite on Linux. I mostly use vim in terminal/cygwin these days with the occasional Notepad++ when I'm on Windows. The 2 fonts seem to work fine for the most part but there are a few letters, numbers, and characters that look too similar. There was a premium font that made specifically for developers that made a conscious effort to distinguish some of those characters. Naturally I went looking for it on the web but turned up empty handed. I did however stumble upon [this topic on Slant](https://www.slant.co/topics/67/~programming-fonts) and it made me wonder what other fonts developers use? Specifically Python developers",What font do you use for development?,5mif4u,top,181,226,226,0
"Python and Parallelism or Dask by Matthew Rocklin
http://k4webcast.mediasite.com/Mediasite/Play/4216268dc28148c89d8b6e4eba1ad6e51d

Other great talks from this conference could be found here:
http://gael-varoquaux.info/programming/mloss-2015-wising-up-to-building-open-source-machine-learning.html
",Fantastic talk about parallelism in Python,44r5hi,top,24,230,230,0
,Space Invaders created in 1.5 hours with Pygame,3u8pxb,top,68,228,228,0
"Hi all,


I posted a while ago about starting programming and got very motivating answers! 


I've been going pretty hard the last 3-4 months, completed edx 6.00.1x and 6.00.2x as well as 2 or 3 others using python about webscrapping and data science. Also did a course on statistical analysis which made me realise how far behind I was in maths so I started going through Khan's academy from the very basics (can't recommend that website enough!). 


Now I'm simply trying to come up with ideas to fill up my github, working on a traffic simulation  which aims at reducing wait times. It's basic but I think it might be good to have on there.


Anyways I would love to have some help as to what to do next... I work in healthcare and would love to be able to do that 50/50 with programming, both part time. I was aiming towards data science which really interests me but the more I look, the more I find how competitive and difficult it can get and doing it part time seems close to impossible.


What path to follow to aim at doing some freelance work as a self taught python programmer? Should I study some more, go for a 1 or 2 year employment to have something on my resume then freelance afterwards? 
What is in demand in the python field right now? 

Thanks a lot for your help

TL;DR: how should I go about starting as a Python freelance programmer, what is in demand and could be done as part time",From beginner to part time python programmer,95165n,top,72,226,226,0
,"mitmproxy (HTTPS Debugger) 1.0 released, now Python 3 only and with a web interface",5kev64,top,26,224,224,0
,Using Python to model and predict stock price movement. Feel free to use/modify :),538fid,top,106,226,226,0
"Hey /r/Python! I just put a short script together for myself, to grab a bunch of songs from youtube that I want to put on my phone for a trip I'm taking soon. It's nothing impressive, but I'm just sharing the utility in case someone would like a quick way to download all videos (mp4, highest quality) from their favorite youtube playlist.

Feel free to clone or edit my script in whichever way you like. I put together a simple readme on the github page.

Github link: https://github.com/tdietert/youtubePlaylistDL/tree/master

Note: This script does not convert mp4 files to mp3, and downloads the videos at the highest quality available. To make python convert the mp4 into mp3 is a bit more involved, and requires external program I do not wish to mess with at the moment. This is a great area for improvement, if you'd like a small beginner project to work on. Also, you could edit the script so the user could specify their preferred quality, or video format, etc.",A Python script to download all videos in a Youtube Playlist,4283zd,top,43,228,228,0
,Continuum Analytics donates $100k to Project Jupyter,3wz9b3,top,30,230,230,0
,Guido van Rossum on finding his way,2gtegk,top,75,225,225,0
,Qt for Python 5.11 released - Qt Blog,8qrgef,top,60,223,223,0
"I want something that is like [You Don't Know JS](https://github.com/getify/You-Dont-Know-JS), but for Python. I have been self teaching myself programming for the past 6 months, so I am still not much accustomed to the dry languages of the docs or technical books.(I find them boring, I guess it's just noob things) So I was searching for something with a more approachable language.",What is a good book to get to know the nitty gritty of Python?,6307sf,top,59,229,229,0
,Building a Financial Model with Pandas - Version 2,5j6jcg,top,4,226,226,0
,sh : a full-fledged subprocess interface for Python that allows you to call any program as if it were a function.,3h8br2,top,48,222,222,0
,PyFormat -- Using % and .format() for great good,3crljl,top,26,225,225,0
"What are some common misconceptions that people have when programming in Python? Here are a couple that were passed around a mailing list I'm on:

---

>'list.sort' returns the sorted list. (Wrong: it actually returns None.)

---

>Misconception: The Python ""is"" statement tests for equality.

> Reality: The ""is"" statement checks to see if two variables point to the same object.

>This one is especially nasty, because for many cases, it ""works"", until it doesn't :)

>In [1]: a = 'hello'

>In [2]: b = 'hello'

>In [3]: a is b

>Out[3]: True

>In [4]: a = 'hello world!'

>In [5]: b = 'hello world!'

>In [6]: a is b

>Out[6]: False

>In [7]: a = 3

>In [8]: b = 3

>In [9]: a is b

>Out[9]: True

>In [10]: a = 1025

>In [11]: b = 1025

>In [12]: a is b

>Out[12]: False

>This happens because the CPython implementation caches small integers and strings, so the underlying objects really are the same, *sometimes*.

>If you want to check if two objects are equivalent, you must always use the == operator.

---

",Common misconceptions in Python,1e8xw5,top,240,225,225,0
"Featuring Raymond Hettinger and David Beazley

http://pycon.pk

Good to see something pythony happening in my country",First ever PyCon happening in Pakistan,7k5hep,top,36,228,228,0
,From Python to Numpy,5mr5jw,top,7,227,227,0
,Data Science and Machine Learning with Python - Hands On!,5c7gfr,top,20,225,225,0
,Success!! r/Python PyCon2016 meetup!,4ltgit,top,43,226,226,0
,PyQt5 now installable on Linux with pip (Python 3.5),4gu1b3,top,32,224,224,0
,Tiny Python mic audio spectrogram analyzer that runs in your terminal (code in comments),3mmuc7,top,14,227,227,0
,"I'm a high school student who really hates making citations for essays, so I wrote a Python program to do it for me instead. Say hello to PyCite for APA",39tb7w,top,56,225,225,0
,"PyLaTeX 0.8.0 released, generate LaTeX and pdfs easily directly from Python",373las,top,30,227,227,0
,"Python squeezes out JavaScript, C as best starter programming language",1w0p3f,top,135,224,224,0
,Hacking Super Mario Bros. with Python - Pythonic Perambulations,16i7sn,top,8,222,222,0
,Text to speech conversion using python using gtts,98chv9,top,27,224,224,0
"Performance of Sanic-based web servers is pretty good, sure.

The only problem is that people want not only fast but stable servers.

From this perspective the Sanic is awful.

Malicious software can crash any Sanic server easy by out-of-memory error.

Let me analyze several different attack vectors:

1. Send a POST to any (even not existing) PATH.

   Push ""Content-Length"" HTTP header with the maximum available value
   without sending a body.

   You should discover what is a maximum allowed size for POST HTTP
   body.  Sanic by default limiting it down to insane 100 megabytes
   but Reverse Proxy Server like NGINX may reduce it to more
   reasonable 1 MB for example. Even 1 MB is enough.

   Now we have 2 options: 

   a. Without closing the connection open as many concurrent
      connections as you can and push all of them into the state when
      HTTP headers are sent but HTTP body transition is postponed.
      Pretty classic attack for locking all TCP ports on a server by
      opened idle connections.

      Sanic will drop the connection after 60 seconds by default but 
      a minute may be enough for pushing the server into Deny-Of-Service
      state. The problem is not specific to Sanic, consequences are
      relative innocent.

   b. The more interesting case is sending *almost whole BODY* but without
      a couple bytes at the end.

      In fact, Sanic performs a routing and request handling only after
      fetching the whole BODY.

      It means that BODY is COLLECTED IN MEMORY before starting of
      PATH/HEADERS analyzing and processing.  You can declare 100 MB
      request's BODY, send 99 MB of garbage random data and stop
      sending after that.

      Open another concurrent request and do the same. Repeat multiple
      times. Most likely the server will run out of memory *before*
      getting run out of free ports.

      Why out-of-memory error is more harmful than free-ports
      problem?  Because of it, not only web process(es) stops
      processing incoming requests but the whole server goes to
      unresponsible state: physical memory is out, everything becomes
      swapped to disk, CPU is overheated by kernel swapper worker, as
      the result even connecting to a problematic server by SSH becomes
      deadly slow.

      The problem can be reduced by adding monitoring tools for
      looking at Sanic processes memory and killing problematic web
      workers. But default configuration has no such monitors.

      I bet that most web servers in the world are not configured
      properly (at least very many of them).  Also killing a web
      process is a painful procedure, sometimes is not easy to
      distinguish normal occasional high memory consumption from
      malicious attack. As result, normal processing of user data will
      be killed.

2. Use Sanic streaming.

   Sanic has Response Streaming feature.  It is widely used to
   download big data, video streaming etc.

   Assume you know that https://server.com/video is a resource name
   for video stream powered by Sanic.

   How to screw it up?  Really very easy.

   Connect to the server by regular GET https://server.com/video and
   read body SLOWLY.

   Sanic has no Flow Control for streaming data (in fact it has no
   flow control at all).  Data is sent to a peer when the next data chunk
   is available.  If TCP socket's Write Buffer is overloaded -- the
   data is pushed into process memory.  If HTTP peer (browser or
   another client) consumes stream slower than Sanic produces it --
   Sanic process will end up with out-of-memory eventually.

   The problem is very dramatic because it doesn't need a malicious
   software to reproduce -- just slow network connection between
   client and server is enough to explode the bomb.

   As result, a streaming in Sanic is broken by design, the feature
   usage is very dangerous even if nobody wants to knock out your
   server -- it will be demolished by an innocent client with slow
   network.

What to do?

Unfortunately, problems described above are architectural problems of
Sanic framework, they cannot be solved on the user side.

Moreover, fixing is not possible without changing Sanic public API.

Good news: Sanic development team runs so fast that new backward
incompatible changes can land into master without any deprecation
period and related procedures. They did it several times, the project is
still in beta stage.

The only real protection can be done Right Now is *limiting a memory
acquired by Sanic process*. Better to kill an eager process than allow
it to grab all memory with dying not only the Sanic process but the whole
server.

Graceful restart could be very complicated but even rough
""kill -9"" is better than nothing.

A careful review of configuration parameters for both Sanic and Reverse
Proxy (like NGINX) is also very important.
",Sanic: python web server that's written to die fast,876msl,top,40,226,226,0
,One of the most complete guides on how to use HDF5 with Python,85ihvt,top,17,228,228,0
"I'm very interested in neural networks and have been playing around with Googles Tensorflow on Python. I've done some reading on the subject  and I find it all very enjoyable.

However, most of the applications I've seen utilizing neural networks are very large scale in scope: recognizing faces across an online photo library; translating languages, etc.

Is anyone aware of any good projects which use neural networking techniques, but on a smaller scale? I'm thinking of something like the neural network deciding on user preferences, selecting likely favorite images, etc. Something more mundane.",What are some good examples of small scale neural network programming?,6w6d9n,top,42,224,224,0
,How to Create Your First Python 3.6 AWS Lambda Function,68m6iu,top,23,225,225,0
,20 lines of code that will beat A/B testing every time,4dlioz,top,32,227,227,0
,Python 3 in Science: the great migration has begun!,35ec96,top,68,223,223,0
,"I published my repository, pyray for making mathematical visualizations on pypi, added builds and tests.",8tc86g,top,32,220,220,0
,Powerful Python nmap Module,6jgdi9,top,9,223,223,0
,Super easy to use facial recognition api for Python (or the command line),5z8wvx,top,26,221,221,0
,Python For Feature Film: Programming Images To Life,5gg7mw,top,29,223,223,0
,Python Tensorflow Tutorial,4ewsca,top,7,222,222,0
,Django 1.9 Released,3v2n4m,top,34,222,222,0
,"Interactive, test-driven Python coding challenges (algorithms and data structures)",3canf7,top,17,221,221,0
,Unpythonic Python,22m7ew,top,76,223,223,0
,Alex Gaynor -- About Python 3,1u0uvh,top,214,227,227,0
,Python modules you should know.,1qnuyo,top,57,222,222,0
,Announcing Pipenv! (from Kenneth Reitz),5pmb8o,top,68,222,222,0
,My open source python personal assistant,47jdxi,top,66,220,220,0
,Python will have enums in 3.4,1e2nf3,top,126,223,223,0
,"Using Python, I wrote a script to count the frequency of words in all nine of the Star Wars Opening crawls. Excluding the words ""the"" and ""has"".",7tto7p,top,63,221,221,0
"I'll start off:

name|description|stars
:---|:---|:---|:---
[whereami](https://github.com/kootenpv/whereami)|Uses WiFi signals and machine learning to predict where you are|1070
[yagmail](https://github.com/kootenpv/yagmail)|makes sending emails very easy by doing all the magic for you|578
[gittyleaks](https://github.com/kootenpv/gittyleaks)|find sensitive information for a git repo|45
[aserve](https://github.com/kootenpv/aserve)|Easily mock an API / serve files|44
[requests_viewer](https://github.com/kootenpv/requests_viewer)|View requests objects with style|27

--- 
**Redditors/Pythonistas**: what are the projects you are proud of?",Let's do some self promotion: what are your proud python projects?,56lkl0,top,165,221,221,0
,"sooo... I just noticed this, but for some reason Python only rounds numbers up if they're even? it rounds 14.5 to 14, btw",4qkn23,top,135,220,220,0
,"makesite.py - Simple, lightweight, and magic-free static site/blog generator for Python coders (< 120 lines of code)",86m890,top,15,222,222,0
,I made a Raspberry Pi powered Left 4 Dead 2 stat tracker that uses several neat Python libraries to download my L4D2 stats from my Steam Profile page. Hackaday.com wrote an article about it!,5zzvfz,top,19,222,222,0
,500 Lines or Less | A Python Interpreter Written in Python,51p627,top,7,220,220,0
,Install Python or make Python apps portable in one line.,3nhwyf,top,30,222,222,0
,8 World-Class Software Companies That Use Python (And Why),7w542a,top,61,218,218,0
,I wrote a little Python program to approximate the 3D trajectory of a satellite orbiting the earth,7orhpd,top,16,220,220,0
,Decorated Concurrency - Python multiprocessing made really really easy,4jl1io,top,50,217,217,0
,"10 Myths of Enterprise Python (Older and Worthy of a Re-Post, I think)",4ggiwz,top,99,221,221,0
"Sorry if this question has been asked before but reddit's search feature yielded no results

Python 2 accepted both :

>print 'Hello, World!' 

>print('Hello, World!') 


Python 3 however, only accepts 

>print('Hello, World!')


My question is, why did they stop recognizing 
>print 'Hello, World!' 

as a valid syntax. Is there some technical reason for this?",Why did python 3 change the 'print' syntax?,45vok2,top,63,221,221,0
,Use python to find Waldo/Wally,2pxn0o,top,24,218,218,0
,R's popular plotting system Ggplot2 ported to python,1ofhml,top,74,219,219,0
,Requests: HTTP for Humans,ji80g,top,22,217,217,0
,Complete Guide on working with Python and Postgresql,98rhq1,top,25,215,215,0
"[ezscale.science](http://ezscale.science)

This is my first django project. I hosted this project on a server in Beijing, since websites have to register domain in compliance with Chinese law, so I redirected to IP address from a remote server in Germany. This site uses ajax calls to remain on the same page and utilize a ping backend to test whether the website you called is blocked.

You can submit your own website to the list to see if they're blocked.

This is only the test phase -  I have not yet been able to hook it on to apache - the tutorials online didn't work for me. Mobile doesn't work for real time ajax - I used :hover to show elements but I can't seem to get :active working on mobile.. Also, I'll be very appreciative if you find any bugs! Thanks in advance for any help.

EDIT 0: I currently reviewing all websites, if the new websites are not random they'll be added to the main lists. You'll be seeing new website you added but they only appear before you refresh the page..

EDIT 1: I'm going to sleep and this might suffer a Reddit Hug of Death - I'm running this on a very small ECS. 1GB ram and 1mbps of link. But I'll hopefully get it on Apache tomorrow and if successful I'll enlarge the ECS and officially release it.

EDIT 2: Found a huge bug, new entrees are not clickable/direct to wrong places, I'll change this. :: FIXED!

EDIT 3: Thanks for all of your inputs, identified some bugs and git wizardry (hiding). Props to you for recommending slick websites such as [PornHub](https://pornhub.com), [4Chan](https://4chan.org) and [Hentai Haven](http://hentaihaven.com) (pornhub is actually blocked). I'm trying to get it on Apache, had some success but static won't show yet, I'll leave this test server running for a couple of days. Source code is here [Github: Wallpinger](https://github.com/Aperocky/wallpinger), feel free!",A web application that allows you to test in real time which site is blocked in China.,8srnef,top,40,217,217,0
,EdgeDB - The Next Generation Object-relational Database,8ko6rl,top,36,217,217,0
,Google Video vs Youtube / C++ vs Python,87jk3l,top,17,216,216,0
,Guido van Rossum: BDFL Python 3 retrospective,80lpda,top,113,214,214,0
,GitHub - boppreh/keyboard: pure Python cross-platform keyboard hooks and macros,5cqh9s,top,56,215,215,0
,The Py2exe Script That Hacked the DNC,4ulhhq,top,29,216,216,0
"I've mainly used python for basic task automation at work (I'm a network engineer). I'm wondering what modules should every python developer be good with? Are there common ones that everyone should know how to use? I mean more than just sys, time, etc... ",Modules every python developer should know,3yg2u4,top,138,219,219,0
,Python 3.5.1 is out today too! It's a Python release-day hat trick!,3vr63c,top,21,219,219,0
,IPython 4 and Jupyter are out,3go982,top,70,219,219,0
,"Airbnb open source Airflow, a platform to programmatically author, schedule and troubleshoot data pipelines, all written in Python",38mbej,top,53,214,214,0
,"Hey r/python, I've started teaching a course on Udemy about Python GUI programming - over 7 hours of videos available now! It's free for you guys, coupons in comments!",14453f,top,60,216,216,0
,"MediaGoblin, free software alternative to YouTube, Flickr, etc, written in python, launches funding campaign w/ FSF",1194kl,top,28,218,218,0
,"New nice images generated with python and POV-Ray, it's open source!",93nbjn,top,27,221,221,0
,PyCharm subscription 30% off Up until Aug 28th because of team up with Django,6u2696,top,40,218,218,0
I feel like I am at a point in my learning where I should start intentionally reading and  contributing to other people's code. Curious to see what projects set the example to follow.,What is the most impressive (in a good or bad way) Python code you've seen on Github?,5aonm5,top,121,214,214,0
,I used Python to make a timelapse video of a source code of my other Python project (script link in video description).,4tc7vv,top,41,216,216,0
,Xonsh - Using Python as your shell,4mng7l,top,98,217,217,0
,"x_x: someone sent me an excel file, so I made a cli to read it in less",304znx,top,48,218,218,0
,Making your vacation photos (visually) searchable -- the complete guide to building a basic image search engine with Python,2ny021,top,16,219,219,0
,EdgeDB: A New Beginning,8brz8a,top,40,217,217,0
"When OpenAI released Universe, along with the claims that GTA V was going to be supported, I was very excited, since the possibilities for AI in the open world that is GTA V are pretty much endless. Then, however, without any mention of why, GTA V was completely removed from Universe with no glimmer of hope for it to be back again. I was unhappy for a while, and then took it upon myself to do it myself. I wasn't positive where it would go, and still am not, but I knew we could at least read in game frames and surely send input somehow, and that was enough to at least give it a go.

Using Python with mainly OpenCV so far, I've created a tutorial series of my experience getting Python to play Grand Theft Auto 5, with the main first project being to create a self-driving car.

This first batch of tutorials ends with us having a VERY crude self-driving scooter using very rudimentary techniques with OpenCV and purely visual data (no cheating and reading game engine information).

I plan to bring in deep learning in the coming tutorials to see just how far I can take this. 

This series is not too much beginner-friendly, but I try my best to link to beginner friendly tutorials for the topics I do cover, and you can ask questions anywhere if you're confused. It's also not planned out, I am filming as I go, so I make no promises that the paths we take will lead anywhere at all :)...but I can promise at least a very dangerous self-driving scooter. 

Along with the tutorials, I've started a github for the project, where other people can contribute ideas and improvements. 

Finally, it's not required you follow along with Grand Theft Auto V, any game where you drive and can clearly see lanes is do-able for a while at least until I am content with our self-driving car project and try something else in the game. The method we're using to see the screen (screen grabbing) and send input (direct input) should work on a huge list of games. 

**Video and text-based tutorials / code...etc:** [https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/](https://pythonprogramming.net/game-frames-open-cv-python-plays-gta-v/)

**Project's Github:** [https://github.com/sentdex/pygta5/](https://github.com/sentdex/pygta5/)","Python Plays GTA V tutorial series, creating a self-driving car...well scooter :D",64l4pp,top,21,215,215,0
"Comment below with 

SimulateMe! Username

Like so:

SimulateMe! iNeverQuiteWas

A big thanks to everyone who helps out here! I really appreciate it. It's written in python, too :)",Hey /r/Python. I finally got my bot /u/Simulate_Me_Bot off my computer and onto a server. Would you help me test out how it's working?,5idecg,top,2721,212,212,0
,Tutorial on hacking NES games with Python and Lua,43q5uc,top,12,217,217,0
,"PyCharm 3.4 is available! Despite being a ‘dot’ release, it's a true major release supporting Python 3.4, Django 1.7, many new handy features and having optimized performance!",26sffb,top,54,212,212,0
"Here is an article by Greg Baugues from twilio on how to set everything up: 

[https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html](https://www.twilio.com/blog/2017/02/an-easy-way-to-read-and-write-to-a-google-spreadsheet-in-python.html)

&#x200B;

Basically, after being able to access the Google Sheet, you can write a program to constantly check a cell for its value and run it through if...else statements such that Python would execute the appropriate code based on your input.

For example,

if userValue == '1':  
function1()

elif userValue == '2':  
function2()

Have a great day!",Executing commands on Python with Google Sheets,9afdkm,top,6,193,193,0
Writing code alone is great...but you don't learn nearly is much without having someone to look at your code and tell you when it sucks or could be improved. Would anyone be interested in a weekly thread where you can post links to Github and give/receive feedback about the code/design?,Is anyone else interested in a weekly Python code review?,99tdo7,top,22,185,185,0
,Lightweight framework for building command-line applications with Python,9dg27j,top,34,182,182,0
,Speed up your Python using Rust,9cos7f,top,88,180,180,0
,Adding a pipe operator to Python,9915qw,top,65,176,176,0
